{"title": "Building Rules on Top of Ontologies for the Semantic Web with Inductive  Logic Programming", "tag": ["cs.AI", "cs.LG"], "abstract": "Building rules on top of ontologies is the ultimate goal of the logical layer of the Semantic Web. To this aim an ad-hoc mark-up language for this layer is currently under discussion. It is intended to follow the tradition of hybrid knowledge representation and reasoning systems such as $\\mathcal{AL}$-log that integrates the description logic $\\mathcal{ALC}$ and the function-free Horn clausal language \\textsc{Datalog}. In this paper we consider the problem of automating the acquisition of these rules for the Semantic Web. We propose a general framework for rule induction that adopts the methodological apparatus of Inductive Logic Programming and relies on the expressive and deductive power of $\\mathcal{AL}$-log. The framework is valid whatever the scope of induction (description vs. prediction) is. Yet, for illustrative purposes, we also discuss an instantiation of the framework which aims at description and turns out to be useful in Ontology Refinement.  Keywords: Inductive Logic Programming, Hybrid Knowledge Representation and Reasoning Systems, Ontologies, Semantic Web.  Note: To appear in Theory and Practice of Logic Programming (TPLP)", "text": "building rules ontologies ultimate goal logical layer semantic web. ad-hoc mark-up language layer currently discussion. intended follow tradition hybrid knowledge representation reasoning systems al-log integrates description logic function-free horn clausal language datalog. paper consider problem automating acquisition rules semantic web. propose general framework rule induction adopts methodological apparatus inductive logic programming last decade increasing attention paid ontologies role knowledge engineering philosophical sense refer ontology particular system categories accounting certain vision world. such system depend particular language aristotle’s ontology always same independently language used describe hand prevalent artiﬁcial intelligence ontology refers engineering artifact constituted speciﬁc vocabulary used describe certain reality plus explicit assumptions regarding intended meaning vocabulary words. assumptions usually form ﬁrst-order logical theory vocabulary words appear unary binary predicate names respectively called concepts relations. simplest case ontology describes hierarchy concepts related subsumption relationships; sophisticated cases suitable axioms added order express relationships concepts constrain intended interpretation. readings ontology described indeed related other order solve terminological impasse word conceptualization used refer philosophical reading appear following deﬁnition based ontology formal explicit speciﬁcation shared conceptualization domain interest. among things deﬁnition emphasizes fact ontology speciﬁed language comes formal semantics. using formal approach ontologies provide machine interpretable meaning concepts relations expected using ontology-based approach. among formalisms proposed ontological engineering currently used description logics note decidable fragments first order logic incomparable horn clausal logic regards expressive power semantics ontology engineering notably dl-based approach playing relevant role deﬁnition semantic web. semantic vision world wide enriched machine-processable information supports user tasks architecture semantic shown figure consists several layers equipped ad-hoc mark-up language. particular design mark-up language ontological layer based expressive shoin whereas already undergoing standardization process debate around uniﬁed language rules still ongoing. proposals like swrl extend constructs inspired horn clauses order meet primary requirement logical layer build rules ontologies’. swrl intended bridge notorious gaps similar spirit hybridization knowledge representation reasoning systems al-log generally speaking hybrid systems kr&r systems constituted subsystems dealing distinct portions single knowledge base performing speciﬁc reasoning procedures motivation investigating developing systems improve basic features kr&r formalisms namely representational adequacy deductive power preserving crucial feature i.e. decidability. particular combining easily yield undecidability interface reduced hybrid system allog integrates datalog using concept assertions essentially type constraints variables. recently mentioned blueprint well-founded semantic rule mark-up languages underlying form integration assures semantic computational advantages swrl though expressive al-log currently assure deﬁning rules usually considered demanding task viewpoint knowledge engineering. often supported machine learning algorithms vary approaches. approach known name inductive logic programming seems promising case hand common roots logic programming historically concerned rule induction examples background knowledge within representation framework prediction recently moved towards either diﬀerent fragments learning goals paper resort methodological apparatus deﬁne general framework learning rules ontologies semantic within kr&r framework al-log. framework proposed general sense valid whatever scope induction sake illustration concentrate instantiation framework case description. paper organized follows. section introduces basic notions allog. section deﬁnes framework learning rules al-log. section illustrates instantiation framework. section concludes paper ﬁnal remarks. appendix clariﬁes links dls. structural part based allows speciﬁcation knowledge terms classes binary relations classes instances complex concepts deﬁned atomic concepts roles means constructors also state is-a relations concepts instance-of relations individuals concepts interpretation consists domain mapping function particular individuals mapped elements called o-interpretation. also represents many diﬀerent interpretations i.e. models relational part al-log allows deﬁne datalog programs enriched constraints form either constant variable alc-concept. note usage concepts typing constraints applies variables constants already appear clause. symbol separates constraints datalog atoms clause. datalog atoms constraints. constrained datalog program constrained datalog clauses. al-log knowledge base pair knowledge base constrained datalog program. knowledge base acceptable must satisfy following conditions properties state safe interaction structural relational part al-log knowledge base thus solving semantic mismatch datalog interaction also basis model-theoretic semantics al-log. call datalog clauses obtained clauses deleting constraints. deﬁne interpretation union o-interpretation herbrand interpretation interpretation model model ground instance clause αm&γ satisﬁed notion logical satisﬁed consequence paves deﬁnition answer queries. queries al-log knowledge bases special cases deﬁnition answer query ground substitution variables answer correct w.r.t. al-log knowledge base logical consequence answer contains correct answers w.r.t. reasoning al-log knowledge bases based constrained sld-resolution i.e. extension sld-resolution deal constraints. particular constraints resolvent query constrained datalog clause recursively simpliﬁed replacing couples constraints equivalent constraint one-to-one mapping constrained sld-derivations sld-derivations obtained ignoring constraints exploited extend known results datalog al-log. note al-log derivation empty clause associated constraints represent refutation. actually infers query true models satisfy constraints. therefore order answer query necessary collect enough derivations ending constrained empty clause every model satisﬁes constraints associated ﬁnal query least derivation. ground query al-log knowledge base holds answer query computed answer exists constrained sld-refutation qσ). computed answers called success furthermore given query success coincides answer provides operational means computing correct answers queries. indeed straightforward usual reasoning methods datalog allow collect ﬁnite number steps enough constrained sld-derivations construct refutation any. derivations must satisfy conditions deﬁnition particular latter requires reasoning structural component done applying tableau calculus shown following example. constrained sld-resolution decidable furthermore because safe interaction datalog supports form closed world reasoning i.e. allows pose queries assumption part knowledge base complete framework learning al-log represent inductive hypotheses constrained datalog clauses data al-log knowledge base particular composed background knowledge observations. assume framework general meaning valid whatever scope induction therefore datalog literal head hypotheses represents concept either discriminated others characterized deﬁnition constrained datalog clause. term literal linked linking-chain length occurs head linked linkingchain length term linked linking-chain length link-depth term length shortest linking-chain literal linked least terms linked. clause linked linked. clause connected variable occurring head also occur body. second impose constrained datalog clauses compliant bias object identity bias considered extension semantic level syntactic al-log. would like remind reader assumption holds alc. also holds naturally ground constrained datalog clauses semantics al-log adopts herbrand models datalog part o-models constraint part. conversely guaranteed case non-ground constrained datalog clauses e.g. diﬀerent variables uniﬁed. bias starting point deﬁnition either equational theory quasi-order constrained datalog clauses. latter option relies restricted form substitution whose bindings avoid identiﬁcation terms. mechanism generalization intended search process partially ordered space hypotheses deﬁnition generality relation constrained datalog clauses disregard neither peculiarities al-log methodological apparatus ilp. therefore rely reasoning mechanisms made available al-log knowledge bases propose adapt buntine’s generalized subsumption framework follows. deﬁnition constrained datalog clauses al-log knowledge base. least general b-subsumption b-subsumes furthermore general b-subsumption finally equivalent b-subsumption deﬁnition al-log knowledge base constrained datalog clause. variables appearing distinct constants appearing substitution {x/a /an} called skolem substitution w.r.t. lemma constrained datalog clauses al-log knowledge base skolem substitution respect {h}∪b. exists ground substitution headθ headσ bodyσ bodyθ. proof suppose knowledge base bodyσ ioih model minimal o-model least herbrand model datalog part substitution ground substitution bodyσ true covers headσ deﬁnition must also cover headσ thus ground substitution headθ headσ bodyθ true i.e. bodyθ. properties least herbrand model holds bodyσ hence bodyσ bodyθ. suppose ground substitution headθ headσ bodyσ bodyθ. ground atom model covers prove need prove covers construct substitution follows every binding replace bindings none skolem constants occurs headθσ headθ headσ headθ head. since covers ground substitution bodyγ true headγ implies headθγ headγ remains show bodyθγ true since bodyσ bodyθσ bodyθσ ground query follows lemma exists constrained sld-refutation bodyθσ b∪bodyσ. deﬁnition exists ﬁnite constrained sld-derivations bodyθσ clause elements bodyσ input clauses derivation last query constrained empty clause every model bodyσ exists least derivation want turn constrained sld-refutation bodyθσ bodyσ constrained sld-refutation bodyθγ bodyγ thus proving bodyγ bodyθγ. variables body {x/c /cn} {x/t /tn} replace skolem constant sld-derivations models bodyσ obtain constrained sld-refutation bodyθγ bodyγ. hence bodyγ bodyθγ. since model bodyγ also model bodyθγ. theorem constrained datalog clauses al-log knowledge base skolem substitution respect exists substitution headθ head bodyσ bodyθσ bodyθσ ground. proof lemma exists ground substitution headθ headσ bodyσ bodyθ. since skolem substitution deﬁne substitution none skolem constants occurs headθ head bodyσ bodyθσ. since bodyθσ ground lemma bodyσ bodyθσ thesis follows. deﬁning coverage relations make assumptions regards representation observations impacts deﬁnition coverage. choices represent observation either ground deﬁnite clause ground unit clauses. former peculiar normal setting whereas latter usual logical setting learning interpretations representation choice observations scope induction orthogonal dimensions clearly explained therefore prefer term ’observation’ term ’example’ sake generality. logical setting learning interpretations extended al-log observation represented couple ai)ai) containing ground datalog facts concerning individual theorem hypothesis background knowledge observation. covers interpretations w.r.t. qai). proof since qai) ground query al-log knowledge base thesis follows deﬁnition lemma ontology reﬁnement phase ontology learning process aims adaptation existing ontology speciﬁc domain needs particular user section consider problem concept reﬁnement reﬁning known concept called reference concept belonging existing taxonomic ontology light knowledge coming relational data source. taxonomic ontology ontology organized around is-a relationship concepts assume concept consists parts intension extension ext. former expression belonging logical language whereas latter objects satisfy former. formally given concept reﬁnement problem taxonomy concepts ext. therefore structured according subset relation concept extensions. note cref among concepts deﬁned symbols furthermore relies notion satisﬁability w.r.t. would like emphasize includes ontology reﬁnement opposite forms ontology learning ontology extraction mandatory consider existing ontology existing connections. thus formalism like al-log suits well hybrid nature approach ontology reﬁnement problem hand reformulated concept formation problem concept formation indicates task refers acquisition conceptual hierarchies concept ﬂexible non-logical deﬁnition learning occurs incrementally without supervision precisely take large number unlabeled training instances clusterings group instances categories intensional deﬁnition category summarized instances; hierarchical organization categories concept formation stems conceptual clustering diﬀer substantially methods latter usually applies bottom-up batch algorithms whereas former prefers top-down incremental ones. methods similar scope induction i.e. prediction opposite clustering frequent pattern discovery whose goal describe data set. according commonly accepted formulation task concept formation decomposed sub-tasks former consists using internalised heuristics organize observations categories whereas latter consists determining concept extensionally deﬁned subset discovered clustering. propose pattern-based approach former bias-based approach latter particular clustering approach pattern-based relies aforementioned commonalities clustering frequent pattern discovery. descriptive tasks setting characteristic induction distinguishing feature form induction density solution space. setting learning interpretations shown promising dealing spaces deﬁnition hypothesis language background knowledge observations model constructed k∪o. goal characteristic induction interpretations hypotheses true true following subsection clarify nature example throughout section refer ontology σcia concerning countries ethnic groups languages religions world built according wikipedia taxonomies. instance expression middleeastcountry asiancountry ∃hosts.middleeasternethnicgroup. equivance axiom deﬁnes concept middleeastcountry asian country hosts least middle eastern ethnic group. particular armenia iran countries classiﬁed middle eastern. relational data source datalog program. extensional part partitioned portions refers individual cref link represented datalog literal pair called observation. intensional part together whole considered background knowledge problem hand. example al-log knowledge base bcia obtained integrating σcia datalog program πcia based on-line world fact book. extensional part πcia consists datalog facts grouped according individuals middleeastcountry. particular observation air) contains datalog facts called trivial contains constraint distinguished variable furthermore language multi-grained i.e. contains expressions multiple levels description granularity. indeed implicitly deﬁned declarative bias speciﬁcation consists ﬁnite alphabet datalog predicate names appearing ﬁnite alphabets concept names occurring note αi’s taken taken impose ﬁnite specifying bounds mainly maxd maximum depth search maxg maximum level granularity. example want reﬁne concept middleeastcountry belonging σcia light knowledge coming πcia. precisely want describe middle east countries respect religions believed languages spoken three levels granularity deﬁne lcia oqueries cref middleeastcountry generated alphabet {believes/ speaks/} datalog binary predicate names alphabets {language religion} {indoeuropeanlanguage monotheisticreligion {indoiranianlanguage muslimreligion concept names maxd note names taken πcia whereas names γl’s taken σcia. examples o-queries lcia xmiddleeastcountry speaks xmiddleeastcountry ylanguage speaks xmiddleeastcountry yindoeuropeanlanguage believes& xmiddleeastcountry ymuslimreligion trivial o-query lcia cia. output concepts concepts automatically formed input ones taking account relational data source. thus output concept o-query intension answerset correct answers w.r.t. extension. note contains substitutions θi’s distinguished variable exists correct answer bodyθi w.r.t. words extension individuals cref satisfying intension. also reference section note proving o-query covers observation w.r.t. equals proving /ai} correct answer w.r.t. example output concept intension extension answerset {’arm’ ’ir’ ’sa’ ’uae’}. particular covers observation air) w.r.t. kcia. coverage test equivalent answering query w.r.t. kcia output concepts organized taxonomy rooted cref structured directed acyclic graph according subset relation concept extensions. note ordering line set-theoretic semantics subsumption relation ontology languages alc). frequent pattern discovery discovery regularities data frequent pattern intensional description expressed language subset given data whose cardinality exceeds user-deﬁned threshold note patterns refer multiple levels description granularity typically encompasses taxonomy precisely problem frequent pattern discovery levels description granularity maxg frequent patterns expressible multi-grained language {ll}≤l≤maxg evaluated w.r.t. {minsupl}≤l≤maxg minimum support thresholds means evaluation function supp. case support frequent minsupl ancestors w.r.t. frequent blueprint algorithms frequent pattern discovery levelwise search method searches space patterns organized according generality order breadth-ﬁrst manner starting general pattern alternating candidate generation candidate evaluation phases. underlying assumption quasi-order monotonic w.r.t. supp. note method proposed also basis algorithms variant task deﬁned frequent pattern highlights regularity therefore considered clue data cluster. note clusters concepts partially speciﬁed extension known. propose detect emerging concepts applying method frequent pattern discovery maxg levels description granularity maxd levels search depth. adapts kr&r framework al-log follows. multispecial case constrained datalog clauses o-queries ordered according b-subsumption relation introduced section proved quasi-order fulﬁlls condition monotonicity w.r.t. supp also note underlying reasoning mechanism al-log makes b-subsumption powerful generalized subsumption illustrated following example. example checked choosing σ={x/a y/b} skolem substitution w.r.t. bcia∪{q} substitution similarly proved furthermore easily veriﬁed b-subsumes following o-query believes believes& choosing σ={a/a c/c} skolem substitution w.r.t. bcia ∪{q} θ={x/a y/b} substitution note bias. indeed bias admit substitution {a/x c/y} would make possible verify conditions test. since several frequent patterns supporting individuals turning clusters concepts crucial approach. biases help. bias concerns anything constrains search theories language bias constraints clauses search space whereas search bias system searches space permitted clauses choice criterion concept intensions obtained combining orthogonal biases language bias search bias former allows user deﬁne conditions form o-queries accepted concept intensions. e.g. possible state minimum level description granularity whether variables must ontologically constrained not. latter allows user deﬁne preference criterion based b-subsumption. precisely possible state whether general description speciﬁc description w.r.t. preferrred. since total order happen patterns belonging language compared w.r.t. case m.g.d. union example patterns speaks believes amiddleeastcountry barabiclanguage believes speaks amiddleeastcountry bmuslimreligion answer {’arm’ ’ir’} incomparable w.r.t. m.g.d. union speaks believes amiddleeastcountry barabiclanguage believes speaks amiddleeastcountry bmuslimreligion extension subsequent concept {’arm’ ’ir’}. biases combined follows. frequent pattern fulﬁlls language bias speciﬁcation procedure building taxonomy maxg maxd} checks whether concept answerset already exists concept retrieved node answerset added note insertion node imply reorganization keep compliant subset relation extents. node already occurs intension updated according search bias speciﬁcation. order test approach extended system al-quin module post-processing frequent patterns concepts. goal experiments provide empirical evidence orthogonality biases potential combination choice criterion. results reported following obtained problem introduced example setting parameters frequent pattern discovery phase follows maxd maxg minsup minsup minsup thus experiment starts frequent patterns candidate patterns. also experiments require descriptions variables ontologically constrained vary user preferences minimum level description granularity search bias ﬁrst experiments require descriptions variables ontologically constrained concepts second granularity level m.g.d. criterion adopted procedure taxonomy building returns following twelve concepts amiddleeastcountry {arm believes amiddleeastcountry bmonotheisticreligion {arm uae} speaks amiddleeastcountry bafroasiaticlanguage speaks amiddleeastcountry bindoeuropeanlanguage {arm speaks believes believes believes {brn syr} believes amiddleeastcountry syr} believes amiddleeastcountry bjewishreligion syr} believes amiddleeastcountry bchristianreligion {arm syr} believes amiddleeastcountry bmuslimreligion {brn uae} believes believes syr} believes believes {brn syr} organized gcia numbered according chronological order insertion gcia annotated information generation step. qualitative point view concepts well characterize middle east countries. armenia opposite iran fall concepts. rather belongs weaker characterizations suggests procedure performs ’sensible’ clustering. indeed armenia well-known borderline case geo-political concept middle east though armenian usually listed among middle eastern ethnic particular look quite overﬁtted data. overﬁtting allows realize distinguishes israel syria iran presence druze people. note clusters change search bias aﬀects characterization step. experiments restrict conditions language bias speciﬁcation. descriptions variables constrained concepts granularity third level considered. m.g.d. option selected procedure taxonomy building returns following nine concepts amiddleeastcountry {arm speaks amiddleeastcountry barabiclanguage believes amiddleeastcountry syr} believes amiddleeastcountry bjewishreligion syr} believes amiddleeastcountry bchristianreligion {arm syr} believes amiddleeastcountry bmuslimreligion {brn uae} speaks believes believes believes syr} believes believes {brn syr} organized cia. note stricter conditions language bias cause three concepts occurring scarsely signiﬁcant quite interesting therefore language bias prune space clusters. note concepts clusters diﬀerent characterization instead respectively. building rules ontologies semantic task automated applying machine learning algorithms data expressed hybrid formalisms combining horn clauses. learning dl-based hybrid languages recently attracted attention community. chosen language carin-aln therefore example coverage subsumption hypotheses based existential entailment algorithm carin following kietz studies learnability carin-aln thus providing preprocessing method enables systems learn carin-aln rules closely related dl-based hybrid systems proposals arising study many-sorted logics ﬁrst-order language combined sort language regarded elementary respect study sorted downward reﬁnement also considered contribution learning hybrid languages. paper proposed general framework learning al-log. would like emphasize dl-safeness decidability al-log desirable properties particularly appreciated semantic application area. instantiation framework considered case characteristic induction interpretations precisely task frequent pattern discovery application ontology reﬁnement. speciﬁc problem hand takes ontology input returns subconcepts concepts ontology. distinguishing feature setting problem intensions subconcepts form rules automatically built discovering strong associations concepts input ontology. idea resorting frequent pattern discovery ontology learning already investigated several diﬀerences present work conceived ontology extraction instead ontology reﬁnement uses generalized association patterns instead multi-level association patterns adopts propositional logic instead fol. within application area proposes distance-based method clustering conceptual. also relation frequent pattern discovery concept formation never investigated. rather pattern-based approach clustering inspired contact points also found deﬁnes problem cluster-grouping solution integrates subgroup discovery correlated pattern mining conceptual clustering. note neither deal fol. conversely combines notions frequent datalog query iceberg concept lattices upgrade formal concept analysis fol. generally speaking works conceptual clustering concept formation found literature. vary approaches and/or representations adopted. closest work vrain’s proposal top-down incremental distance-based method conceptual clustering mixed object-logical representation. future plan extensively evaluate approach signiﬁcantly expressive ontologies. without doubt lack evaluation standards ontology learning. comparative work ﬁeld would help ontology engineer choose appropriate method. step direction framework presented conceived ontology extraction. evaluation approach follow criteria outlined criteria tradition like measuring cluster validity category utility anyway peculiarities approach evaluation requires preliminary work methodological point view. regardless performance approach beneﬁts. approach advantages dealing expressive ontologies conceptual. approach particular ability forming concepts intensional description form rule support many cases deﬁned rule interchange format working group. another direction future work extension present work towards hybrid formalisms e.g. expressive al-log inspiring prototipical swrl reasoners. also would like investigate instantiations framework e.g. ones case discriminant induction learn predictive rules. ontology language semantic mark-up language publishing sharing ontologies world wide ontology graph turn triples. graph ontology graph written many diﬀerent syntactic forms. however meaning ontology solely determined graph. thus allowable syntactic rdf/xml forms long result underlying triples. lite supports users primarily needing classiﬁcation hierarchy simple constraints. e.g. supports cardinality constraints permits cardinality values simpler provide tool support lite expressive relatives lite provides quick migration path thesauri taxonomies. lite also lower formal complexity supports users want maximum expressiveness retaining computational completeness decidability. includes language constructs used certain restrictions named correspondence expressive shoin thus provides logical foundation owl. mapping reported table meant users want maximum expressiveness syntactic freedom computational guarantees. example full class treated simultaneously collection individuals individual right. full allows ontology augment meaning pre-deﬁned vocabulary. unlikely reasoning software able support complete reasoning every feature full.", "year": 2007}