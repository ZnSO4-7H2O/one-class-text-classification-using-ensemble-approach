{"title": "Graph Kernels exploiting Weisfeiler-Lehman Graph Isomorphism Test  Extensions", "tag": ["cs.LG", "cs.AI"], "abstract": "In this paper we present a novel graph kernel framework inspired the by the Weisfeiler-Lehman (WL) isomorphism tests. Any WL test comprises a relabelling phase of the nodes based on test-specific information extracted from the graph, for example the set of neighbours of a node. We defined a novel relabelling and derived two kernels of the framework from it. The novel kernels are very fast to compute and achieve state-of-the-art results on five real-world datasets.", "text": "abstract. paper present novel graph kernel framework inspired weisfeiler-lehman isomorphism tests. test comprises relabelling phase nodes based test-speciﬁc information extracted graph example neighbours node. deﬁned novel relabelling derived kernels framework novel kernels fast compute achieve state-of-the-art results real-world datasets. many real world learning problems input data naturally represented graphs typical approach solving machine learning tasks structured data project input data onto vectorial feature space perform learning space. ideally good projection ensure nonisomorphic data represented diﬀerent vectors feature space i.e. injective. high dimensional data graphs involved speciﬁc challenges arise especially computational point view. kernel methods considered among successful machine learning techniques structured data. replace explicit projection feature space evaluation symmetric semideﬁnite positive similarity function called kernel function. major advantage kernel methods large possibly inﬁnite feature spaces utilized learning algorithm computational burden dependent complexity kernel function size feature space. unfortunately kernel function graphs whose correspondent feature space projection injective hard compute deciding whether graphs isomorphic believed np-hard problem. consequence order computationally tractable kernel functions graph data certain amount information loss inevitable. kernel functions graphs associate speciﬁc types substructures features. evaluation kernel function related number common substructures input graphs. substructures include walks paths speciﬁc types subgraphs tree structures kernels exception ones computationally demanding used large datasets eﬀective correspondent features relevant current task. recently fast subtree kernel proposed linear complexity features subtree patterns input graphs. kernel computes rough approximation one-dimensional weisfeiler-lehman isomorphism test explicit goal fast compute. paper present kernel functions graphs inspired extensions weisfeiler-lehman isomorphism test. deﬁne kernels whose feature space much larger fast subtree kernel modest increase computational complexity. notation ﬁrst introduced. graph triplet nodes cardinality edges function returning label node. graph undirected otherwise directed. path length graph sequence distinct nodes path cycle. distance nodes length shortest path connecting them. describe weisfeiler-lehman isomorphism test extensions based relabelling process nodes graph introduce functions which instantiated determine isomorphism test constraint codomain must coincide domain role extract speciﬁc information example onedimensional test extracts neighboring nodes {u|u function associates unique numerical value used novel label order well deﬁned canonical representation elements domain deﬁned practically boils deﬁning partial ordering elements. example -dim test elements sorted alphabetically according labels. note -dim test applying li∗+ relabelling graphs obtain multisets node labels {li∗ multisets diﬀerent graphs isomorphic. contrary multisets identical enough information tell whether graphs isomorphic. extensions -dim test proposed increase discriminative power test. idea enrich type information used relabelling phase extension proposed miyazaki considers colour nodes distance elements i.e. tuples ordered according relation generic labelling function. extension oliveira deﬁned paths ordered according sequence labels nodes path. speciﬁcally extracts shortest path lower value shortest paths connecting ∪u∈v minp∈s weisfeiler-lehman kernel framework consider function depending parameter given graph application ﬁxed value diﬀers i-th iteration yields graph original graph labelling function. deﬁnition kernel graphs refer base kernel. extended weisfeiler-lehman kernel iterations depth base kernel deﬁned present main contribution paper i.e. novel kernels instances kernels function returns following directed acyclic graph rooted consists edges appear shortest path connecting order canonical representation ordering nodes described used. function assigns unique numerical value implemented eﬃciently presented maximum number nodes |dr|. shown |dr| maximum node outdegree. computing indices graph worst-case time complexity details). assuming constant worst-case time complexity reduces second kernel propose referred lddk diﬀers ﬁrst base kernel function that ﬁrst computes returns tree resulting breadth-ﬁrst visit starting finally deﬁned kernel trees applied example subtree kernel kernel counts number matching proper subtrees proper subtree tree rooted subtree composed descendants complexity min. assuming constant o|). using algorithm described complexity computing number kernels literature instances fast subtree kernel counts number identical subtree patterns depth obtained setting {u|u ordering elements alphabetically according labels; iii) base kernel odd-sth described instance lddk obtained setting considered fast subtree kernel odd-sth kernel nspdk kernel computes exact matches pairs subgraphs controlled size distance. assessment performance proposed kernels considered real-world table average accuracy results standard deviation nested -fold cross validation fast subtree neighborhood subgraph pairwise distance kodd−sth s−ddk lddk kernels obtained cpdb aids datasets. rank kernel reported brackets. datasets cpdb aids datasets represent binary classiﬁcation problems. ﬁrst four datasets involve chemical compounds represented graphs nodes represent atoms edges bonds them. chemical compounds self-loops. dataset proteins protein represented graph nodes amino acids nodes connected edge less angstroms apart. largest datasets examples respectively. information datasets please refer kernels employed together support vector machine. parameter selected experiments values parameters odd-sth kernel restricted fast subtree kernel optimized parameter kernel nspdk kernel optimized parameters concerning kernels presented article parameters parameters range selected computational time needed calculation kernel matrices roughly comparable i.e. hour modern parameter selection adopt technique commonly referred nested k-fold cross validation following experiments repeated times average results reported. table summarizes average accuracy results proposed kernels state-of-the-art ones considered datasets. mean accuracy reported standard deviation. brackets ranking speciﬁc kernel dataset reported. rightmost column average ranking value datasets kernel reported. considering single datasets dataset nspdk kernels rank ﬁrst. considered datasets either s−ddk lddk outperforms kernels. look average ranking situation clearer. best average ranking competing kernels value s−ddk average ranking lddk performs slightly better average ranking value results clearly show that considered datasets kernel family performs better kernels present literature. paper proposed framework deﬁnition graph kernels based generalization -dimensional test. framework instantiated kernel graphs base kernel. particular analyzed instances inspired decompositional dags graph kernels kernels show state-of-the-art predictive performance real-world datasets computational burden that datasets grows linearly", "year": 2015}