{"title": "Simulating Human Grandmasters: Evolution and Coevolution of Evaluation  Functions", "tag": ["cs.NE", "cs.LG", "stat.ML"], "abstract": "This paper demonstrates the use of genetic algorithms for evolving a grandmaster-level evaluation function for a chess program. This is achieved by combining supervised and unsupervised learning. In the supervised learning phase the organisms are evolved to mimic the behavior of human grandmasters, and in the unsupervised learning phase these evolved organisms are further improved upon by means of coevolution.  While past attempts succeeded in creating a grandmaster-level program by mimicking the behavior of existing computer chess programs, this paper presents the first successful attempt at evolving a state-of-the-art evaluation function by learning only from databases of games played by humans. Our results demonstrate that the evolved program outperforms a two-time World Computer Chess Champion.", "text": "paper demonstrates genetic algorithms evolving grandmaster-level evaluation function chess program. achieved combining supervised unsupervised learning. supervised learning phase organisms evolved mimic behavior human grandmasters unsupervised learning phase evolved organisms improved upon means coevolution. past attempts succeeded creating grandmasterlevel program mimicking behavior existing computer chess programs paper presents ﬁrst successful attempt evolving state-of-the-art evaluation function learning databases games played humans. results demonstrate evolved program outperforms two-time world computer chess champion. ∗www.elidavid.com †nathan netanyahu also aﬃliated gonda brain research center bar-ilan university center automation research university maryland college park despite many advances machine learning artiﬁcial intelligence still areas learning mechanisms yielded performance comparable humans. computer chess prime example diﬃculties ﬁelds. well-known computer games served important testbed spawning various innovative techniques domains applications search automated theorem proving planning learning. addition annual world computer chess championship arguably longest ongoing performance evaluation programs computer science inspired wellknown competitions robotics planning natural language understanding. computer chess researched ﬁelds within lent successful application conventional learning methods enormous complexity. hence chess programs still resort manual tuning parameters evaluation function typically years trial error. evaluation function assigns score given chess position thus critical component chess program. currently successful attempt reported automatic learning parameter values evaluation function based mentor-assisted evolution approach evolves parameter values mimicking evaluation function available chess program serves mentor. essentially attempts reverse engineer evaluation function program observing scores issues given positions. approach relies heavily availability numeric evaluation score position provided reference program. values evaluation function relying solely information available games human grandmasters i.e. moves played. lacking numeric information provided typically standard chess program combine supervised unsupervised learning. organisms ﬁrst evolved mimic behavior human grandmasters observing games best evolved organisms evolved coevolution. results show combined approach eﬃciently evolves parameters interest randomly initialized values highly tuned ones yielding program outperforms two-time world computer chess champion. section review past attempts applying evolutionary techniques computer chess. also compare alternative learning methods evolutionary methods argue latter appropriate task question. section presents approach including detailed description framework applied current problem. section provides experimental results section contains concluding remarks suggestions future research. ﬁrst chess programs could pose challenge even novice player current advanced chess programs strongest human chess players recent machine matches clearly indicate. improvement largely result deep searches possible nowadays thanks hardware speed improved search techniques. search depth early chess programs limited plies nowadays tournamentplaying programs easily search dozen plies middlegame tens plies late endgame. despite groundbreaking achievements glaring deﬁciency today’s chess programs severe lack learning capability words despite seemingly intelligent behavior chess programs mere brute-force searchers. ﬁfty years research area computer games many learning methods reinforcement learning employed simpler games. temporal diﬀerence learning successfully applied backgammon checkers although temporal diﬀerence learning also applied chess results showed three days learning playing strength program rating chess program. wiering provided formal arguments failure methods complicated games chess. issue learning computer chess seen optimization problem. program plays conducting search root search tree current position leaf nodes evaluated static evaluation function. words sophisticated search algorithms knowledge program lies evaluation function. even though automatic tuning methods based mostly reinforcement learning successfully applied simpler games checkers almost impact state-of-the-art chess engines. currently tournament-playing chess programs hand-tuned evaluation functions since conventional learning methods cannot cope enormous complexity problem. underscored following four points. search space smooth unimodal. evaluation function’s parameters chess program highly co-dependent. example many cases increasing values three parameters result worse performance fourth parameter also increased improved overall performance would obtained. since search space unimodal i.e. consist single smooth hill gradient-ascent algorithm hill climbing perform poorly. contrast genetic algorithms known perform well large search spaces unimodal. problem well understood. discussed detail next section even though programs hand-tuned programmers ﬁnding best value parameter based mostly educated guessing intuition. problem well understood domain-speciﬁc heuristic would outperformed general-purpose method view points seems appropriate employ automatic tuning parameters evaluation function. indeed ﬁrst glance appears like optimization task well suited many parameters evaluation function encoded bit-string. randomly initialize many chromosomes representing evaluation function. thereafter needs evolve population highly tuned evaluation functions emerge. however major obstacle hinders application namely ﬁtness function. given parameters evaluation ﬁtness value calculated? many years seemed solution individuals generation play series games subsequently record score individual ﬁtness value. main drawback approach unacceptably large amount time needed evolve generation. result severe limitations imposed length games played generation also size population involved. population size limit seconds game assuming individual plays individual every generation would take minutes generation evolve. speciﬁcally reaching generation would take section present ga-based approach using evolving state-of-the-art chess evaluation functions. that brieﬂy review previous work applying evolutionary methods computer chess. despite abovementioned problems successful applications evolutionary techniques computer chess subject restrictions. genetic programming successfully employed hauptman sipper evolving programs solve mate-in-n problems play chess endgames. kendall whitwell used evolutionary algorithms tuning parameters evaluation function. approach limited success large number games required small number parameters used evaluation function. evolved program managed compete strong programs search depth severely limited. similarly aksenov employed genetic algorithms evolving parameters evaluation function using games organisms determining ﬁtness. again since method required large amount games evolved parameters evaluation function limited success. tunstall-pedoe also suggested similar approach without providing implementation. gross combined genetic programming evolution strategies improve eﬃciency given search algorithm using distributed computing environment internet. david koppel netanyahu used mentor-assisted evolution reverse engineering evaluation function reference chess program thereby evolving comparable evaluation function. approach takes advantage evaluation score position considered provided reference program. fact numeric information simulating program’s evaluation function. words notwithstanding high-level performance evolved program learning process heavily dependent availability information. paper combine supervised evolution unsupervised coevolution evolving parameter values evaluation function simulate moves human grandmaster without relying availability evaluation scores computer chess program. demonstrated evolved program today’s strongest chess programs. encoding parameters evaluation function chromosome straightforward task main impediment evolving evaluation functions diﬃculty applying ﬁtness function however previously mentioned earlier ﬁtness value mentor-assisted evolution issued follows. organism grandmaster-level chess program given positions; position diﬀerence evaluation score computed organism computed reference program recorded. ﬁtness value taken inversely proportional diﬀerence. contrast evaluation scores chess program assumed available paper make databases games human grandmasters. task evolution case thus signiﬁcantly diﬃcult based existing chess program information available consists actual moves played positions considered. although performing search position appears costly process fact consumes little time. conducting -ply search amounts less millisecond typical chess program average machine thousand positions processed second. allows large positions training set. abovementioned process discussed below greater detail results grandmaster-level evaluation function random initialization chromosomes time process applied diﬀerent best evolved organism obtained. comparing best evolved organisms diﬀerent runs observe even though similar playing strength evolved parameter values diﬀer playing style. running supervised evolution process number times obtain several evolved organisms. organism best evolved organism complete evolutionary process. next coevolution phase improving upon obtained organisms. single-population coevolution phase evolved organisms play other ﬁtness function applied based relative performance. completing phase predetermined number generations best evolved organism selected best overall organism. according results next section best best organism improves upon organisms evolved supervised phase. noted before previous attempts applying coevolution failed produce grandmasterlevel evaluation functions. diﬀerence population size small initial organisms already well tuned chess program uses negascout/pvs search conjunction standard enhancements nullmove pruning internal iterative deepening dynamic move ordering multi-cut pruning selective extensions transposition table futility pruning near leaf nodes evaluation function program consists parameters. even though small number parameters comparison programs parameters used cover important aspects position e.g. material piece mobility centricity pawn structure king safety. parameters evaluation function represented binary bit-string initialized randomly. value pawn ﬁxed value serves reference parameter values. except four parameters representing material values pieces parameters assigned ﬁxed length bits parameter. obviously many parameters bits suﬃce. however allocating ﬁxed length bits parameters ensures priori knowledge bias algorithm way. experiments database games grandmasters rating randomly pick position game. pick winning positions only i.e. positions side move ultimately game positions select positions training testing. generation organism translate chromosome bit-string corresponding evaluation function. test positions program performs -ply search using decoded evaluation function best move returned search compared grandmaster actual game. move deemed correct move note unlike mentor-assisted approach mimicking existing chess program provides numeric values position -bit information processed position underscores relying human games much diﬃcult using computers mentors. special ﬁtness function described above standard implementation gray coded chromosomes ﬁtness-proportional selection uniform crossover elitism following parameters used rerunning supervised evolution times obtain best organisms corresponding various runs. evaluation functions evolved organisms evolved parameter values since produces diﬀerent results although programs similar playing strength playing style somewhat diﬀerent. rate best organisms used coevolution phase described below. note selecting instead evolved organisms supervised runs desirable could result inbreeding sense parameter values organisms tend fairly similar. consider hand generating multiple evolved organisms using diﬀerent training sets run. speciﬁcally might pick games speciﬁc grandmaster hope obtaining organisms mimic individual styles various grandmasters. preliminary tests suggest however variant provides additional insight improvement. apparently -ply searches enable mimicking generic grandmaster style rather style speciﬁc player. coevolution phase best organisms selected serve initial population coevolved generations. generation organism plays four games organism generation rank-based selection applied selecting organisms breeding. elitism used well ensures best organism survives next generation. especially critical light small population size. parameters remain unchanged uniform crossover crossover rate mutation rate present results running evolutionary process described previous section. also provide results several experiments measure strength evolved program comparison crafty former running evolution generations average number solved positions increases stabilizing around corresponds positions. best organism generation solves positions corresponds positions. elitism number solved positions best organism monotonically increasing since best organism preserved. entire -generation evolution took approximately hours machine ﬁrst glance solution rate might seem high. however considering evolved organism selects successfully correct move three cases applying merely -ply search quite satisfactory. completion learning phase used additional positions aside testing. best evolved organism perform -ply search positions. number correctly solved positions indicates ﬁrst positions used training cover types positions arise success rate testing close success rate training set. measure performance best evolved organism supervised evolution phase conducted series matches chess program crafty crafty successfully participated numerous world computer chess championships direct descendent cray blitz wccc winner frequently used literature standard reference. table provides results games evol* crafty. results show evolved organism crafty clearly demonstrating supervised evolution succeeded evolving grandmaster-level evaluation function purely mimicking grandmaster moves. repeating supervised evolutionary process obtained time best evolved organism diﬀerent evolved parameter values. produced diﬀerent grandmaster-level program. even though performance independently evolved best organisms fairly similar goal improve upon organisms create enhanced best best organism. ferent best organisms obtained. using organisms starting population applied generations organism played organism four times every round. game limited seconds practice coevolution phase approximately hours. measured performance best evolved organism coevolution conducting series matches crafty also evol*. table provides results games coevol* evol* coevol* crafty. paper presented novel approach evolving grandmaster-level evaluation functions combining supervised unsupervised evolution. contrast previous successful attempt focused mimicking evaluation function chess program served mentor approach presented paper focuses evolving parameters interest solely observing games human grandmasters available information guide evolution consists moves made games. vised phase evolution obtained several grandmasterlevel evaluation functions. speciﬁcally running procedure times obtained evolved evaluation functions served initial population second coevolution phase. previous attempts using coevolution failed unacceptably large amount time needed evolve generation coevolution succeeded case initial population random relatively well tuned ﬁrst phase supervised evolution. according experiments organisms evolved randomly initialized chromosomes sets highly tuned parameters. coevolution phase improved performance program resulting evolved organism resoundingly defeats grandmaster-level program. note performance achieved despite fact evaluation function evolved program consists considerably smaller number parameters crafty evaluation function consists parameters. summary demonstrated approach used automatic tuning evaluation function scratch. furthermore approach also applied enhancing existing highly tuned evaluation functions. starting several sets tuned parameter values evalrunning supervised evolution phase times together coevolution took total hours. supervised unsupervised phases easily parallelized obtaining linear scalability. supervised evolution organism evaluated independently diﬀerent processor without share information organisms. also coevolution multiple games parallel. work experiments single processor machine running tests -core processor would reduce overall running time hours little hours. finally results presented paper point vast potential applying evolutionary methods learning human experts. believe approach presented paper parameter tuning could applied wide array problems essentially reverse engineering knowledge human expert. david n.s. netanyahu. extended null-move reductions. proceedings international conference computers games eds. h.j. herik m.h.m. winands pages springer beijing china approach tuning chess evaluation function using population dynamics. proceedings congress evolutionary computation pages ieee press world trade center seoul korea schaeﬀer hlynka jussila. temporal diﬀerence learning applied high-performance game-playing program. proceedings international joint conference artiﬁcial intelligence pages seattle rating system developed arpad oﬃcial system calculating relative skill levels players chess. following statistics january fide rating list provide general impression meaning ratings four players ever rating above. novice player generally associated rating values elo. given rating diﬀerence players following formula calculates expected winning rate player", "year": 2017}