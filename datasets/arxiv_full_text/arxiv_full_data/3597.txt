{"title": "DeepTravel: a Neural Network Based Travel Time Estimation Model with  Auxiliary Supervision", "tag": ["cs.LG", "cs.CV", "stat.ML"], "abstract": "Estimating the travel time of a path is of great importance to smart urban mobility. Existing approaches are either based on estimating the time cost of each road segment which are not able to capture many cross-segment complex factors, or designed heuristically in a non-learning-based way which fail to utilize the existing abundant temporal labels of the data, i.e., the time stamp of each trajectory point. In this paper, we leverage on new development of deep neural networks and propose a novel auxiliary supervision model, namely DeepTravel, that can automatically and effectively extract different features, as well as make full use of the temporal labels of the trajectory data. We have conducted comprehensive experiments on real datasets to demonstrate the out-performance of DeepTravel over existing approaches.", "text": "cumulated along road segment. sub-path based approaches estimate time whole path extracting time consumption sub-paths occurred historical dataset. general sub-path based approaches perform better segment-based ones. eliminate errors accumulated segment-based approaches. however still designed empirical heuristic training-based leaves room improvement. summary main reason existing estimation approaches could achieve excellent accuracy two-fold. consider path whole fully leverage natural supervised labels data i.e. time stamp sampling point easy collect. hand thanks recent boom deep learning researches problems solved endto-end models signiﬁcantly outperform traditional heuristic approaches. moreover deep learning models strong representation power enables capturing latent features modeling complicated dynamics travel time estimation problem. motivated this propose deep model named deeptravel learn directly historical trajectories estimate travel time. deeptravel speciﬁcally designed considering characteristics trajectory data applying loss function auxiliary supervision able extract multiple features affect travel time. summary main contributions follows propose deeptravel end-to-end training-based model learn historical dataset predict travel time whole path directly. introduce dual interval loss fully leverage temporal labeling information trajectory data works auxiliary supervision. propose feature extraction structure extract features including spatial temporal embeddings driving state features short-term long-term trafﬁc features. structure effectively capture different dynamics estimating travel time accurately. conduct comprehensive experiments evaluate model real datasets. results demonstrate advantage model state-of-the-art competitors. estimating travel time path great importance smart urban mobility. existing approaches either based estimating time cost road segment able capture many cross-segment complex factors designed heuristically non-learning-based fail utilize existing abundant temporal labels data i.e. time stamp trajectory point. paper leverage development deep neural networks propose novel auxiliary supervision model namely deeptravel automatically effectively extract different features well make full temporal labels trajectory data. conducted comprehensive experiments real datasets demonstrate out-performance deeptravel existing approaches. introduction advances gps-enabled mobile devices pervasive computing techniques generated massive trajectory data. large amount trajectory data provide opportunities enhance urban transportation systems. estimating travel time path certain time essential piece information commuters desire have. trivial problem travel time affected many dynamics dynamics trafﬁc dynamics crossroads dynamics driving behavior dynamics travel time paths historical data. dynamics make travel time indeterminate hard estimated. existing solutions adopt divide-and-conquer approach perform estimation decomposing path sequence segments sub-paths. segment-based approaches estimate travel time road segment individually additional time spent intersection segments trafﬁc lights turns considered. moreover depend high quality travel speed estimations/measurements estimated speed accurate sampling rate error. consequently error estimated travel time acstated section existing approaches estimating path travel time could categorized clusters segment-based approaches sub-path-based approaches. former tries estimate travel time individual road segment network different methods e.g. loop detectors support vector regression stacked autoencoder approaches falling within cluster designed estimating travel time single road segment could achieve high accuracy predicting travel time paths. inaccuracy estimation mainly caused considering interaction road segments. addition estimation heavily depends high quality travel speed data segment might always available. order overcome weakness individual road segment-based methods sub-paths based approaches proposed. consider sub-paths instead single segments include interaction road segments estimation. example mine frequent trajectory patterns; introduces non-parametric method utilizes travel time common sub-paths query path historical paths estimate travel time whole path incorporating list potential biases corrections; ﬁnds optimal concatenation trajectories estimation dynamic programming solution. able improve performance compared segment-based approaches. however improvement still limited heuristical design i.e. optimizing error travel time target. hand deep learning methods shown great power modeling trajectory problems recently. example uses recurrent neural network predict people’s future transportation mode large-scale transportation networks; models trajectory data well capture long-term dependencies achieve better performance predicting next movement shallow models; uses embeddings represent underlying semantics user mobility patterns. since suitable modeling trajectory related problems leverage power perform travel time estimation paths work. problem deﬁnition adopt neural networks study similar many existing approaches partition whole road network disjoint equal-sized grids. accordingly travel path started could represented sequence grids passes i.e. gn}. long granularity grid cells enough able capture real movement path road networks. meanwhile assume sampled points path recorded capture real trajectory form p··· pm}. point latitude longitude time stamp value indicates real travel time figure framework deeptravel. trajectory transformed grid sequence. grids points located blue others gray. element-wise addition. trajectory path note grids multiple points grids might e.g. gray grids shown figure need keep grids points guarantee continuity path. target historical paths train model predict travel time given path starts travel solution section present solution i.e. model deeptravel. figure shows deeptravel consists layers feature representation layer prediction layer. former aims extracting different features path latter uses feature representations predict travel time auxiliary supervisions. feature representation layer features capture factors could affect travel time paths. deeptravel considers spatial temporal embedding driving state features well short-term long-term trafﬁc features. employ grid carrier features. note study effects features experiments. spatial temporal embedding. spatial factor temporal factor affect moving speed hence travel time. example speed limits different regions vary trafﬁc condition varies time time also varies place place however capturing factors precisely easy task. purposely train model deeptravel learn characteristics w.r.t. grid automatically. order achieve goal adopt distributed representation represent grid using low-dimensional vector distributed representation widely used representation learning method wordvec natural language deepwalk social networks. spatial embedding vector contain variety feature information grid scattered various bits. similar spatial embeddings distributed representation represent temporal features. divide different time-bins denotes column grids). accordingly contains itself consists grid cells adjacent ﬁnal short-term trafﬁc feature concatenation gi’s d-neighbor sets’ short-term trafﬁc features. figure shows example previous work shown estimating travel time also learn long-term trafﬁc dynamics easily modify short-term trafﬁc feature extraction structure supporting long-term trafﬁc feature vlong. detail construct sequence along dimension days e.g. statistical information like grid time previous days. prediction layer prediction layer consists parts namely bilstm dual loss. former combine feature representations grid infer travel time information hidden state vectors; latter optimize model. bilstm. compared lstm bidirectional lstm utilizes additional backward information thus enhances memory capability. problem setting bilstm capture information every grid path starting point ending point simultaneously. concatenate features extracted section together global feature vector grid i.e. feed present grid bilstm step i-th hidden states forward backward layer respectively. concatenate states i-th hidden state unique vector represent time-bin. could initialized randomly updated training model. driving state features. driving process vehicles often divided starting stage middle stage ending stage vehicles different driving characteristics various stages. example vehicle prefers driving main roads/highways middle stage speed could fast; move source journey main roads/highways starting stage move main roads/highways destination ending stage. vector vdri represent driving state features. contains three bits represent starting middle ending stages respectively ratio value capturing proportion current path traveled indicates starting stage ﬁnishes entire path). short-term long-term trafﬁc features. trafﬁc condition sub-region characteristic continuity terms time dimension e.g. road segment experienced trafﬁc morning expected heavy trafﬁc means trafﬁc condition path right query issued path informative useful. accordingly term vshort represent short-term trafﬁc condition features. given query submitted time extract vshort historical trajectories falling within time window speciﬁc partition trajectories disjoint time-bin minutes then trafﬁc conditions certain grid along short time-bins form sequence reﬂects temporal evolvement trafﬁc condition hence utilize long short-term memory network typical recurrent neural network sequence modeling capture temporal dynamics. lstm sequences statistical information time-bin e.g. vshort last hidden state lstm. notice partitioning historical data -minute-span time-bins grids vehicle passing time-bins. lstm model handle variable length sequences easily tackle problem skipping time-bins vehicle passing e.g. figure grid -neighbor --minute --minute timebin historical vehicles passing skip remaining empty time-bins feeding data lstm. then design input w.r.t. j-th time-bin grid form include indicate degree closeness current query time linear scale i.e. infers time-bin hour current time least closeness infers minutes before largest closeness. mean speed estimated samples refers number historical samples indicates degree trustworthiness estimated speed tends vulnerable outliers small. leni length query path overlapped grid leni/vj travel time here represents travel time starting point grid path represents travel time grid path ending point. forward backward predictions shared weight want restrict task transformation travel time spent grid forward backward predictions. dual interval loss summation forward backward interval losses. relative mean square error follows. note operation indicates element-wise one. dual interval loss minimizes travel time estimation error whole path also constrains forward backward interval estimation error intermediate grids utilizes intermediate time information trajectory. following three advantages. first intermediate monitoring information extent increases amount data help model training better. second adding supervisory information middle make loss signal back-propagate accurate effective reduce risk vanishing gradient long sequences. third dual loss exactly matches bilstm characteristics step bilstm information starting grid current grid current grid ending grid naturally used forward backward interval loss. show superiority dual interval loss experiment section. training goal deeptravel minimize dual loss function words denoting trainable parameters deeptravel spatial temporal embedding vectors deﬁnes goal. here number training trajectories dual loss function i-th trajectory data. model trained employing derivative loss w.r.t. parameters backpropagation-through-time algorithm experiments conduct comprehensive experiments compare performance deeptravel existing competitors. source code implementation details available online https//github.com/**anonymized double-blind review**. experiment setting datasets. trajectory datasets used experimental study namely porto shanghai. porto dataset open dataset generated figure example dual interval loss auxiliary supervision. information supervise model. leverage additional supervision information design dual interval loss mechanism auxiliary supervision exactly matches characteristic bilstm. dual interval loss constructed losses forward interval loss backward interval loss. general idea force model learn simultaneously predict time interval start point intermediate point i.e. forward interval interval destination i.e. backward interval shown figure detail construct forward/backward mask vector activating forward/backward interval loss grids supervisory information. moreover construct recording forward backward interval ground truth. details found follows. gi.t refers time vehicle leaves grid along path derived corresponding trajectory data points sampled grid speciﬁcally deﬁne time stamp ﬁrst point gn.t time stamp last point. predicting dual intervals instead using current prediction decide adopt summation operation adds together forward prediction backward prediction figure shows. reason summation operation feeds model prior knowledge summation property time i.e. time spent path summation time spent sup-paths need learn summation property data. moreover predicted time step i.e. represents time spent grid forces predicted forward interval backward interval hold across steps i.e. exactly travel time whole path. thus minimizing dual loss also beneﬁt estimating travel time entire path step naturally regarded cheif supervision task. consequently forward/backward interval time estimation vectors follows. taxis jan. jun. shanghai generated taxis apr. apr. size extract trajectory trips occupied passengers valid trajectories. table reports description statistics datasets. hyperparameters. hyperparameters model split dataset training validation test ratio embedding size spatial temporal embeddings initialized uniformly hidden unit lstm trafﬁc feature extraction bilstm prediction. train model using adam algorithm initial learning rate weights uniformly initialized metrics. adopt mean absolute error mean absolute percentage error root-mean-squared error major performance metrics similar existing approaches approaches comparison. mentioned before existing approaches estimating path travel time either segment-based sub-path based. implement spdmean arima spd-lstm representatives segments-based approaches rtte ptte representatives sub-path based approaches. speciﬁc spd-mean estimates speed every segment averaging historical speeds. remaining four segmentbased approaches different time series prediction models predict present speed segment given historical travel speeds i.e. arima uses auto-regressive integrated moving average model uses support vector regression model uses stacked auto-encoder model spd-lstm uses lstm model. rtte develops non-parametric approach uses travel time common sub-paths query path historical paths ptte ﬁnds optimal concatenation trajectories dynamic programming solution. best knowledge ptte best practice problem studied paper. addition seven existing competitors also propose three simple end-to-end models baselines namely grid-mlp grid-cnn grid-lstm. grid-mlp uses multilayer perceptron model predict travel time path. matrix input element capturing travel length vehicle passes grid gij; hidden layers units sigmoid activation function. grid-cnn uses convolutional neural network model perform estimation. accepts input grid-mlp. three convolutional layers three max-pooling layers. convolutional layer ﬁlters stride max-pooling size followed fully-connected layer units sigmoid activation prediction. grid-lstm uses lstm predict travel time. lstm hidden units feed travel length present grid step. three models adopt mean relative squared error loss function. note deeptravel also end-to-end model. overall evaluation ﬁrst experiments evaluate performance estimation query path’s travel time results reported table observe general subpath based approaches perform better segment based approaches. indicates interaction adjacent road segments path important. segment based approaches spd-lstm outperforms others demonstrates power lstm model capturing features time series data. sub-path based approaches ptte performs better rtte since ptte object function model trade-off length sub-path number trajectories traversing sub-path. end-to-end approaches deeptravel signiﬁcantly better others metrics. trivial neural network model predict travel time well necessary extract different features adopt effective structure construct model like deeptravel does. note gridlstm performs better grid-mlp grid-cnn. path occupies small part grids whole city accordingly elements input matrix zero hence grid-mlp grid-cnn able learn valid features well. hand deeptravel outperforms competitors signiﬁcant advantages. also observe results segment-based approaches perform worse shanghai dataset porto dataset; subpath based approaches deeptravel robust different datasets. based understanding datasets trajectories porto sparser trafﬁc condition shanghai changes drastically. results demonstrate deeptravel works well different challenges faced different datasets. performance deeptravel impact different features. deeptravel takes inputs multiple features conduct second experiments study effectiveness. implement different versions deeptravel taking different feature inputs. uses spatial temporal emmae mape mape beddings; naivetraf takes mean historical speed corresponding grid trafﬁc feature; traf uses trafﬁc features model; st+traf accepts trafﬁc features well spatio-temporal embeddings input; st+traf+ds takes features considered deeptravel listed table st+traf+ds outperforms versions. st+traf performs better traf means trafﬁc features spatio-temporal embeddings play important roles prediction. driving state feature also improves performance st+traf+ performs better st+traf. result naivetraf good traf especially shanghai dataset means construction trafﬁc feature effective trivially statistics i.e. averaging historical speeds. worth noting better traf porto worse traf shanghai showcases travel time path greatly inﬂuenced spatial location time period porto mainly affected trafﬁc condition shanghai metropolis heavy trafﬁc ﬂows. effectiveness different loss functions. order demonstrate effectiveness proposed dual interval loss auxiliary supervision compare loss functions. construct baselines share feature extraction layer deeptravel different loss functions training. speciﬁc lstmno feeds features lstm uses ﬁnal hidden vector predict travel time mean relative squared error loss. bilstmno similar lstmno i.e. uses ﬁnal forward backward hidden state bilstm prediction. bilstmf bilstmback leverage auxiliary supervision i.e. time stamps intermediate points bilstmf uses forward interval loss loss function bilstmback optimizes backward loss. bilstmdual deeptravel model optimizes forward backward interval loss functions auxiliary supervision. report quantitative results table mape curve validation w.r.t. training epochs figure results bilstmno performs better lstmno means bilstm able capture correlations grids much better lstm. also observe three models auxiliary supervision behave much better models without auxiliary superfigure performance deeptravel length travel time paths. vision fast convergence. proves auxiliary supervision additional interval loss beneﬁts back-propagation loss signals additional supervision kind data augmentation improve results analyzed section last expect bilstmdual performs better bilstmf bilstmback means auxiliary supervisions forward backward interval loss duplicate complementary. performance deeptravel length travel time paths. last least partition testing trajectory different subsets according length trajectories duration travel time report mape deeptravel shanghai dataset representative. results reported figure general deeptravel performs well however observe performance drop path short travel time long e.g. min. firstly type trajectories abnormal travel time cases proportional length path. example paths length travel time mean average speed .km/h extremely slow little faster walking speed. examing trajectories dataset observe encounter sudden congested situations stay place long time learned historical data. histogram figure also proves trajectories extremely rare. conclusion paper present end-to-end travel time estimation model namely deeptravel addresses separate estimation problem segment-based approaches non-training-based drawback sub-path based approaches. propose unique feature extraction structure takes multiple features account. also introduce dual interval loss elegantly matches characteristic bilstm trajectory data incorporate additional supervisory information naturally. conduct experiments real datasets demonstrate superiority deeptravel. muhammad tayyab asif justin dauwels chong yang oran esmail fathi muye menoth mohan dhanya nikola mitrovic patrick jaillet. spatiotemporal patterns large-scale trafﬁc speed prediction. ieee transactions intelligent transportation systems alexandre br´ebisson ´etienne simon alex auvolat pascal vincent yoshua bengio. artiﬁcial neural networks applied taxi destination prediction. arxiv preprint arxiv. corrado fabritiis roberto ragona gaetano valenti. trafﬁc estimation prediction based real time ﬂoating data. proceedings international conference intelligent transportation systems pages qiang zhou kunpeng zhang goce trajcevski xucheng fengli zhang. identifying human mobility trajectory embeddings. proceedings international joint conference artiﬁcial intelligence pages zhanfeng chao chen coifman pravin varaiya. pems algorithms accurate real-time estimates g-factors speeds singleproceedings international loop detectors. conference intelligent transportation systems pages xiaolei zhimin yinhai wang haiyang yunpeng wang. long short-term memory neural network trafﬁc speed prediction using remote microwave sensor data. transportation research part emerging technologies tomas mikolov ilya sutskever chen greg corrado jeff dean. distributed representations words phrases compositionality. proceedings annual conference neural information processing systems pages bryan perozzi rami al-rfou steven skiena. deepwalk online learning social repproceedings international resentations. conference knowledge discovery data mining pages mahmood rahmani erik jenelius haris koutsopoulos. route travel time estimation using low-frequency ﬂoating data. proceedings international conference intelligent transportation systems pages ryosuke shibasaki. deeptransport prediction simulation human mobility transportation mode citywide level. proceedings international joint conference artiﬁcial intelligence pages yilun wang zheng yexiang xue. travel time estimation path using sparse trajectories. proceedings international conference knowledge discovery data mining pages ziyang chen weiwei baihua zheng wang. modeling trajectories recurrent neural networks. proceedings international joint conference artiﬁcial intelligence pages junbo zhang zheng dekang deep spatio-temporal residual networks citywide crowd ﬂows prediction. proceedings aaai conference artiﬁcial intelligence pages", "year": 2018}