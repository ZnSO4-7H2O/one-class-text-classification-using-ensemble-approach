{"title": "Learning to Understand by Evolving Theories", "tag": ["cs.LG", "cs.AI", "D.1.6; I.2.4; I.2.6; I.2.9"], "abstract": "In this paper, we describe an approach that enables an autonomous system to infer the semantics of a command (i.e. a symbol sequence representing an action) in terms of the relations between changes in the observations and the action instances. We present a method of how to induce a theory (i.e. a semantic description) of the meaning of a command in terms of a minimal set of background knowledge. The only thing we have is a sequence of observations from which we extract what kinds of effects were caused by performing the command. This way, we yield a description of the semantics of the action and, hence, a definition.", "text": "abstract. paper describe approach enables autonomous system infer semantics command terms relations changes observations action instances. present method induce theory meaning command terms minimal background knowledge. thing sequence observations extract kinds eﬀects caused performing command. yield description semantics action hence deﬁnition. semantics usually refers meaning something. since thing understanding computer semantics either. robot acts senses environment reasoning actions requires language hence semantics. several prime inspirations work first john locke’s concept learning scratch bertrand russell’s theory knowledge also summarises several theories cognition related learning semantics action. model deﬁned formal description observable eﬀects action fundamental problem identifying change environment eﬀect action. environment innate knowledge represented relationally logic programs describe formation complex models learning process similar inductive logic programming understanding learning require knowledge. article presuppose agent minimal knowledge given terminological formulae describing facts properties rules hold within agent’s model world. performing action usually results change world. since know world model need live interpretations partial data collected sensors. goal directed acting therefore requires anticipate action’s results assuming something real eﬀects takes situation sensors deliver results correspond wanted achieve state descriptions consist sets logic formulae signature represent interpretation sensory data thus assignments variables operator function changes anticipates change example. |=αi position assume function then want |=αi+ position domain model algebra. variables constant symbols means equation actually points round meaning variable grounded world. reason denote arrows round follows know algorithmic deﬁnition note being aﬀected necessarily mean changed/caused everything happens consequence acting. therefore observing change environment mean contributes meaning performed action assume world point time represented state snapshot. state snapshots basically total functions variables representing certain sensory input assign corresponding values. varistate snapshots. since strict order also uniquely arrange state snapshots table gives every variable reading function using relational database deﬁnition language sample described types according variables unique identiﬁer shall represent collected state snapshots factual knowledge represented using simple horn logic facts key-value lists symbol grounding lexical semantics fails work agrees common atomic meaningful symbols construct larger ones. whatever perceive need able words order reason whatever shall learn learned suﬃcient repository basic categories build desired concept.our initial knowledge consists type system primitive typed relations operations. contains deﬁnitions relations greater than less than; arithmetic relations addition subtraction multiplication division; spatial relations like position orientation proximity; predicate logic expressions including equality. type system easily adapted domain example. real numbers describing coordinates might state semantics moving rather simple program deﬁned eff-slot operator deﬁnition goal explain means eff. note diﬀerent kinds variables used operator deﬁnition above already stated dotted variables global variables holding feature values describe world. simple variable symbols required abstract deﬁnition operator. move works kind object accepts parameter numerical value constant translates distance period time travels determined speed. planning puts semantics operator deﬁnition deﬁning changes state descriptions. operator applicable satisﬁed describe state description changes performing eff. position robot moving deﬁned terms previous position travel distance another globally observable feature robot’s orientation. want robot learn semantics actions reverse line argument move means certain variables change certain way. this general gives rise learning problems simple first meaning action could exactly preserve certain value rather changing second many reasons variable might changed without connection performing observable variables. then question general describes change. presupposes operators synchronised sense aﬀected variables changed time. suitable background knowledge horn logic representation formalisms inductive logic programming prime candidate learning semantics action. dido explores unfamiliar domains without external supervision. task build representation domain used predict outcomes motor operations maximum likelihood correct. note paradigm works descriptions states. closed deterministic fully observed world description coincide reality. real world however situations change without change description might diﬀerent description world. features unsupervised inductive learning actions state descriptions without prior knowledge represent fundamental principles evolt based too. major diﬀerence proposed system dido evolt learns observing environment whereas dido learns eﬀects action. live uses complementary discrimination learning inspired piaget’s child development theories learn prediction models eﬀects precondition resulting percept satisfy prediction. like dido hyper shall learn exploring domain. hyper uses standard induce knowledge movement course xpero project learner used. hand requires elaborate background knowledge turn introduces bias form model assumptions. hand full requires negative examples avoid over-generalisation. focus generating negative examples introducing bias determines feature value ranges. deal less problem learning semantics actions approach diﬀers approaches learn without negative examples scratch least possible assumptions predetermined knowledge. ﬁrst study suit huge amount data focused aspect extended generalisation procedure deal typed terms. additionally simple data collections leave positive examples only. finally clause head target predicate under-speciﬁed terms mode description e.g. used prior candidates sought clause head available. evolt searches relations exhaustively relation deﬁnition background knowledge scanned check whether entails changes state variables caused action. increase search eﬀort brute-force method alleviated type system allows quick uniﬁcation test. nevertheless eﬃciency gain scale number subsets variables still grows exponentially linear growth similar shapes necessarily represent value corresponding variables. however similar shapes corresponding variable diﬀerent sets represent value. αt−σ substitution acting deﬁned operator declaration executed. analogy example section following example. huey assume would expect robot huey position northeast initial position time restricted number parameters operator which general rather small. shown ﬁgure member triplet assigned data type acts search bias reduce search space. background knowledge provides deﬁnitions predicates used learner explain relation exist instantiations variables caused action parameters transition group created learner examines triplet deﬁnition background knowledge identify relation described values given triplet matching predicate signature types transition group reﬁning existing theories assume already inferred theory transition group suggests build theory order reﬁne build intersection contains relation/variable candidates part theories. monotonously specify theory ruling candidates support observations could operator always aﬀect variables. example could move y-direction thereby leaving x-coordinates unchanged. move usually aﬀects components location. motivation choosing approach despite disadvantages real life non-determinism surrounding world results huge transitions pairs hence large theories. therefore rule singular observations decrease noise price over-pruning hypothesis space. results described next sections surprisingly accurate semantically valid therefore support approach theory reﬁnement monotonic specialisation. state descriptions following example evolt representation states state description represented predicate state spec/ ﬁrst argument time stamp second variable list example variable values allows assign complex values ˙obj type variable pos] means obj× pos. state snapshot states time robot object obstacle position robot hold actions actions represented predicate action. ﬁrst argument serves identiﬁer program internal purposes time identiﬁes time stamp parameters list parameters. example action move forward distance time represented action-eﬀect theory action theory since continuously update theories explicitly store time stamp. however multiple alternative hypotheses asserted prolog workspace thus enabling time-independent oﬀ-line learning entire sets theories. ﬁrst argument carries name action explained second argument list parameters passed act. relation holds pairs observable variables candidates operators/relations used describe parameter-dependent changes again give example moving forward background knowledge seen previous example consists prior deﬁned relations operators. examining background knowledge relations satisfying changes recorded tran involves steps. ﬁrst step data type triplet matched data type operator declarations. simple uniﬁcation problem applicability respective predicates. background knowledge predicate deﬁnitions example section primary goal experimental evaluation examine applicability behaviour evolt diﬀerent environmental settings. example environmental setting given below. data collected follows robot controlled move simulated environment recorded state descriptions also recorded commands issued robot figure depicts task environment considered experiment robot placed obstacles. case position expressed using proposed approach learn semantics actions describing observed eﬀects terms atomic arithmetic/logical operations. action considered event causes current state change state features represent sensory inputs. working principles evolt inspired evolution theories paradigm learning implemented using principles inductive logic programming. evolt uses exhaustive brute-force search search relations search guided search bias form typed variables. another contribution that motivated robotics systems works unlabelled examples. moreover evolt provided minimal background knowledge common knowledge sense task speciﬁc provides atomic operations sensory data. even though results evaluation quite reasonable system still adolescent stage. example assumed actions executed successfully side-eﬀects world fully observable deterministic. however requirements usually real world robot scenario. immediate future goal make system sophisticated improving data handling extending background knowledge additional deﬁnitions complex relations. space improvement given needs growing complexity search space also need introduce sophisticated biases. also dimensionality hypothesis space needs reduced time want enable system deal increasing number features. method feature selection procedure context relational representation data rough data analysis also sections together modal logic representation form building framework modal inductive logic programming setting shall able infer powerful semantic descriptions actions. thanks. authors wish thank bj¨orn kahl support expertise robot manipulation simulation.", "year": 2013}