{"title": "Systematic N-tuple Networks for Position Evaluation: Exceeding 90% in  the Othello League", "tag": ["cs.NE", "cs.AI", "cs.LG", "68T05"], "abstract": "N-tuple networks have been successfully used as position evaluation functions for board games such as Othello or Connect Four. The effectiveness of such networks depends on their architecture, which is determined by the placement of constituent n-tuples, sequences of board locations, providing input to the network. The most popular method of placing n-tuples consists in randomly generating a small number of long, snake-shaped board location sequences. In comparison, we show that learning n-tuple networks is significantly more effective if they involve a large number of systematically placed, short, straight n-tuples. Moreover, we demonstrate that in order to obtain the best performance and the steepest learning curve for Othello it is enough to use n-tuples of size just 2, yielding a network consisting of only 288 weights. The best such network evolved in this study has been evaluated in the online Othello League, obtaining the performance of nearly 96% --- more than any other player to date.", "text": "erated systematic way. extensive computational experiments show learning position evaluation othello architecture signiﬁcantly effective involving randomly generated n-tuples. also investigate length n-tuples affects learning results. finally performance best evolved n-tuple network evaluated online othello league. othello player deterministic perfect information strategic game played board. pieces black side white other. game starts white black pieces forming askew cross center board. players take turns putting piece board color facing legal move consists placing piece ﬁeld forms vertical horizontal diagonal line another player’s piece continuous non-empty sequence opponent’s pieces reversed piece placed. player passes cannot make legal move. game ends players passed consecutively. then player pieces color facing wins. abstract—n-tuple networks successfully used position evaluation functions board games othello connect four. effectiveness networks depends architecture determined placement constituent n-tuples sequences board locations providing input network. popular method placing ntuples consists randomly generating small number long snake-shaped board location sequences. comparison show learning n-tuple networks signiﬁcantly effective involve large number systematically placed short straight n-tuples. moreover demonstrate order obtain best performance steepest learning curve othello enough n-tuples size yielding network consisting weights. best network evolved study evaluated online othello league obtaining performance nearly player date. board games always attracted attention clear rules mathematical elegance simplicity. since early works claude shannon chess arthur samuel checkers research conducted area board games towards ﬁnding either perfect players stronger human players bottom line board games still constitute valuable test-beds improving general artiﬁcial computational intelligence game playing methods reinforcement learning monte carlo tree search branch bound evolutionary algorithms. techniques employ position evaluation function quantify value given game state. context othello successful position evaluation functions tabular value function n-tuple network consists number n-tuples associated look table maps contents board ﬁelds real value. effectiveness n-tuple network highly depends placement n-tuples typically n-tuples architectures consist small number long randomly generated snakeshaped n-tuples performance othello league determined number wins player \u0001-othello double games consisting single games played white black. aggregate performance scalar value assume counts point draw points. average score obtained constitutes othello league performance measure incorporate paper. best performing evaluation function othello league n-tuple network n-tuple networks ﬁrst applied optical character recognition problem bledsoe browning games used ﬁrst buro name tabular value functions later popularized lucas according szubert main advantages n-tuple networks include conceptual simplicity speed operation capability realizing nonlinear mappings spaces higher dimensionality n-tuple network consists ni-tuples tuple’s size. given board position returns values returned individual n-tuples. ni-tuple consists predetermined sequence board locations j=...ni look table luti. latter contains values board pattern observed sequence board locations. thus n-tuple network function design state-of-the-art othello players evaluate position evaluation functions. players simple state evaluators -ply setup given current state board player generates legal moves applies position evaluation function resulting states. state gauged desirable determines move played. ties resolved random. simplest position evaluation function positionweighted piece counter linear weighted board function. assigns weight board location uses scalar product calculate utility board state rc=... case empty location black piece present case white piece. player often used othello research expert opponent standard heuristic player weights hand-crafted yoshioka presented table possible position evaluation functions. others popular ones include neural networks n-tuple networks. allow direct comparison various position evaluation functions algorithms capable learning parameters lucas runarsson appointed othello position evaluation function league othello league short on-line ranking othello -ply state evaluator players. players submitted league evaluated game players deterministic therefore provide continuous performance measure othello league introduces randomization othello. players forced make random moves probability constant denoting number possible values single board square sequence board values .|v|. case othello white empty black squares encoded respectively. effectiveness n-tuple networks improved using symmetric sampling exploits inherent symmetries othello board symmetric sampling single n-tuple employed eight times returning value possible board rotation reﬂection. fig. illustration. spatial nature game boards n-tuples usually consecutive snake-shaped sequences locations although formal requirement. n-tuple network size denote n-tuple network weights. apart choosing important design issue n-tuples network architecture location individual n-tuples board random snake-shaped n-tuple network thus surprising many investigations game strategy learning involved randomly generated snake-shaped n-tuple networks. lucas generated individual n-tuples starting random board location taking random walk steps eight orthogonal diagonal directions. repeated locations ignored thus resulting n-tuples squares long. method krawiec szubert used generating -tuple networks thill generating tuple networks playing connect four. n-tuple network generated denote rand-m systematic straight n-tuple network alternatively propose deterministic method constructing n-tuple networks. systematic straight n-tuple networks consist possible vertical horizontal diagonal n-tuples placed board. smallest representative network -tuples. thanks symmetric sampling required othello board -tuple network denote all- contains weights. network containing -tuples shown fig. table shows number weights selected architectures rand-* all-* networks. approaches logistello computer player beat human othello world champion used n-tuples hand-crafted expert. external knowledge also used manning generated diverse -tuple network using random inputs method breiman’s random forests basing labeled random games. single player deﬁned evaluation function meant play black white must interpret result evaluation function complementary depending color plays. three methods serving purpose. ﬁrst doubled function simply employs separate functions playing white playing black. allows fully separate strategy white black players. however disadvantage consists times weights must learned figure comparison output negation board inversion n-tuples architectures. performance measured average score obtained standard heuristic player violin shape white marks median black boxes range lower upper quartile thin black lines represent interquartile range. outliers beyond range denoted black dots. outer shape shows probability density data. output negation board inversion alternatives doubled function. single weights reducing search space allowing transfer experience white black player. using output negation black selects move leading position maximal value evaluation function whereas white selects move leading position minimal value. player uses board inversion learns play black. best black move selects leading position maximum value. play white temporarily ﬂips pieces board interpret board played black. selects best ‘black’ move ﬂips pieces back plays white piece selected location. order compare different ntuple network architectures performed several computational experiments. weights n-tuple networks learned evolution strategy generations. weights individuals initial population drawn interval. evolution strategy used gaussian mutation individual’s ﬁtness calculated using othello league performance measure estimated double games total games played evolutionary run. makes experiments exceptionally large compared previous studies. example recent study concerning n-tuple networks games played. also despite using much simpler representation samothrakis performed games run. extensive experiment possible efﬁcient n-tuple network othello implementation java capable running games second single core. thanks able ﬁnish evolutionary hours -core intel core .ghz. using double games. performance ﬁttest individual last generation identiﬁed method’s performance. since sample size method statistical analysis following experiments used nonparametric wilcoxon rank test signiﬁcance level holm’s correction comparing methods once. figure presents results learning board inversion output negation representatives types ntuple networks architectures rand-× all- weights. ﬁgure shows board inversion surpasses output negation regardless player architecture conﬁrms previous study methods preference learning differences methods statistically signiﬁcant moreover visual inspection violin plots reveals board inversion leads robust learning since variance performances lower. therefore following experiments employ exclusively board inversion. short straight random long snake-shaped n-tuples main experiment compare n-tuple networks consisting possible short straight n-tuples long random snake-shaped ones chosen number ntuples size make number weights wj----tuples eptdlmpx_x n-tuple network n-tuple network prb_nt_ eptdlxover n-tuple network n-tuple network n-tuple network stunner n-tuple network mlp-ties.ff neural network table selected milestones on-line othello position evaluation function league since september table consists also all- submitted league since uses board inversion. performances three best players come othello league website estimated using double games. performances all- wj----tuples players estimated using double games performance eptdlmpx_x reported best player obtained research consists tuples; performance conﬁdence delta result signiﬁcantly higher best results reported date othello league notice also small compared players league. unfortunately online othello league accepts players employing output negation; allow board inversion. thus player could submitted othello league. accepted othello league performed experiments also output negation. best output negation player able evolve submitted name wj----tuples. consists straight -tuples thus weights total. wj----tuples took lead league ﬁrst player exceeding performance obtained league result taken care since evaluate player’s performance othello league plays games. estimate performance basing double games. suspect performance standard heuristic player all- all- converge cannot signiﬁcantly improved -ply. random moves using games leads situation even perfect-playing player cannot guarantee losing game. notice differences performance substantial pair all- rand- difference performance lowest best result obtained rand still lower worst result obtained all- all-* architectures also robust lower variances rand-* architectures variance rand-* architectures attributed random initialization non-deterministic learning process variance all-* latter. intuitively longer n-tuples lead higher network’s performance since ‘react’ patterns shorter ones cannot. however results presented fig. show evidence case. despite times weights all- provide better performance all- furthermore all- signiﬁcantly worse all- all-. figure pace learning analyzed n-tuple networks architectures. point plot denotes average performance method’s ﬁttest individual given generation. despite ﬁrst place obtained othello league evolved player good ‘general’ variety opponents evolved speciﬁcally play standard heuristic player. evaluated random players best all- player obtains score much since considerably less computational effort used paper possible evolve n-tuple player scoring however goal design good players general compare different position evaluation functions. shown among all-* methods weights worse results; applies rand-* methods ﬁnding conﬁrms szubert found among networks rand-× rand- rand- latter allows evolutionary algorithm obtaining best results. authors stated effect higher dimensionality search space weight mutation operator sufﬁciently efﬁcient elaborate fast progress. although challenge claim results suggest number weights network performance factor. all- weights thus dimensionality search space considerably higher rand-× rand-× weights respectively. nonetheless among three architectures all- network obtains highest performance therefore second performance factor learning n-tuple network architecture. finally notice alternative ﬁxed n-tuple network architecture self-adaptive change response variation operators mutation crossover. although architecture principle ﬂexible adds another dimension search space making learning problem even harder. paper analyzed n-tuple network architectures position evaluation function board games. shown network consisting possible systematically generated short n-tuples leads signiﬁcantly better play long random snake-shaped tuples originally used lucas simple network consisting possible straight -tuples able beat best result on-line othello league moreover results suggest tuples longer give advantage causing slower learning rate time. surprising since capturing opponent’s pieces othello requires line least three pieces emphasize result obtained intensive computational experiment involving generations order magnitude studies domain. nevertheless remains seen whether hold different experimental settings. used evolution expert player -ply \u0001-othello. interesting questions whether systematic short -tuple network also advantageous reinforcement learning temporal difference learning whether networks also proﬁtable board games e.g. connect four. szubert ja´skowski krawiec scalability generalization hybridization coevolutionary learning case study othello ieee transactions computational intelligence games manning othello using resource-limited nash memory improve othello evaluation function ieee transactions computational intelligence games vol. runarsson lucas preference learning move prediction evaluation function approximation othello computational intelligence games ieee transactions osaki shibahara tajima kotani othello evaluation function based temporal difference learning using probability winning ieee symposium computational intelligence games dec. manning using resource-limited nash memory improve othello evaluation function computational intelligence games ieee transactions vol. march chong tino improving generalization performance co-evolutionary learning ieee transactions evolutionary computation vol. dries wiering neural-fitted td-leaf learning playing othello structured neural networks ieee transactions neural networks learning systems vol. nov. samothrakis lucas runarsson robles coevolving game-playing agents measuring performance intransitivities ieee transactions evolutionary computation ja´skowski szubert liskowski multi-criteria comparison coevolution temporal difference learning othello evogames ser. lectures notes computer science lucas runarsson temporal difference learning versus co-evolution acquiring othello position evaluation ieee symposium computational intelligence games. ieee szubert ja´skowski krawiec coevolutionary temporal difference learning othello ieee symposium computational intelligence games conference proceedings thill koch konen reinforcement learning ntuples game connect- parallel problem solving nature ppsn ser. lecture notes computer science coello cutello forrest nicosia pavone eds. vol. springer ja´skowski liskowski szubert krawiec improving coevolution random sampling gecco’ proceedings annual conference genetic evolutionary computation blum amsterdam netherlands july liskowski co-evolution versus evolution random sampling acquiring othello position evaluation ph.d. dissertation poznan university technology igure n-tuple network representing best evolved player online othello league format. player contains -tuples. symmetric expansions ﬁelds numbered row-wise fashion. network weights. player uses board inversion. othello league performance computations performed pozna´n supercomputing networking center. author would like thank marcin szubert helpful remarks earlier version article. table performances obtained evolutionary runs n-tuple network architectures considered study. value average score double games standard heuristic \u0001-othello", "year": 2014}