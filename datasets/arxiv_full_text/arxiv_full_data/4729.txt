{"title": "Anomaly Detection Using the Knowledge-based Temporal Abstraction Method", "tag": ["cs.LG", "cs.AI"], "abstract": "The rapid growth in stored time-oriented data necessitates the development of new methods for handling, processing, and interpreting large amounts of temporal data. One important example of such processing is detecting anomalies in time-oriented data. The Knowledge-Based Temporal Abstraction method was previously proposed for intelligent interpretation of temporal data based on predefined domain knowledge. In this study we propose a framework that integrates the KBTA method with a temporal pattern mining process for anomaly detection. According to the proposed method a temporal pattern mining process is applied on a dataset of basic temporal abstraction database in order to extract patterns representing normal behavior. These patterns are then analyzed in order to identify abnormal time periods characterized by a significantly small number of normal patterns. The proposed approach was demonstrated using a dataset collected from a real server.", "text": "abstract— rapid growth stored time-oriented data necessitates development methods handling processing interpreting large amounts temporal data. important example processing detecting anomalies time-oriented data. knowledge-based temporal abstraction method previously proposed intelligent interpretation temporal data based predefined domain knowledge. study propose framework integrates kbta method temporal pattern mining process anomaly detection. according proposed method temporal pattern mining process applied dataset basic temporal abstraction database order extract patterns representing normal behavior. patterns analyzed order identify abnormal time periods characterized significantly small number normal patterns. proposed approach demonstrated using dataset collected real server. today data storage capabilities well computational power rapidly improvement makes possible generate store great amount temporal data future query analysis discovery knowledge. hand systems experts encountering problems processing increased amount data. rapid growth stored timeoriented data necessitates development methods handling processing large amounts temporal data. approach automatic summarization process based predefined knowledge knowledge-based temporal-abstraction method method enables summarize reduce amount data creating higher level interpretations based predefined domain knowledge. temporal-abstraction task integrating time-stamped data knowledge order extract summarize meaningful context-sensitive conclusions interpretations data. shahar's knowledge-based temporal-abstraction method computational framework supporting task decomposing several computational subtasks. kbta method provides automated means deriving context-specific temporal abstractions timeoriented data using domain-specific knowledge base general kbta method defined follows. input includes time-stamped concepts events create necessary interpretive context output includes interval-based context-specific concepts higher level abstraction respective values. typical example security-based output would period hours high number connections user activity detected. output indicate trojan horse installed user computer leaking information connections. knowledge engineer defines domain knowledge relevant task using temporal-abstraction ontology includes five kbta entities properties relations among them. five inference mechanisms -temporal context formation contemporaneous abstraction temporal inference temporal pattern matching essentially operate parallel applied derive high level abstractions data kbta method originally proposed assisting physicians typical tasks therapy quality assessment monitoring clinical trial analysis medicine later extended intrusion detection computer-network security fraud detection decision-making financial domains analysis information decision-making military intelligence. done defining interesting meaningful patterns. research presents adaptation application kbta method time interval mining process anomaly detection. generally kbta employed anomaly detection applying main approaches specifying abnormal pattern kbta domain ontology; specifying temporal patterns representing normal behavior. research focuses second approach; i.e. mining abstract data temporal patterns represent normal behavior subject identifying time intervals normal patterns exist. preliminary evaluation approach presented. perform chronological evaluation using data collected real server derive normal patterns period week derived patterns detecting abnormal time intervals following week. abnormal intervals defined time intervals relatively small number normal behavioral patterns identified. knowledge based temporal abstraction method receives input measured data external events returns interval-based context-specific concepts higher level abstraction respective values. abstractions include four types state gradient rate temporal patterns. state abstraction abstraction values contemporaneous concepts \"state-describing\" values; example state bytes sent/sec 'low' 'medium' 'high' abstracted primitive concept \"number bytes sent/sec\". gradient abstraction determines direction change values measured concept rate abstraction classifies amplitude rate change selected concept finally temporal patterns defined complex value time constraints defined concepts events contexts. temporal patterns linear repeating appropriate temporal contexts abstraction process induced recursively events derived abstractions longer time interval. related theory originally introduced medical field evaluated domains well figure presents example abstraction process. primitive parameter 'the number connection failures' machine abstracted connection failure state abstraction' parallel number connection failures abstracted gradient abstraction interpolated across whole period. kbta method used anomaly detection applying following approaches specifying abnormal patterns part domain ontology; specifying normal patterns domain ontology looking time periods significantly less normal patterns. identified performing manual pattern mining. domain expert visual exploration tool order examine abstracted data. assumption domain expert knowledge indication abnormal event goal manually extract temporal patterns leads represents event. visual exploration tool enables domain expert examine data ways reveal correlations insights thus acquiring patterns anomalies complex person perceive without using tool. temporal pattern mining similar previous approach assumption indication known anomalous event provided. temporal pattern mining algorithm applied abstracted data precedes anomalous event extract significant temporal patterns. significant patterns represent anomalous event represent behavior precedes event. challenge approach identify significant patterns. hard identify patterns based single anomaly event instance. approach requires several anomalous event instances belong category order identified anomalous patterns. normal behavior detection approach temporal pattern mining algorithm applied abstracted data extract significant temporal patterns. case significant patterns represent example normal behavior server. example significant pattern recurring pattern time single server pattern recurring multiple servers. significant patterns found inserted knowledge base desirable patterns. several techniques used detect abnormal behavior; example naïve technique skyline abstraction skyline abstraction discretisize number normal behavior patterns occurring time interval. abnormal behavior would reflected number normal behavior patterns. underlying assumption approach highly recurring patterns represent normal behavior therefore anomalous behavior characterized significantly less normal patterns. normal patterns added domain ontology kbta computational engine extract patterns data alert issued upon detection number normal patterns. consider servers database shown figure tuple contains subject fact item following modifications addition horizontal support temporal coverage support discretization duration interval. algorithm presented considers allen's implementation aggregate three primitive temporal relations overlaps mining algorithm operates given facts f{abcd…}. case fact defined triplet <concept name value duration> where concept name name concept ontology concept value valid value concept concept duration discretized value interval duration example fact <bytesreceivedsec_state high long> refers long time interval high number received bytes second. definition temporal pattern defined recursively follows single fact type; temporal pattern also called atomic pattern. temporal patterns optional temporal relations called composite temporal pattern. mining process takes multiple passes data. iteration start seed large-items found previous iterations. first seed generating potentially large items called candidates adding atomic item elements seed atomic item added different temporal relation definition temporal coverage support modification horizontal support. temporal coverage time intervals instances belong specific subject candidate candidate satisfies temporal coverage supports temporal coverage equal greater temporal coverage support threshold. definition k-item defined {rel rel… relk-} facts k-item relk- relations k-item temporal pattern terms facts relations {rel relk- example following -item {{ab)}{rel=\"overlaps\"} p=}. second phase candidate examine item-lists determine temporal relations composite pattern atomic pattern sufficient vertical support well horizontal/temporal coverage support. algorithm terminates cannot find large k-items current pass. discretisized abstractions identify temporal patterns repeated sufficiently enough considered frequent; i.e. comply predefined horizontal support select sub-set normal behavior patterns identified previous step. study patterns atomic patterns selected. patterns added domain's kbta ontology. detect abnormal time periods. finally patterns identified test abnormal time periods inferred. done using skyline abstraction defined implemented specifically task. skyline abstraction type state abstraction defined high-level skyline abstraction derives time intervals assigns value time interval according amount \"abstracted-from\" patterns appears time interval. proposed approach integrating kbta method temporal interval-based pattern mining algorithm presented figure kbta process applied data using domain knowledge specified domain expert. abstracted data pre-processed then temporal pattern mining algorithm applied meaningful patterns presented expert turn decides whether knowledge base. issues affects output mining process relates cases element shared among instances pattern. cases handled several ways generating possible combinations generating specific patterns. refer options mining modes. consider example facts instances possible instances candidate however instances share element. preferred correct option example cases temporal coverage support taken account. therefore define additional mining modes choose instance applying decision logic. \"most recent\" mode favors closest interval respect example considered. \"latest\" mode favors latest interval respect example considered. study \"most recent\" mode. algorithm presented doesn’t distinct events facts significantly different durations. example seconds interval hour interval considered long valid pattern's envelop i.e. implementation perform preprocessing descretize duration interval executing mining algorithm. therefore example instance fact refers high amount bytes received classified short medium long according predefined configuration. following configuration short medium long presented refers short time interval high amount bytes received. section present preliminary evaluation conducted order demonstrate proposed approach. evaluation attempt extract temporal patterns represent normal behavior single server. performed chronological experiment derive normal patterns period week derived patterns detecting abnormal time intervals following week. mining algorithm presented previous section applied abstracted data server. abstracted data initially derived using kbta framework. next identify time intervals normal patterns exist. done applying skyline abstraction. note evaluation attempt learn normal behavior based single server's data therefore vertical support irrelevant. specific server includes following abstractions bytesreceivedsec_state bytesreceivedsec_trend bytessentsec_state bytessentsec_trend cpusys_state cpusys_trend cpuuser_state cpuuser_trend memfree_state memfree_trend memtotal_state memtotal_trend segmentsretransmittedsec_state segmentsretransmittedsec_trend winmempagewritespers_state winmempagewritespers_trend figure presents memory free memory total bytes received\\sec user bytes sent\\sec state abstractions monitored server. looking cpu-user_state parameter server derive normal pattern weekdays trend increasing very-low state medium high very-high state midday decreasing trend very-high state high medium finally very-low however weekend normal behavioral pattern cpu-user_state mostly medium. evaluation conducted weeks data collected real server real production environment large company. first week data used training. evaluation performed weekdays assumption normal behavior different weekdays weekends. attempted derive normal later used identifying time intervals relatively small amount normal patterns exist. settings mining execution then patterns atomic patterns selected added ontology. kbta pattern matching mechanism applied order identify selected patterns data consecutive week finally skyline abstraction added ontology. skyline abstraction abstracted selected subset patterns generates time intervals according amount abstracted-from patterns appears time interval. applying mining algorithm resulted patterns size patterns size three. example temporal pattern mined data server represents long time interval nonchanging memory total short time interval high system consumption short time interval decreasing bytes received second last phase defined skyline abstraction abstracted subset revealed patterns server. skyline abstraction categorized time intervals based amount instances \"abstracted-from\" patterns appear time interval. example less \"abstracted-from\" patterns exist time interval time interval marked \"few\". similarly exist time interval marked \"many\". consider time intervals marked \"few\" skyline abstraction potential anomalies since \"normal\" patterns exist time interval. results positive indication approach useful detecting anomalies. figure identify long time interval labeled \"few\" aligning time interval primitive parameters visually identify correlation skyline abstraction increase decrease user bytes received second decreasing free memory. anomaly detection. experiment conducted data single server illustrates process applying kbta method executing mining process output abstractions using revealed patterns anomaly detection. future work plan extend experiments larger data also considering additional datasets. shabtai fledel elovici shahar using kbta method inferring computer network security alerts timestamped system metrics journal computer virology", "year": 2016}