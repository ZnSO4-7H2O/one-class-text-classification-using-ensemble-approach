{"title": "Robots that can adapt like animals", "tag": ["cs.RO", "cs.AI", "cs.LG", "cs.NE", "q-bio.NC"], "abstract": "As robots leave the controlled environments of factories to autonomously function in more complex, natural environments, they will have to respond to the inevitable fact that they will become damaged. However, while animals can quickly adapt to a wide variety of injuries, current robots cannot \"think outside the box\" to find a compensatory behavior when damaged: they are limited to their pre-specified self-sensing abilities, can diagnose only anticipated failure modes, and require a pre-programmed contingency plan for every type of potential damage, an impracticality for complex robots. Here we introduce an intelligent trial and error algorithm that allows robots to adapt to damage in less than two minutes, without requiring self-diagnosis or pre-specified contingency plans. Before deployment, a robot exploits a novel algorithm to create a detailed map of the space of high-performing behaviors: This map represents the robot's intuitions about what behaviors it can perform and their value. If the robot is damaged, it uses these intuitions to guide a trial-and-error learning algorithm that conducts intelligent experiments to rapidly discover a compensatory behavior that works in spite of the damage. Experiments reveal successful adaptations for a legged robot injured in five different ways, including damaged, broken, and missing legs, and for a robotic arm with joints broken in 14 different ways. This new technique will enable more robust, effective, autonomous robots, and suggests principles that animals may use to adapt to injury.", "text": "robots leave controlled environments factories autonomously function complex natural environments respond inevitable fact become damaged. however animals quickly adapt wide variety injuries current robots canthink outside compensatory behavior damaged limited pre-speciﬁed selfsensing abilities diagnose anticipated failure modes require pre-programmed contingency plan every type potential damage impracticality complex robots. introduce intelligent trial error algorithm allows robots adapt damage less minutes without requiring self-diagnosis pre-speciﬁed contingency plans. deployment robot exploits novel algorithm create detailed space high-performing behaviors represents robot’s intuitions behaviors perform value. robot damaged uses intuitions guide trial-and-error learning algorithm conducts intelligent experiments rapidly discover compensatory behavior works spite damage. experiments reveal successful adaptations legged robot injured different ways including damaged broken missing legs robotic joints broken different ways. technique enable robust effective autonomous robots suggests principles animals adapt injury. robots transformed economics many industries notably manufacturing power deliver tremendous beneﬁts society search rescue disaster response health care transportation. also invaluable tools scientiﬁc exploration whether distant planets deep oceans. major obstacle widespread adoption complex environments outside factories fragility robots presently pale comparison natural animals ability invent compensatory behaviors injury current damage recovery robots typically involves phases self-diagnosis selecting best pre-designed contingency plan. self-diagnosing robots expensive self-monitoring sensors expensive difﬁcult design robot engineers cannot foresee every possible situation approach often fails either diagnosis incorrect appropriate contingency plan provided. injured animals respond differently learn trial learning error compensate damage similarly trial-and-error learning algorithms could allow robots creatively discover compensatory behaviors without limited designers’ assumptions damage occur compensate damage type. however state-of-the-art learning algorithms impractical curse dimensionality fastest sorbonne universités upmc univ paris isir paris cnrs isir paris france inria villers-lès-nancy france cnrs loria vandœuvre-lès-nancy france université lorraine loria vandœuvre-lès-nancy algorithms constrain search behaviors require human demonstrations. algorithms without limitations take several hours. damage recovery would much practical effective robots adapted creatively quickly animals without expensive self-diagnosing sensors. here show rapid adaptation achieved guiding intelligent trial-and-error learning algorithm automatically generated pre-computed behavior-performance predicts performance thousands different behaviors insight that whereas current learning algorithms either start knowledge search space minimal knowledge human demonstrations animals better understand space possible behaviors value previous experience enabling injured animals intelligently select tests validate invalidate whole families promising compensatory behaviors. robots store knowledge previous experience form behavior-performance space. guided damaged robot tries different types behaviors predicted perform well tests conducted updates estimates performance types behaviors. process ends robot predicts effective behavior already discovered. result robot quickly discovers compensate damage without detailed mechanistic understanding cause occurs animals. call approach intelligent trial error behavior-performance created novel algorithm simulation robot either standard physics simulator automatically discovered. robot’s designers describe dimensions space possible behaviors performance measure. instance walking gaits could described much involved gait speed grasping performance could amount surface contact demonstrated effective poses -degree-of-freedom human hand captured -dimensional behavioral space. behavior-performance optimization algorithm simultaneously searches high-performing solution point behavioral space step requires simulating millions behaviors needs performed robot design deployment conﬁdence assigned predicted performance behaviors stored behavior-performance tried reality robot’s mission senses performance drop selects promising behavior behaviorperformance tests measures performance. robot subsequently updates prediction behavior nearby behaviors assigns high conﬁdence predictions continues selection/test/update process ﬁnds satisfactory compensatory behavior figure intelligent trial error robots like animals quickly adapt recover damage. animals compensatory behavior injury. without relying predeﬁned compensatory behaviors learn avoid behaviors painful longer effective. undamaged hexapod robot. type damage hexapod cope damage occurs case making robot unable walk straight damage recovery intelligent trial error begins. robot tests different types behaviors automatically generated behavior-performance space. test robot updates predictions behaviors perform well despite damage. robot rapidly discovers effective compensatory behavior. already acquired data bayesian optimization procedure exploits model search maximum performance function robot selects behaviors test maximizing information acquisition function balances exploration exploitation selected behavior tested physical robot actual performance recorded. algorithm updates expected performance tested behavior lowers uncertainty updates propagated neighboring solutions behavioral space updating gaussian process updated performance conﬁdence distributions affect behavior tested next. select-test-update loop repeats until robot ﬁnds behavior whose measured performance greater best performance predicted behavior behavior-performance ﬁrst test algorithm hexapod robot needs walk fast possible robot motors onboard computer depth camera allows robot estimate walking speed gait parametrized real-valued parameters describe amplitude oscillation phase shift duty cycle joint behavior space -dimensional dimension proportion time spends contact ground created behavior-performance contains approximately different gaits tested robot different conditions undamaged four different structural failures temporary repair compare walking speed resultant gaits widely-used classic hand-designed tripod gait damage conditions adaptation step times independently generated behavior-performance maps leading experiments total. also adaptation step times independently generated behaviorperformance maps deﬁned alternate behavioral descriprobot undamaged approach yields dynamic gaits faster classic reference gait .m/s) suggesting intelligent trial error good search algorithm automatically producing successful robot behaviors putting aside damage recovery. damage scenarios reference gait longer effective intelligent trial error compensatory gaits achieve reasonably fast speed times efﬁcient reference gait damage condition experiments demonstrate intelligent trial error allows robot initially learn fast gaits reliably recover physical damage. additional experiments reveal capabilities substantially faster state-of-the-art algorithms intelligent trial error help another major challenge robotics adapting environments undamaged repaired robot intelligent trial error learns walking gait less seconds seconds physical trials repaired seconds trials). four damage scenarios robot adapts approximately minute seconds trials). results qualitatively unchanged using different behavioral characterizations including randomly choosing descriptors among possibilities additional experiments show reducing high-dimensional parameter space low-dimensional behavior space behavior-performance component intelligent trial error standard bayesian optimization original parameter space working controllers figure creating behavior-performance user reduces high-dimensional search space low-dimensional behavior space deﬁning dimensions along behaviors vary. simulation high-dimensional space automatically searched high-performing behavior point low-dimensional behavior space creating behavior-performance performance potential location low-dimensional space. hexapod robot experiments behavior space six-dimensional portion time contact ground. conﬁdence regarding accuracy predicted performance behavior behavior-performance initially tests physical robot conducted. adaptation step damage robot selects promising behavior tests updates predicted performance behavior behavior-performance sets high conﬁdence performance prediction. predicted performances nearby behaviors–and conﬁdence predictions–are likely similar tested behavior thus updated accordingly. select/test/update loop repeated tested behavior physical robot performs better best predicted performance behavior-performance value decrease test algorithm selects behavior test next balances choosing behavior highest predicted performance behaviors different tested far. overall intelligent trial error approach presented rapidly locates types behaviors least affected damage effective compensatory behavior. predicts large areas high performance. adaptation areas disappear behaviors work well damaged robot. intelligent trial error quickly identiﬁes remaining high-performance behaviors damage recovery approach applied robot robotic arm. tested different damage conditions planar -joint robotic behavior-performance map’s behavioral dimensions position end-effector performance measure minimizing variance speciﬁed motor angles adaptation performance measured distance target. like hexapod robot approach discovers compensatory behavior less minutes usually less seconds fewer trials natural animals speciﬁc algorithm present parallels intelligent trial error animal learning. like animals robot predeﬁned strategy cope every possible damage condition face injury exploits intuitions body works experiment different behaviors works best. also like animals intelligent trial error allows quick identiﬁcation working behaviors diverse tests instead trying behaviors random trying small modiﬁcations best behavior found far. additionally bayesian optimization procedure followed robot appears similar technique employed humans optimize unknown function strong evidence animal brains learn probability distributions combine prior knowledge bayesian optimizers. generated ideas tested. process reminiscent ﬁnding animals start ideas quickly disregard experimenting them generally sleep improves creativity cognitive tasks. ﬁnal parallel simulator gaussian process components intelligent trial error forms predictive models known exist animals. told shown combining pieces nature’s algorithm even differently assembled moves robots towards animals endowing ability rapidly adapt unforeseen circumstances. acknowledgments. thanks luigi tedesco stéphane doncieux nicolas bredeche shimon whiteson roberto calandra jacques droulez pierre bessière florian lesaint charles thurat serena ivaldi jingyu joost huizinga roby velez henok mengistu clune nguyen helpful feedback discussions. thanks michael brashier photo three-legged dog. work funded creadapt project european research council european union’s horizon research innovation programme direction géneérale l’armement scholarship a.c. author contributions a.c. j.-b. designed study. a.c. d.t. performed experiments. a.c. j.-b. d.t. j.c. discussed additional experiments analyzed results wrote paper. figure conditions tested physical hexapod robot. undamaged robot. shortened half. unpowered. missing. legs missing. temporary makeshift repair performance aftip leg. adaptation. plots represent intelligent trial error. central mark median edges percentiles whiskers extend extreme data points considered outliers outliers plotted individually. yellow stars represent performance handmade reference tripod gait conditions tested times independently created behavior-performance maps duty factor behavior description damage conditions also tested times independently created behavior-performance maps body orientation behavior descrip tion time number trials required adapt. plots represent intel robotic ligent trial error. experiment. -joint planar robot drop ball bin. example conditions tested physical robotic arm. joint stuck degrees. joint permanent -degree offset. broken offset joint. total conditions tested time tended data fig. number trials required reach within center. condition tested independently created behavior-performance maps. figure example behavior-performance map. stores high-performing behaviors point six-dimensional behavior space. dimension portion time contact ground. behavioral space discretized values dimension colored pixel represents highest-performing behavior discovered creation point behavior space. matrices visualize six-dimensional behavioral space dimensions according legend top-left. behavior-performance created simulated robot open dynamics engine physics simulator left matrix pre-adaptation produced creation algorithm. adaptation updated tests conducted right matrix shows state compensatory behavior discovered. arrows white circles represent order behaviors tested physical robot. circle ﬁnal discovered compensatory behavior. amongst areas high-performing behaviors found damaged robot ﬁrst columns third dimension. columns represent behaviors least central-left missing. nagatani kiribayashi okada otake yoshida tadokoro nishimura yoshida koyanagi fukushima kawatsuma. emergency response nuclear accident fukushima daiichi nuclear power plants using mobile rescue robots. journal field robotics fenton mcginnity maguire. fault diagnosis electronic systems using intelligent techniques review. ieee transactions systems cybernetics part applications reviews kluger lovell. apollo mariner books jarvis worley hogy hill haussler reiser kinematic kinetic analysis dogs trotting amputation thoracic limb. american journal veterinary research fuchs goldner nolte schilling. ground reaction force adaptations tripedal locomotion dogs. veterinary journal issn ./j.tvjl.... kober bagnell peters. reinforcement learning robotics survey. international journal robotics research location discrete behavioral space behavior-performance performance encountered controller currently stored previously tested behavioral descriptors time intelligent trial error algorithm consists major steps behavior-performance creation step adaptation step behavior-performance creation step accomplished algorithm introduced paper called multi-dimensional archive phenotypic elites explained next section. adaptation step accomplished second algorithm introduced paper called mapbased bayesian optimization algorithm explained adaptation step section below. behavior-performance created algorithm introduce paper called multi-dimensional archive phenotypic elites algorithm. map-elites searches highest-performing solution point userdeﬁned space user chooses dimensions space interested seeing variation example designing robots user interested seeing highestperforming solution point two-dimensional space axis weight robot axis height robot. alternatively user wish weight cost solutions throughout space weight cost height. dimension vary could chosen user. limit number dimensions chosen although becomes computationally expensive behavior-performance store number dimensions increases. also becomes difﬁcult visualize results. refer user-deﬁned space behavior space usually dimensions variation measure behavioral characteristics. note behavioral space refer aspects solution behavior descriptors parameters controller creating behaviorperformance straightforward simply needs simulate solution location behavior space record performance. however known priori produce controller/parameter set/description speciﬁc location behavior space map-elites beneﬁcial. efﬁciently search highest-performing solution point low-dimensional behavioral space. efﬁcient random sampling search space high-performing solutions often similar many ways randomly altering high-performing solution type produce highperforming solution different type reason searching high-performing solutions types simultaneously much quicker separately searching type. example generate lightweight high-performing robot design tends effective efﬁcient modify existing design light robot rather randomly generate designs scratch launch separate search process type design. map-elites begins generating random candidate solutions. evaluates performance solution records solution located behavior space solution performance better current solution location behavior-performance added behavior-performance replacing solution location. words kept best type solution type deﬁned location behavior space. thus solution kept location behavior space solution present behavior-performance location newly generated candidate solution added location. initialization step ﬁnished map-elites enters loop similar stochastic population-based optimization algorithms evolutionary algorithms solutions behavior-performance form population improved random variation selection. generation algorithm picks solution random uniform distribution meaning solution equal chance chosen. copy selected solution randomly mutated change performance evaluated location behavioral space determined kept outperforms current occupant point behavior space process repeated stopping criterion experiments stopped map-elites million iterations. map-elites stochastic extended data figure overview intelligent trial error algorithm. behavior-performance creation. initialized random controllers behavioral stores highest-performing controller found behavior type improved repeating process depicted newly generated controllers rarely good enough added step occurs simulation computationally expensive needs performed robot prior deployment. experiments creating involved million iterations lasted roughly weeks multi-core computer adaptation. behavior behaviorperformance expected performance based performance simulation estimate uncertainty regarding predicted performance actual performance now-damaged robot unknown algorithm. behavior selected damaged robot. selection made balancing exploitation—trying behaviors expected perform well— exploration—trying behaviors whose performance uncertain points initially equal maximal uncertainty ﬁrst point chosen highest expected performance. behavior tested physical robot performance predicted behavior actual performance uncertainty regarding prediction lowered predictions uncertainties about nearby controllers also updated results seen process repeated performance damaged robot greater maximum expected performance behavior performance threshold lowers maximum expected performance lowered occurs physical tests robot underperform expectations occurred search process resultant behavior-performance different terms number locations behavioral space candidate found terms performance candidate location. tainty associated prediction. cost function usually unknown gaussian process deﬁnes probability distribution possible values point probability distributions gaussian therefore deﬁned mean standard deviation however different therefore deﬁne probability distribution functions adaptation step accomplished bayesian optimization algorithm seeded behavior-performance map. call approach map-based bayesian optimization algorithm mboa. bayesian optimization model-based black-box optimization algorithm tailored expensive objective functions black-box optimization algorithm bayesian optimization searches maximum unknown objective function samples obtained like model-based optimization algorithms bayesian optimization creates model objective function regression method uses model select next point acquire updates model etc. called bayesian because general formulation algorithm chooses next point computing posterior distribution objective function using likelihood data already acquired prior type function. gaussian process regression model common choice bayesian optimization. gaussian processes particularly interesting regression because model cost function also uncerestimate need gaussian process data. assume observation sample normal distribution. data made several observations vector sample multivariate normal distribution deﬁned mean vector covariance matrix. gaussian process therefore generalization n-variate normal distribution number observations. covariance matrix relates observation another observations correspond nearby values likely correlated observations correspond distant values inﬂuence differently covariance matrix represents distant samples almost uncorrelated nearby samples strongly correlated. covariance matrix deﬁned kernel function called usually based euclidean distance extended data figure contribution subcomponent intelligent trial error algorithm. adaptation progress versus number robot trials. walking speed achieved intelligent trial error several knockout variants missing algorithm’s components. variants correspond state-of-the-art learning algorithms bold lines represent medians colored areas extend percentiles. adaptation performance trials. shown speed compensatory behavior discovered algorithm evaluations robot respectively. panels data pooled across damage conditions supplementary experiment methods analysis. extended data figure intelligent trial error algorithm robust environmental changes. plot shows performance required adaptation time intelligent trial error robot must adapt walk terrains different slopes. adaptation performance undamaged robot. slope angles physical trials intelligent trial error algorithm ﬁnds fast gaits outperform reference gait adaptation performance damaged robot. robot damaged legs removed different damage scenarios. data pooled damage conditions. median compensatory behavior found intelligent trial error outperforms median reference controller slope angles. middle black lines represent medians colored areas extend percentiles. black dashed line performance classic tripod gait reference. reference gait tried damage conditions median percentiles shown. supplementary experiment methods analysis. implementation bayesian optimization uses gaussian process model search maximum objective function unknown. selects next test selecting maximum acquisition function balances exploration improving model less explored parts search space exploitation favoring parts models predicts promising. here upper conﬁdence bound acquisition function observation made algorithm updates gaussian process take data account. classic bayesian optimization gaussian process initialized constant mean assumed points search space equally likely good. model progressively reﬁned observation. concept map-based bayesian optimization algorithm output map-elites prior bayesian optimization algorithm thanks simulations expect behaviors perform better others robot. incorporate idea bayesian optimization m-boa models difference prediction behavior-performance actual performance real robot instead directly modeling objective function. idea incorporated gaussian process modifying performance according simulation performance previous observations also according simulation. replacing means gaussian process models difference actual performance performance behavior-performance term prediction behavior-performance map. m-boa therefore starts prediction behaviorperformance corrects gaussian process. kernel function kernel function covariance function gaussian process. deﬁnes inﬂuence controller’s performance performance conﬁdence estimations not-yet-tested controllers behaviorperformance nearby behavior space tested controller squared exponential covariance function matérn kernel common kernels gaussian processes. kernels variants bell curve. chose matérn kernel general allows control distance effects become nearly zero also rate distance effects decrease extended data figure intelligent trial error algorithm largely robust alternate choices behavior descriptors. speed compensatory behavior discovered intelligent trial error various choices behavior descriptors. performance plotted evaluations panels respectively. experiments performed simulated damaged hexapod. damaged robot legs removed different damage scenarios. data pooled across damage conditions. described supplementary experiment evaluated behavior descriptors characterize following time contact ground orientation robot frame instantaneous velocity robot energy expended robot walking energy deviation straight line ground reaction force angle touches ground lower-leg angle lower-leg angle random selection without replacement subcomponents available behavior descriptors hand-designed reference gait compensatory gaits found default duty factor behavior descriptor bold lines represent medians colored areas extend percentiles data. treatments including duty factor treatment black circles represent median colored area extends percentiles data colored circles outliers. supplementary experiment methods analysis. extended data figure behavior performance explored discover compensatory behavior colors represent performance prediction point relative highest performing prediction step process. black circle indicates next behavior tested physical robot. circle indicates behavior tested arrows reveal order points explored. circle last ﬁnal selected compensatory behavior. scenario robot loses number dimensional space visualized according inset legend. extended data figure behavior performance explored discover compensatory behavior colors represent performance prediction point relative highest performing prediction ﬁrst map. black circle indicates next behavior tested physical robot. circle indicates behavior tested arrows reveal order points explored. circle last sequence ﬁnal selected compensatory behavior. scenario robot loses number dimensional space visualized according inset legend. data visualized ﬁgure identical previous ﬁgure difference simply whether data renormalized sequence. extended data figure intelligent trial error works completely different type robot supplementary data robotic experiment. robotic experimental setup. tested damage conditions. example behavior performance maps behaviors obtained map-elites. left typical behavior-performance produced map-elites example behaviors behavior described angle joints. color point function performance deﬁned variance joint angles right neighboring points tend similar behaviors thanks performance function would penalize jagged ways reaching points. neighbors similar behaviors justiﬁes updating predictions performance nearby behaviors testing single behavior real robot. performance trial number intelligent trial error traditional bayesian optimization. experiment conducted physical robot independent replications damage conditions. performance pooled experiments. success damage condition. shown success rate replications damage condition deﬁned percentage replicates robot reaches within center. trials required adapt. shown number iterations required reach within basket center. accuracy physical trials. performance physical trials damage condition supplementary experiment methods analysis. ﬁrst controllers generated randomly. next controllers generated using map. randomly select controller map. create randomly modiﬁed copy simulate controller record behavioral descriptor. record performance. cell empty better current stored performance. store performance behavior-performance according behavioral descriptor associate controller behavioral descriptor. extended data figure pseudo-code intelligent trial error algorithm map-elites algorithm map-based bayesian optimization algorithm notations described beginning methods section. information acquisition function information acquisition function selects next solution evaluated physical robot. selection made ﬁnding solution maximizes acquisition function. step another optimization problem require testing controller simulation reality. general optimization problem derive exact equation solution gradient-based optimization. speciﬁc behavior space example problem paper though discretized search space behavior-performance small enough exhaustively compute acquisition value solution behavior-performance choose maximum value. several different acquisition functions exist probability improvement expected improvement upper conﬁdence bound chose provided best results several previous studies. equation acquisition function handles exploitation/exploration trade-off adaptation step. function emphasis exploitation exploration explicit easy adjust. function seen maximum value across solutions weighted expected performance uncertainty solution. weighted factor. algorithm choose solutions expected highperforming. conversely high algorithm focus search unexplored areas search space high-performing solutions. factor enables adjustments exploitation/exploration trade-off m-boa algorithm describe chose value supplementary methods section code availability source code experiments paper available following http//pages.isir.upmc.fr/~mouret/code/ite_source_code.tar.gz implementation bayesian optimization algorithm freely available http//github.com/jbmouret/limbo physical robot robot -legged robot degrees freedom leg. actuated positioncontrolled servos ﬁrst servo controls horizontal orientation others control elevation. rgb-d camera ﬁxed robot. data used estimate forward displacement robot rgb-d slam algorithm robot operating system framework. parametrized controller angular position governed periodic function parametrized amplitude phase duty cycle function deﬁned square signal frequency amplitude duty cycle signal smoothed gaussian ﬁlter order remove sharp transitions shifted according phase parameters therefore controller fully described parameters. parameter possible values different values parameters produce numerous different gaits purely quadruped gaits classic tripod gaits. controller designed simple enough show performance algorithm intuitive setup. nevertheless algorithm work type controller including bio-inspired central pattern generators evolved neural networks. reference controller reference controller classic tripod gait. involves tripods legs legs controller designed always keep robot balanced least tripods. walking gait achieved lifting tripod tripod pushes robot forward lifted tripod placed forward order repeat cycle tripod. gait static fast similar insect gaits. table shows parameters reference controller. amplitude orientation parameters produce fastest possible gait amplitude elevation parameters small value keep gait stable. phase elevation parameters deﬁne tripods legs legs achieve cyclic motion phase orientation values chosen subtracting phase elevation values plus shift legs left side robot. duty cycle parameters motors spend proportion time limit angles. actual speed reference controller important comparisons made paper simply intended reference show performance classic hand-programmed gaits tend fail damage occurs. random variation controller’s parameters parameter controller chance changed value possible values value chosen randomly uniform distribution possible values. main behavioral descriptor default behavioral descriptor -dimensional vector corresponds proportion time contact ground controller simulated algorithm records time step whether traveled measurements either several meters backward forward. remove errors distance-traveled measurements less zero greater meters zero. result adjustment algorithm appropriately considers behaviors low-performing. additionally slam algorithm sometimes reports substantially inaccurate values cases adaptation step algorithm assume behavior lowperforming select another working behavior. thus overall algorithm substantially impacted infrequent under-measurements performance. stopping criterion addition guiding learning process promising area search space estimated performance solution also informs algorithm maximum performance expected physical robot. example controller expected perform faster real robot .m/s unlikely faster solution exists. information used algorithm decide worth continuing search better controller; algorithm already discovered controller performs nearly well highest value predicted model stop search. location discrete behavioral space predicted performance type behavior. thus tested solutions performance higher maximum expected performance behavior algorithm terminates. point highest-performing solution found compensatory behavior algorithm selects. alternative algorithm halt tests physical robot occur without triggering stopping criterion described equation event occurred experiments performed physical robot described main text. case selected highest-performing solution encountered search. user-deﬁned stopping criterion strictly necessary algorithm guaranteed stop worst case every behavior tested allows practical limit number trials performed physical robot. initiating adaptation step adaptation step triggered performance drops certain amount. simplest choose threshold user specify automating selection value impact triggering algorithm prematurely interesting question future research area. generation behavior-performance behaviors stored maps’s cells discretizing dimension behavioral descriptor space values adaptation phase behavioral descriptors used actual values thus discretized. alternative behavioral descriptor alternative behavioral descriptor tested physical robot characterizes changes angular position robot walking measured proportion intervals pitch roll angles robot frame positive negative denote pitch roll angles respectively robot torso interval denotes number intervals seconds simulated movement unit step function returns argument exceeds returns otherwise. discount insigniﬁcant motion around orientation angles deﬁned positive exceed rad. similarly orientation angles deﬁned negative less rad. performance function experiments mission robot forward fast possible. performance controller parameters deﬁned robot moves pre-speciﬁed direction seconds. behavior-performance creation step performance obtained thanks simulation robot. odometry results reported physical robot adaptation step measured embedded simultaneous location mapping algorithm. accuracy algorithm evaluated comparing measurements ones made hand different walking gaits. experiments revealed median measurement produced odometry algorithm reasonably accurate lower handmade measurement performance function contrary hexapod experiment robotic experiment performance function behavior-map creation step adaptation step different. demonstrate different create behavior-performance would work arbitrary locations target bin. behavior-performance generation step performance function captures idea joints contribute equally movement. speciﬁcally high-performance deﬁned minimizing variance joint angles angular position joint mean joint angles. performance function depend target. therefore generic contains high-performing controller point robot’s working space. adaptation step behavior-performance generic many tasks used particular task. adaption step different performance measure step creates behavior-performance map. problem predicted performance measure euclidean distance target speciﬁcally behavior descriptor performance control experiments traditional bayesian optimization physical robot self-collisions frequent adaptation especially given initialize process purely random controllers single self-collision unlikely break robot hundreds wear gearboxes servo continues apply force period time determines cannot move. minimize costs independent runs algorithm ﬁrst tested behavior simulation check self-collisions. detected self-collision performance behavior value physical robot physical robot planar robotic degrees freedom -degreeof-freedom gripper. robot release ball assess position gripper placed gripper tracked video camera. visual tracking achieved cmvision package tracks colored blobs eight joints robot actuated position-controlled servos manufactured dynamixel. maximize reliability type servo joints heavy-duty servos used near base robot lighter ones used arm. ﬁrst joint ﬁxed base moved servos mounted parallel. second joint moved servo. subsequent servos single mx-s remaining servos ax-s. robot’s joints limited motion range ±π/. simulator generation behavior-performance made simulated robot hexapod experiment. consistency simulated hexapod experiments used dynamic version simulator based library. joint conﬁguration resulted colliding added map. parametrized controller controller deﬁnes target position joint. controller thus parametrized eight continuous values describing angle joint mapped total motion range joint ±π/. joints activated simultaneously driven target position internal controllers. chose simple control strategy make experiments easy reproduce highlight contribution intelligent trial error damage recovery. advanced control strategies instance visual servoing would realistic industrial environment would made hard analyze experimental results intelligent trial error controller would compensate damage time. stopping criterion robot’s task release ball adaptation step stopped gripper bin. circular diameter stopped adaptation step within center bin. selecting value counted number behaviors would inﬂuenced single test real hexapod robot update process affect neighbor affects behaviors affects them. additional values shown extended data fig. previous paragraph describes tests conducted determine number behaviors affected different values experiments tell different values affect performance algorithm overall. assess that repeated experiments main paper possible values simulation including testing separate damage scenarios independently generated replicates default dimensional behavior-performance map. algorithm stopped adaptation iterations passed without success according stopping criteria described main text section stopping criterion. results reveal median performance decreases modestly signiﬁcantly value increases changing decreases median value variance performance especially extreme distribution performance values constant range explored values. around minimum performance higher minimum performance extreme values larger effect changing amount time required compensatory behavior decreases value increases value lower algorithm rarely converges less allotted iterations occurs many tests required cover promising areas search space know higher-performing behavior exists best-already-tested. hand high value algorithm updates light data chose default value hexapod experiments represents good tradehigh minimum performance number physical tests robot. value robotic experiment chosen method. selection value hexapod robot experiments chose relatively value emphasizes exploitation exploration. chose value exploration search space already largely performed behavior-performance creation step suggests areas space high-performing thus tested areas space likely unproﬁtable thus avoided. computing hardware computation conducted hyperthreaded -core computer computational power mainly required behaviorperformance creation step. creating hexapod experiment took weeks taking advantage fact creation easily parallelized across multiple cores. creation needs performed robot happen robot deployed. such robot’s onboard computer need powerful enough create map. hexapod robot experiment expensive part adaptation simultaneous localization mapping algorithm measures distance traveled physical hexapod robot. slow processes millions points second. less powerful computers lowers accuracy fewer frames second processed. computers become faster possible high-accuracy slam algorithms low-cost onboard computers robots. rest adaptation step needs much less computational power easily onboard computer smartphone. takes approximately arithmetic operations evaluations physical robot requires less second current smartphones. measuring long adaptation takes reported time adapt includes time required computer select test time conduct test physical robot. overall evaluating controller physical hexapod robot takes seconds seconds) second initialize robot seconds robot walk second allow robot stabilize taking ﬁnal measurement seconds slam algorithm. identifying ﬁrst controller test takes seconds. time select next controller test increases depending number previous experiments size kernel matrix involved many arithmetic operations grows column test conducted. example selecting second test takes seconds selection takes seconds. extended data figure effect changing algorithm’s parameters. shape matérn kernel function different values parameter. performance required adaptation time obtained different values value m-boa algorithm executed simulation independently generated behavior-performance maps different damage conditions number controllers affected observation according different values parameter. precision odometry value. distances traveled physical robot measured manually compared measurements automatically provided simultaneous location mapping algorithm. dashed black line indicates hypothetical case slam measurements error-free thus manual measurements. middle black lines represent medians borders shaded areas show percentiles. dotted lines minimum maximum values. gray bars show value chosen hexapod experiments main text. methods investigated damage conditions physical robot addition described main text used setup described main text extended data fig. shows scenarios. damage scenarios replicated experiments physical robot independently generated behavior-performance maps also replicated control experiments consist traditional bayesian optimization directly original parameter space times damage conditions experimental control treatments experiment involved evaluations physical robot many cases evaluations required reach target report number trials required reach goal. generated maps regions different performance values behaviors arranged concentric shapes resembling cardioids cover places robot reach black line drawn shown corresponds positions end-effector degrees freedom angle theoretically highest achievable performance performance behaviors tends decrease optimal line. adaptation results show intelligent trial error algorithm manages reach goal less center runs tested scenarios save scenarios algorithm still reaches target time respectively. damage conditions intelligent trial error algorithm reaches target signiﬁcantly often bayesian optimization algorithm speciﬁcally median number iterations reach target iterations scenarios except iterations required respectively. robot able reach target recorded number iterations explains median number iterations bayesian optimization algorithm equal damage conditions. damage conditions except intelligent trial error algorithm used fewer trials reach target traditional bayesian optimization algorithm. robot allowed continue experiment reaching radius tolerance total iterations reaches accuracy around damage conditions except difﬁcult ones level accuracy never achieved classic bayesian optimization algorithm whose lowest median accuracy .cm. scenarios appear challenge intelligent trial error algorithm. cases success rate improved though substantially case median accuracy actually lower. results stem fact difference successful pre-damage post-damage behaviors large post-damage solutions scenarios outside map. illustrates limit proposed approach contain behavior able cope damage robot able adapt. limit mainly comes behavioral descriptor choice chose simplicity capture important dimensions variation robot. sophisticated descriptors likely allow algorithm cope situations. hand experiment shows simple behavioral descriptor using ﬁnal position end-effector approach able deal large variety different target positions signiﬁcantly faster traditional bayesian optimization approach current state technique direct policy search robotics. methods intelligent trial error algorithm relies three main concepts creation behavior-performance simulation map-elites algorithm searching bayesian optimization algorithm behaviors perform well physical robot initializing bayesian optimization search performance predictions obtained map-elites algorithm note second step could performed without third step searching map-elites-generated behavior-performance bayesian optimization initial priors uniformly value. investigated contribution subcomponents testing variants algorithm them deactivated three subcomponents replaced alternative algorithm literature. tested variants hexapod robot. variants follows variant evaluates beneﬁt searching bayesian optimization searching random search instead. iteration behavior randomly selected tested robot. best kept. variant evaluates contribution initializing gaussian process performance predictions behavior-performance map. variant gaussian process initialized constant mean location behavior space constant variance customary ﬁrst trials bayesian optimization process selected randomly instead letting algorithm choose points known improve performance. variant evaluates contribution using lower-dimensional behavioral space. variant searches directly original -dimensional parameter space instead reducing space lowerdimensional behavior space. thus variant behaviors produced ahead time algorithm searches directly original high-dimensional space. variant corresponds best algorithms known learn locomotion patterns. variant gaussian process initialized constant mean zero constant variance described above ﬁrst trials selected pure random search prime bayesian optimization algorithm. variant stochastic gradient descent original parameter space. approach classic reinforcement learning algorithm locomotion baseline many papers. necessary compare variants simulation because physical robot would required months experiments would repeatedly worn broken robot. modiﬁed simulator main experiments emulate different possible damage conditions involved removing different leg. variants map-elites creates used maps main experiments cases launched replicates variant eight maps damage conditions. therefore replicates variants. variants replicated experiment times damage conditions also replicates variant. simulated experiments roughly simulate distribution noisy odometry measurements real robot simulated performance values randomly perturbed multiplicative gaussian noise centered standard deviation analyze fastest walking speed achieved variant different numbers trials ﬁrst case trials maximum number iterations used intelligent trial error algorithm second case trials approximately number trials used previous work. results trials robot intelligent trial error signiﬁcantly outperforms variants m/s) demonstrating three main components algorithm needed quickly high-performing behaviors. among investigated variants random search performs best m/s) followed bayesian optimization m/s) policy gradient m/s). variants search directly parameter space working behavior variant policy gradient m/s). reasons random search performs better might expect. first contains high-performing solutions result intense search mapelites algorithm thus already contains high-performing gaits nearly every possible type. therefore variant testing random controllers randomly selecting high-performing solutions. second bayesian optimization policy gradient designed number trials without priors performance predictions introduced intelligent trial error algorithm bayesian optimization process needs learn overall shape search space model gaussian process. trials number effectively sample dimensions consequence number trials gaussian process models performance function informed enough effectively guide search. policy gradient algorithm gradient estimated empirically measuring partial derivative performance function dimension. following policy gradient algorithm performs trials iteration. consequently trials allowed iterates once. addition policy gradient local optimization algorithm highly depends starting point illustrated high variability performance achieved variant issues faced bayesian optimization policy gradient exacerbated algorithms search directly original -dimensional parameter space instead lowerdimensional behavior space map. mentioned previously working controller found variants directly searching high-dimensional space. overall analysis trials shows that critical component intelligent trial error algorithm map-elites algorithm reduces search space produces high-performing behaviors space comparing variants searching behavior-performance space variants search original higher-dimensional space motor parameters. bayesian optimization critically improves search initialized performance obtained simulation behavior-performance creation step without initialization check whether variants might perform better allowed number evaluations typically given previous state-ofthe-art algorithms continued experiments trials robot conducted although results variants improved intelligent trial error still outperforms random search bayesian optimization policy search m/s). results consistent previously published results optimize dimensions hundred trials. nevertheless map-elites used i.e. algorithms original dimensions evaluations bayesian optimization policy gradient perform much worse policy gradient m/s). results shows map-elites powerful method reduce dimensionality search space learning algorithms addition providing helpful priors search space speed bayesian optimization. overall additional experiments demonstrate three main components intelligent trial error algorithm substantially improves performance. results also indicate intelligent trial error signiﬁcantly outperforms previous algorithms damage recovery gait learning therefore considered state art. methods creation algorithm uses undamaged robot terrain. main experiments show algorithm provides useful priors damage recovery terrain. supplementary experiments evaluated simulation created terrain also provides useful starting point discovering gaits sloped terrains. supplementary experiments roughly simulate distribution noisy odometry measurements real robot perturbed performance values multiplicative gaussian noise centered standard deviation results results show that slope negative intelligent trial error approach ﬁnds fast gaits fewer trials. reference hand-designed classic tripod gait falls slopes degrees. slope positive intelligent trial error ﬁnds slower behaviors expected even gait learned intelligent trial error outperforms reference gait ground. overall every slope angle controller found intelligent trial error faster hand-designed reference controller. evaluated damage recovery performance slopes setup experiments launched replicates damage condition independently generated behavior-performance maps two-degree increment degrees. therefore replicates two-degree increment total experiments. intelligent trial error critically affected variations slope slopes damage conditions intelligent trial error ﬁnds fast gaits less tests robot despite slope. expected ﬁnds faster gaits negative slopes slower gaits positive slopes slopes algorithm performs worse requires trials. results likely caused constraints placed controller limited sensors robot rather inabilities algorithm. speciﬁcally controller kept simple make science clearer intuitive reproducible. constraints course prevent performing complex behaviors necessary deal highly sloped terrain. example constraints prevent robot keeping legs vertical sloped ground would substantially reduce slippage. nevertheless median intelligent trial error compensatory gait still outperforms median performance reference gait slope angles. performing solution point map. explained main text point represents different type behavior deﬁned behavioral dimension map. map-elites generates candidate points randomly selecting location changing parameters controller stored there saving controller appropriate location better current occupant location. intuitively generating candidate solutions best solutions found better generating multitude controllers randomly keeping best found location map. section report experiments conﬁrm intuition. understand advantages map-elites random sampling compared algorithms generating data simulated hexapod. experiments virtual robot environment controller performance function behavioral descriptors main experiments analyzed number cells solution found average performance behaviors maximum performance discovered. results results show map-elites algorithm outperforms random sampling measures million evaluations cells ﬁlled map-elites whereas random sampling ﬁlled approximately cells difference algorithms large appears early million evaluations mapelites ﬁlled cells whereas random sampling ﬁlled cells solutions discovered map-elites numerous also outperform found random sampling map-elites million evaluations average performance ﬁlled cells whereas random sampling similar performance obtained reference controller damaged robot results demonstrate map-elites much better algorithm random sampling diverse elite performers search space. addition map-elites better optimization algorithm measured performance best single solution produced. performance best solution million evaluations map-elites compared random sampling. extended data figure comparing map-elites random sampling generating behavior-performance maps. number points behavior discovered. mean performance behaviors map. maximum performance behaviors map. ﬁgures middle lines represent medians independently generated maps shaded regions extend percentiles even variance distribution small difﬁcult see. supplementary experiment methods analysis. denote pitch roll angles respectively robot torso interval denotes number intervals seconds simulated movement unit step function returns argument exceeds returns otherwise. discount insigniﬁcant motion around orientation angles deﬁned positive exceed rad. similarly orientation angles deﬁned negative less rad. displacement behavioral descriptor characterizes changes postion robot walking. measured proportion intervals robot positively negatively displaced along axes methods create map-elites deﬁne dimensions behavioral space i.e. behavioral descriptors. main experiments show using predeﬁned behavioral descriptor creates provides useful priors damage recovery. section describes tested performance affected alternative behavioral descriptors including descriptors different number dimensions. also evaluated performance affected behavioral descriptors randomly selected large list potential descriptors. test simulates algorithm’s performance behavioral descriptors chosen without insight problem domain. denote linear displacement meters robot interval denotes number intervals seconds simulated movement unit step function returns value argument exceeds returns value otherwise. ignore insigniﬁcant motion linear displacements deﬁned positive exceed deﬁned negative less −mm. denotes boolean value whether contact ground time orientation behavioral descriptor characterizes changes angular position robot walking measured proportion intervals pitch roll angles robot frame positive negative denotes ground reaction force generates averaged seconds simulated movement. lower-leg pitch angle descriptor captures pitch angle lower-leg respect ground averaged seconds denotes energy utilized robot seconds simulated movement measured n.m.rad. maximum amount energy available according servo model simulator seconds n.m.rad. denote position robot’s center time denote ﬁnal position seconds. robot’s task move along y-axis. starting position deviation along axes computed maximum difference robot’s position dimensions point seconds. axis yﬁnal corresponds average speed robot therefore yﬁnal expected position timestep robot moving constant speed. deviation axis computed respect theoretical position. obtain values range ﬁnal behavioral descriptors multiplied divided total ground reaction force behavioral descriptor corresponds amount force applies ground measured fraction total possible amount force could apply ground. speciﬁcally measurement achieved alternative intentionally chosen behavioral descriptors similar original duty factor behavioral descriptor alternative intentionally chosen descriptors median performance within duty factor descriptor m/s). difference performance effectively nonexistent deviation descriptor m/s) total descriptor m/s) lower-leg roll angle descriptor m/s). lowest performance discovered relative descriptor m/s). terms statistical signiﬁcance performance achieved duty factor descriptor different deviation total descriptors. remaining descriptors difference performance statistically signiﬁcant exceed .m/s. additionally compensatory behaviors discovered alternative intentionally chosen descriptors always faster reference gait damage conditions. check whether alternative intentionally chosen behavioral descriptors lead better performance allowed higher number evaluations extended experiments trials robot trials difference performance duty factor behavioral descriptor m/s) alternative behavioral descriptors reduced. three alternative intentionally chosen descriptors median performance within duty factor descriptor. difference performance orientation m/s) total energy m/s) relative energy m/s) deviation m/s) relative m/s) lower-leg pitch angle m/s) lowerleg roll angle m/s) descriptors. three remaining behavioral descriptors displacement total lower-leg angle performance respectively terms statistical signiﬁcance performance achieved duty factor descriptor barely statistically signiﬁcantly different deviation descriptor remaining descriptors performance difference statistically signiﬁcant larger .m/s. random behavioral descriptor also performed similarly duty factor descriptor. trials performance m-boa maps generated random descriptor difference statistically signiﬁcant difference performance negligible .m/s. difference performance reduced trials duty factor description performance moreover intentionally chosen behavioral descriptors compensatory behavior discovered random descriptor also faster reference gait. experiments show selection behavioral dimensions critical good results. indeed tested behavioral descriptors even randomly generated perform well hand robot’s designers prior knowledge dimensions variation likely reveal different types behaviors algorithm beneﬁt knowledge improve results random random behavioral descriptor differs intentionally chosen descriptors consist type knowledge instead randomly selected subset variables previously described behavioral descriptors. descriptor intended simulate situation little expectation behavioral descriptor perform well quickly picks different descriptor dimensions without consideration experimentation. instead generating list fashion randomly sample large average performance approach many different possible choices. random descriptor -dimensions selected random available behavior descriptor dimensions described previous descriptors necessary compare behavioral descriptors simulation physical robot would required months experiments would repeatedly worn broken robot. modiﬁed simulator main experiments emulate different possible damage conditions involved removing different leg. map-elites algorithm million iterations used create behavior-performance maps behavioral descriptors generation behavior-performance maps behaviors stored map’s cells discretizing dimension behavioral descriptor space values -dimensional behavioral descriptors twenty equidistant values -dimensional behavioral descriptor. adaptation phase behaviors used actual values thus discretized. independently generated eight maps intentionally chosen behavioral descriptors. twenty independently generated maps generated random behavioral descriptor. launched replicates descriptor maps damage conditions. therefore replicates intentionally chosen descriptors replicates random descriptor. simulated experiments roughly simulate distribution noisy odometry measurements real robot simulated performance values randomly perturbed multiplicative gaussian noise centered standard deviation results following results include trials simulated robot maximum number trials required intelligent trial error compensatory gait supplementary experiment post-adaptation performance video viewed https//youtu.be/t-crkhue damage recovery robots intelligent trial error. video shows intelligent trial error algorithm action robots introduced paper hexapod robot degrees freedom robotic video shows several examples different types behaviors produced behavior-performance creation step classic hexapod gaits unexpected forms locomotion. then shows hexapod robot uses behavior-performance deal lost power finally video illustrates intelligent trial error algorithm applied second robot different damage conditions. video viewed http//youtu.be/yclspvlxk behavior-performance containing many different types walking gaits. behavior-performance creation step map-elites algorithm produces collection different types walking gaits. video shows several examples different types behaviors produced classic hexapod gaits unexpected forms locomotion. lizotte wang bowling schuurmans. automatic gait optimization gaussian process regression. proceedings international joint conference artiﬁcial intelligence vol. brochu cora freitas. tutorial bayesian optimization expensive cost functions application active user modeling hierarchical reinforcement learning. arxiv preprint arxiv. snoek larochelle adams. practical bayesian optimization machine learning algorithms. advances neural information processing systems grifﬁths lucas williams kalish. modeling human function learning gaussian processes. advances neural information processing systems jin. surrogate-assisted evolutionary computation recent advances future challenges. swarm evolutionary computation simpson mauery korte mistree. comparison response surface kriging models multidisciplinary design optimization. american institute aeronautics astronautics jones schonlau welch. efﬁcient global optimization expensive black-box functions. journal global optimization sacks welch mitchell wynn design analysis computer experiments. statistical science calandra seyfarth peters deisenroth. experimental comparison bayesian optimization bipedal locomotion. proceedings ieee international conference robotics automation matérn spatial variation. stochastic models application problems forest surveys sampling investigations. meddelanden fran statens skogsforskningsinstitut constrained minimization techniques. vol. siam dryanovski valenti xiao. fast visual odometry mapping rgb-d data. proceedings ieee international conference robotics automation ieee. sproewitz moeckel maye ijspeert. learning move modular robots using central pattern generators online optimization. international journal robotics research yosinski clune hidalgo nguyen zagal lipson. evolving robot gaits hardware hyperneat generative encoding parameter optimization. proceedings ecal clune stanley pennock ofria. performance indirect encoding across continuum regularity. ieee transactions evolutionary computation clune beckmann ofria pennock. evolving coordinated quadruped gaits hyperneat generative encoding. proceedings ieee congress evolutionary computation. yosinski glette lipson clune. evolving gaits physical robots hyperneat generative encoding beneﬁts simulation. applications evolutionary computing. springer saranli buehler koditschek. rhex simple highly mobile hexapod robot. international journal robotics research schmitz dean kindermann schumm cruse. biologically inspired controller hexapod walking simple solutions exploiting physical properties. biological bulletin steingrube timme wörgötter manoonpong. self-organized adaptation simple neural circuit enables complex robot behaviour. nature physics delcomyn. locomotion cockroach pariplaneta americana. journal experimental biology tesch schneider choset. using response surfaces expected improvement optimize snake robot gait parameters. proceedings ieee/rsj international conference intelligent robots systems ieee. hornby takamura yamamoto fujita. autonomous evolution dynamic gaits quadruped robots. ieee transactions robotics barfoot earon d’eleuterio. experiments learning distributed control hexapod robot. robotics autonomous systems", "year": 2014}