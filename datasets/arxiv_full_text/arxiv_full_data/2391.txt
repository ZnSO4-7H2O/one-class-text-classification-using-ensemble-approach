{"title": "Learning AMP Chain Graphs and some Marginal Models Thereof under  Faithfulness: Extended Version", "tag": ["stat.ML", "cs.AI", "cs.LG"], "abstract": "This paper deals with chain graphs under the Andersson-Madigan-Perlman (AMP) interpretation. In particular, we present a constraint based algorithm for learning an AMP chain graph a given probability distribution is faithful to. Moreover, we show that the extension of Meek's conjecture to AMP chain graphs does not hold, which compromises the development of efficient and correct score+search learning algorithms under assumptions weaker than faithfulness.  We also introduce a new family of graphical models that consists of undirected and bidirected edges. We name this new family maximal covariance-concentration graphs (MCCGs) because it includes both covariance and concentration graphs as subfamilies. However, every MCCG can be seen as the result of marginalizing out some nodes in an AMP CG. We describe global, local and pairwise Markov properties for MCCGs and prove their equivalence. We characterize when two MCCGs are Markov equivalent, and show that every Markov equivalence class of MCCGs has a distinguished member. We present a constraint based algorithm for learning a MCCG a given probability distribution is faithful to.  Finally, we present a graphical criterion for reading dependencies from a MCCG of a probability distribution that satisfies the graphoid properties, weak transitivity and composition. We prove that the criterion is sound and complete in certain sense.", "text": "abstract. paper deals chain graphs andersson-madigan-perlman interpretation. particular present constraint based algorithm learning chain graph given probability distribution faithful moreover show extension meek’s conjecture chain graphs hold compromises development eﬃcient correct score+search learning algorithms assumptions weaker faithfulness. also study problem represent result marginalizing nodes introduce family graphical models solves problem partially. name family maximal covariance-concentration graphs includes covariance concentration graphs subfamilies. describe global local pairwise markov properties mccgs prove equivalence. characterize mccgs markov equivalent show every markov equivalence class mccgs distinguished member. present constraint based algorithm learning mccg given probability distribution faithful finally present graphical criterion reading dependencies mccg probability distribution satisﬁes graphoid properties weak transitivity composition. prove criterion sound complete certain sense. paper deals chain graphs andersson-madigan-perlman interpretation interpretations exist literature namely lauritzen-wermuth-frydenberg interpretation multivariate regression interpretation interpretations sometimes considered competing thus relative merits pointed note however interpretation subsumes other many independence models induced interpretation cannot induced interpretation likewise neither interpretation subsumes interpretation vice versa paper consists three main sections. section present algorithm learning given probability distribution faithful knowledge ﬁrst present algorithm. however algorithms learning faithfulness already exist fact recently developed algorithm learning milder composition property assumption also recently developed algorithm learning faithfulness assumption richardson spirtes show desirable feature lack closed marginalization independence model resulting marginalizing nodes represented leads problem represent result marginalizing nodes course decide continue working treat marginalized nodes latent nodes. solution relies upon access thus solve problem knows underlying access know problem studied directed acyclic graphs richardson spirtes cgs. section present partial solution problem obtained far. speciﬁcally introduce study family graphical models call maximal covariance-concentration graphs mccgs solve problem hand partially represents result marginalizing nodes unfortunately mccgs solve problem completely represent result marginalizing nodes mccgs consist undirected bidirected edges unify generalize covariance concentration graphs hence name. concentration graphs introduced pearl represent independence models. speciﬁcally concentration graph probability distribution undirected graph nodes adjacent corresponding random variables independent given rest random variables. graphical criteria reading dependencies independencies proposed likewise covariance graphs introduced wermuth represent independence models. speciﬁcally covariance graph probability distribution bidirected graph nodes adjacent corresponding random variables marginally independent graphical criteria reading dependencies independencies proposed focus gaussian probability distributions could covariance graph gaussian probability distribution models covariance matrix whereas concentration graph models concentration matrix. think gaussian probability distributions would modeled accurately covariance concentration matrices modeled jointly single graph. something mccgs. finally section present graphical criterion reading dependencies mccg probability distribution assumption satisﬁes topological constraints satisﬁes graphoid properties weak transitivity composition. prove graphical criterion sound complete certain sense. section review concepts probabilistic graphical models used later paper. graphs probability distributions paper deﬁned ﬁnite graphs paper simple i.e. contain edge pair nodes. elements distinguished singletons. denote cardinality graph contains undirected directed bidirected edge nodes write parents nodes {v\u0000v neighbors nodes {v\u0000v spouses nodes {v\u0000v adjacents nodes {v\u0000v route node node sequence nodes nodes route distinct route called path. length route number edges route e.g. length route route called cycle cycle chord non-consecutive nodes cycle adjacent route called descending descendants nodes {vn\u0000 descending route cycle called semidirected cycle descending chain graph graph whose every edge undirected directed semidirected cycles. nodes graph complete undirected edge every pair nodes set. nodes graph undirectly connected exists route graph every pair nodes edges route undirected undirected connectivity component graph undirectly connected maximal undirected connectivity component node graph belongs denoted cog. subgraph induced nodes denoted graph edges whose ends immorality induced subgraph form induced subgraph form induced subgraph form triplex triplex equivalent adjacencies triplexes. independence model graphoid satisﬁes seven previous properties. denote independent given probability distribution markovian respect independence model pairwise disjoint subsets faithful pairwise disjoint subsets probability distribution satisﬁes ﬁrst four previous properties. faithful also satisﬁes last three previous properties. node route called head-no-tail node subroute node called non-head-no-tail node subroute note classify head-no-tail node consider edge ends well note also head-no-tail non-head-no-tail node e.g. take denote hree pairwise disjoint subsets route said z-open every head-no-tail node every non-head-no-tail node route node node z-open separated given denote denote hold. independence model induced denoted separation statements triplex equivalent section present algorithm learning given probability distribution faithful algorithm seen table resembles wellknown algorithm consists phases ﬁrst phase aims learning adjacencies whereas second phase aims directing adjacencies learnt. speciﬁcally ﬁrst phase declares nodes adjacent separated nodes. note algorithm test every possible separator note also separators tested tested increasing order size second phase consists steps. ﬁrst step ends edges learnt ﬁrst phase blocked according rules table block represented perpendicular line means edge cannot directed direction. second step edges exactly unblocked directed direction unblocked end. rules work follows conditions antecedent rule satisﬁed modiﬁcations consequent rule applied. note ends edges rules labeled circle circle represents unspeciﬁed i.e. block nothing. modiﬁcations consequents rules consist adding blocks. note blocks appear consequents added i.e. circled ends modiﬁed. conditions antecedents consist induced subgraph fact nodes separators found line condition antecedent consists induced subgraph speciﬁcally antecedent says cycle whose edges certain blocks. note cycle must chordless. correctness algorithm. section prove algorithm correct i.e. returns given probability distribution faithful start proving result probability distribution satisﬁes intersection composition properties. recall probability distribution faithful satisﬁes properties thus following result applies case assume cog. then semidirected cycle. assume without loss generality deg. then pag\u0000pag lemma thus pb\u0000pag decomposition follows adg. note that shown above times. note lemma implies adjacent adjacent adjacent together assumption made triplex implies because otherwise route sac-open contradicting gc\u0000sac. note ﬁrst second ﬁfth induced subgraphs impossible because otherwise would likewise third fourth induced subgraphs impossible because otherwise would prove triplex triplex form hence sac. then line executed neither lemmas then triplex note triplex immorality likewise triplex form hence sac. then line executed lemmas then triplex note triplex immorality proof. assume contrary lemma hold. interpret execution line sequence block addings rest proof particular sequence block addings ﬁxed. fixing sequence crucial point upon important later steps proof based. since several induced subgraphs form study line consider induced subgraphs appear ﬁrstly execution line rest proof. because otherwise would contradict assumption ﬁrstly induced subgraph form appeared execution line then must line however either ﬁrst cases contradiction. third case reduced case follows. fourth case reduced case similarly. third case implies block added moment execution line moment must happen later immediately adding block immediately adding block situation depicted ﬁgure case then block added situation depicted ﬁgure case because otherwise would contradict assumption ﬁrstly induced subgraph form appeared execution line then must line however either ﬁrst cases contradiction. third case reduced case follows. fourth case reduced case similarly. third case implies block added moment execution line moment must happen later immediately adding block immediately adding block situation depicted ﬁgure case then block added situation depicted ﬁgure case adjacent nodes route assume without loss generality closer route note must execution line implies must execution line repeated application argument conclude must execution line thus must execution line contradiction. proof. assume contradiction length three occur neither occur. note cannot occur either because otherwise must occur since former contradicts assumption latter must occur. however implies must occur contradicts assumption. similarly cannot occur either. then following forms ﬁrst form impossible lemma second form impossible because otherwise would occur third form impossible because otherwise would occur thus lemma holds cycles length three. assume contradiction length greater three edge edge vj+. note subroute either since edge repeated application reasoning together fact edge conclude every edge vk+. then repeated application observe every edge contradicts assumption. proof. lemma implies adjacencies. lemma implies triplexes. lemma implies semidirected chordless cycle implies semidirected cycle. latter implication assume contrary semidirected chordless cycle semidirected cycle chord then divide cycles note semidirected cycle. then semidirected cycle shorter repeated application reasoning conclude semidirected chordless cycle contradiction. discussion. section presented algorithm learning given probability distribution faithful practice course usually access ﬁnite sample algorithm easily modiﬁed deal situation replace pb\u0000s line hypothesis test preferably consistent resulting algorithm asymptotically correct. unfortunately succeeded proving correctness algorithm simpler rule. note output algorithm whether keep replace simpler sound rule. beneﬁt simpler rule decrease running time. proof. note every line induced subgraph form line excluded note also blocks follow adjacencies triplexes repeated application r-r. since adjacencies triplexes blocks hold lemma whose every every triplex equivalent called deﬂagged graph roverato studen´y therefore lemma implies algorithm outputs deﬂagged graph. note several deﬂagged graphs triplex equivalent unfortunately every directed edge output algorithm every deﬂagged graph triplex equivalent following example illustrates therefore algorithm outputs deﬂagged graph roverato studen´y call largest deﬂagged graph. latter distinguished member class triplex equivalent cgs. fortunately largest deﬂagged graph easily obtained deﬂagged graph class another distinguished member class triplex equivalent so-called essential graph edge member class. unfortunately algorithm output essential graph either following example illustrates. worth mentioning characterization essential graphs eﬃcient introduced available also eﬃcient algorithm constructing essential graph member class proposed know correctness algorithm proven though. correctness algorithm lies upon assumption faithful strong requirement would like weaken e.g. replacing milder assumption satisﬁes composition property. correct algorithms learning directed acyclic graphs composition property assumption exist recently developed correct algorithm learning composition property algorithms proceed rather diﬀerent algorithm presented section nutshell seen consisting phases ﬁrst phase starts empty graph adds single edges markovian respect second phase removes single edges markovian respect markovian respect success ﬁrst phase guaranteed composition property assumption whereas success second phase guaranteed so-called meek’s conjecture speciﬁcally given directed acyclic graphs meek’s conjecture states transform sequence operations that operation directed acyclic graph operations consist adding single edge replacing triplex equivalent directed acyclic graph. meek’s conjecture proven true extension meek’s conjecture proven true unfortunately extension meek’s conjecture hold following example illustrates. example compromises development score+search learning algorithms correct eﬃcient composition property assumption clear whether also constraint based algorithms. something plan study. mentioned introduction closed marginalization leads problem represent result marginalizing nodes section present partial solution problem obtained far. speciﬁcally introduce study family graphical models call maximal covariance-concentration graphs. models solve problem hand partially represents result marginalizing nodes unfortunately models solve problem completely represent result marginalizing nodes first deﬁne covariance-concentration graphs graphs whose every edge undirected bidirected. node path called triplex node subpath denote three pairwise disjoint subsets path said z-open typically every missing edge graphical model corresponds separation. however true ccgs. instance contain edge gd\u0000z likewise contain edge ge\u0000z edge added mccg without changing independence model induced hence name. note mccg represents separations obtained replacing every bidirected edge therefore represents marginal independence model section discussion relationship mccgs families graphical models. note also covariance concentration graphs mccgs deﬁnitions separation covariance concentration graphs special cases introduced mccgs therefore mccgs unify generalize covariance concentration graphs. note mccg subgraph spouse constraint implies must edge mccg whereas constraint implies edge must undirected. therefore mccg path spouse edge must mccg. therefore independence model induced mccg whether deﬁnition z-open path following simpler one. path mccg said z-open proof. suﬃces replace every bidirected edge create apply theorem levitz conclude exists regular gaussian probability distribution faithful marginal probability distribution another interesting property mccgs closed marginalization every mccg exists so-called marginal mccg pairwise disjoint subsets speciﬁcally obtained adding edge path nodes path finally show independence model induced mccg coincides certain closure certain separations. deﬁne local separation base mccg following separations deﬁne closure local separation base denoted separations base plus derived applying graphoid composition weak transitivity properties. denote separations proof. since independence model induced satisﬁes graphoid composition weak transitivity properties corollary suﬃces prove local separation base subset independence model induced prove next. nonadjacent nodes undirected connectivity component every path triplex node. therefore hand undirected connectivity component every path falls within following cases. proof. assume contrary. then path open. moreover must occur because otherwise would also z-open would contradict assumption gb\u0000z. reason must non-triplex node subpath note edge deﬁnition mccg spouse then path obtained replacing subpath edge z-open. however contradicts assumption gb\u0000z. proof. since independence model induced satisﬁes decomposition property satisﬁes composition property suﬃces prove gb\u0000z clb\u0000z prove result induction \u0000z\u0000. must diﬀerent undirected connectivity components consequently clb. assume induction hypothesis theorem holds prove consider following cases. case node spouse node gc\u0000z then gc\u0000z assume contrary. then gc\u0000z gc\u0000z imply gb\u0000z gb\u0000z weak transitivity implies gb\u0000z gb\u0000z assumption. however contradicts lemma finally note gc\u0000z implies clc\u0000z induction hypothesis. note also gb\u0000z lemma thus clb\u0000z induction hypothesis. then clb\u0000z symmetry composition weak union. case cases apply. node then gc\u0000z note also gb\u0000z assume contrary. then path open. moreover must occur because otherwise would also z-open would contradict assumption gb\u0000z. however implies gc\u0000z contradiction. finally note gc\u0000z gb\u0000z imply clc\u0000z clb\u0000z induction hypothesis. then clb\u0000z composition weak union. case node spouse then gc\u0000z thus clc\u0000z induction hypothesis. note gb\u0000z lemma thus clb\u0000z induction hypothesis. then clb\u0000z symmetry composition weak union. case node spouse gc\u0000z then gc\u0000z assume contrary. then gc\u0000z gc\u0000z imply gb\u0000z gb\u0000z weak transitivity implies gb\u0000z gb\u0000z assumption. however contradicts lemma finally note gc\u0000z implies clc\u0000z induction hypothesis. note also gb\u0000z lemma thus clb\u0000z induction hypothesis. then clb\u0000z composition weak union. partition mccg consistent every bidirected edge nodes diﬀerent elements every undirected edge nodes element note elements undirectly connected thus coincide undirected connectivity components therefore every undirected connectivity component contained element element contain several undirected connectivity components deﬁne closure pairwise separation base relative denoted separations base plus derived applying graphoid composition weak transitivity properties. denote separations belong element belong undirected connectivity component recall denote nodes neg. denote nodes denote nodes then vi\u0000q pairwise separation base then {vl+ vn}\u0000{v intersection thus vi\u0000{v decomposition consequently separations local separation base closure pairwise separation base. likewise note vj\u0000{v local separation base note also bidirected edge nodes consistent therefore local separation base then {vl+ vm}\u0000{v composition. moreover {vm+ symmetry composition thus {vm+ vn}\u0000{v symmetry weak union. then {vl+ vn}\u0000{v composition thus vi\u0000q weak union consequently separations pairwise separation base closure local separation base. markov equivalence mccgs. mccgs markov equivalent induce independence model. mccg triplex induced subgraph mccgs triplex equivalent adjacencies triplexes. proof. ﬁrst prove only part. markov equivalent mccgs. first assume adjacencies. speciﬁcally assume withloss generality adjacent then gb\u0000neg theorem neither separations holds contradiction. second assume adjacencies diﬀerent triplexes. specifically assume without loss generality triplex have. assume also without loss generality then gc\u0000neg theorem neither separations holds contradiction. prove part. triplex equivalent mccgs. prove implies opposite implication proven manner exchanging roles proof. speciﬁcally assume shortest z-open paths node node path consists nodes then z-open. assume contrary. then following cases must occur. case triplex then must adjacent because otherwise would triplex equivalent. path obtained replacing triplex edge note cannot z-open because otherwise case triplex then must spouse z-open. then edge must deﬁnition mccg. then path obtained replacing subpath edge z-open. however contradicts deﬁnition case triplex then triplex because otherwise would z-open. then must adjacent triplex equivalent. path obtained replacing triplex edge note cannot z-open because otherwise would contradict deﬁnition then z-open meet requirements. assume without loss generality meet requirements. then following cases must occur. however subgraph implies z-open contradiction. case triplex note cannot triplex node because otherwise would z-open. then following subgraph must occur worth mentioning proof theorem makes concepts introduced paper. alternative proof theorem relies upon previous works follows. note later proposition every mccg transformed maximal ancestral graph induces independence model mccg. moreover markov equivalence maximal ancestral graphs characterized follows characterization maximal ancestral graphs obtained mccgs proposition markov equivalent mccgs triplex equivalent. proof. assume contrary sets bidirected edges. mccg exactly bidirected edges sets mccg exactly bidirected edges set. every edge replace call resulting graph prove mccg triplex equivalent contradiction since proper superset bidirected edges first show induced subgraph spouse assume contrary. then induced subgraph must occur moreover edge must then induced subgraph plus edge contradicts deﬁnition mccg. mccg blarger another mccg every bidirected edge lemma implies every triplex equivalence class distinguished member namely blargest mccg class. show distinguished member obtained member class. bidirecting undirected connectivity component mccg mean replacing every edge edge moreover bidirecting feasible complete set. proof. denote undirected connectivity component bidirected. first show induced subgraph spouse assume contrary. then because otherwise would mccg. therefore thus edges must contradiction. third note adjacencies fourth note triplexes too. finally assume contrary triplex have. then induced subgraph must thus however implies complete contradiction. proof. assume contrary blargest mccg triplex equivalence class then must exist edge edge denote undirected connectivity component note cannot complete feasible bidirecting performed then induced subgraph note also induced subgraph because otherwise would triplex equivalent. then must subgraph subgraph note must adjacent because otherwise would triplex equivalent. then edge must deﬁnition mccg. likewise edge must however implies induced subgraph whereas induced subgraph contradicts assumption triplex equivalent. undirecting bidirected edges mccg mean inverse operation bidirecting undirected connectivity component mccg. words result undirecting bidirected edges mccg mccg result bidirecting undirected connectivity component moreover undirecting feasible corresponding bidirecting feasible. algorithm learning mccgs. section present constraint based algorithm learning mccg given probability distribution faithful algorithm seen table resembles well-known algorithm consists phases ﬁrst phase aims learning adjacencies whereas second phase aims learning edge type adjacency learnt. speciﬁcally ﬁrst phase declares nodes adjacent separated nodes. note algorithm test every possible separator note also separators tested tested increasing order size second phase identiﬁes edge type pair adjacent nodes avoiding false triplexes enforcing constraints proof. first prove adjacencies line consider pair nodes pb\u0000s faithfulness assumption. consequently times. hand pb\u0000neg faithfulness assumption theorem note that mentioned before times. therefore exist line pb\u0000s thus edge removed line consequently line second must triplex equivalent line because shown above adjacencies lines perform necessary replacements. actually reason must blargest mccg triplex equivalent class discussion. section aimed solving problem represent result marginalizing nodes introduced maximal covarianceconcentration graphs family graphical models solves problem partially. however forget moment motivation develop mccgs treat mccgs competing families graphical models want know suitable other. instance preferred causal order nodes exists. heuristic perfectly reasonable fail order partial. instance consider marginalize nodes then resulting independence model represented mccg cannot represented despite existence partial order hand mccgs preferred latent variables exist. again heuristic perfectly reasonable fail. instance consider marginalize nodes then resulting independence model represented cannot represented mccg despite existence latent variables summary examples show independence models represented family other. therefore believe beneﬁcial families complementary rather competing. also worth assessing merits mccgs respect families graphical models maximal ancestral graphs summary graphs graphs. maximal ancestral graph graph whose every edge undirected directed bidirected satisﬁes certain topological constraints among topological constraints following relevant paper cannot subgraph form circle represents unspeciﬁed i.e. arrow nothing. constraint clearly implies every mccg mag. however every independence model induced mccg induced proposition shows. therefore sense mccgs subfamily mags. state mentioned proposition need introduce separation criterion mags. route called strictly descending strict ascendants nodes sang strictly descending route node path called triplex node subpath denote three pairwise disjoint subsets path said z-open every triplex node sang every non-triplex node outside z-open path node node separated given denote independence model induced separation statements note replacement proposition create bidirected edges. instance mccg gets translated despite proposition above cases mccg natural representation domain hand thus mccgs still worth consideration. following example illustrates this. example consider call consider independence model resulting marginalizing model represented mccg mags note mags represent model. however mags suggest existence causal relationship although neither exists hand mccg suggest causal relationship thus preferable. reason mags conﬂict original model example mags introduced represent result marginalization and/or conditioning directed acyclic graphs cgs. recall mccgs introduced represent result marginalization certain cgs. families graphical models induce independence models induced mags summary graphs graphs however families rather counterintuitive undesirable feature every missing edge corresponds separation mccgs mags hand disadvantage beginning section noted family includes covariance concentration graphs subfamilies. thus allows model covariance concentration matrices gaussian probability distribution jointly single graph rather modeling former covariance graph latter concentration graph. argued that family model accurately probability distribution. show example illustrates this. despite example above discard possibility gaussian probability distributions modeled accurately covariance graph plus concentration graph mccg. would like study occurs all. correctness learning algorithm lies upon assumption faithful mccg. strong requirement would like weaken e.g. replacing milder assumption satisﬁes composition property. however extension meek’s conjecture mccgs hold example illustrates. compromises development score+search learning algorithms correct eﬃcient composition property assumption. clear whether also constraint based algorithms. something plan study. then ha\u0000c ha\u0000{c hd\u0000c hd\u0000{c d}\u0000c}. easily conﬁrm using deﬁnition separation also conﬁrm using corollary mccg triplex equivalent finally obvious cannot transform adding single edge. section present graphical criterion reading dependencies mccg probability distribution assumption satisﬁes topological constraints satisﬁes graphoid properties weak transitivity composition. prove criterion sound complete certain sense. note separation criterion introduced section sound complete identifying independencies sound sense identiﬁes independencies complete sense identiﬁes independencies identiﬁed studying alone. soundness follows follows. recall corollary separations identiﬁed graphical criterion correspond partition consistent speciﬁcally denote undirected connectivity components then satisﬁes independencies corresponding separations pairwise separation base relative deﬁnition thus satisﬁes independencies corresponding separations graphoid. completeness follows fact graphoids faithful thus interesting feature mmccg graphoid allows identify independencies shown also dependencies show below. speciﬁcally introduce sound complete graphical criterion identifying dependencies assumption cycle undirected bidirected edges. assumption implies connectivity components form kind tree following example illustrates. remark formalizes observation. note covariance concentrations graphs always satisfy assumption. remark assume cycle undirected bidirected edges. undirected connectivity component bidirected connectivity component then contains node. moreover contains node every path node node passes call dependencies dependence base dependencies derived dependence base graphoid properties. purpose rephrase graphoid properties contrapositive form follows. symmetry px\u0000z decomposition weak union contraction problematic deriving dependencies contains disjunction consequent thus split properties contraction contraction likewise intersection gives rise intersection intersection note intersection intersection equivalent thus refer simply intersection. similarly weak transitivity gives rise weak transitivity pk\u0000z weak transitivity pk\u0000z finally composition gives rise composition composition since composition composition equivalent refer simply composition. independence antecedent properties holds corresponding separation holds best solution hope because shown above separation criterion sound complete graphoids. moreover solution require information available namely equivalently dependence base deﬁne graphoid closure dependence base dependencies dependence base plus derived applying nine properties above. note alternatively deﬁne dependence base following dependencies results would still hold introduce graphical criterion identifying dependencies graphoid mccg. worth mentioning graphical criterion subsumes developed pe˜na pe˜na reading dependencies covariance graph concentration graph graphoid respectively. proof. closest node ρa∶b then ρa∶b path u-open. assume contrary second path ̺a∶b note ̺a∶b cannot u-open because otherwise would second path u-open contradiction. therefore following cases must occur. case non-triplex node ̺a∶b however together fact ρa∶b u-open imply either triplex node ρa∶b non-triplex node ρa∶b spouse either case spouse thus ̺a∶b u-open contradiction. case triplex node ̺a∶b however together fact ρa∶b u-open imply non-triplex node ρa∶b. moreover triplex node ̺a∶b implies spouse then removing ρa∶b results second path deﬁnition mccgs which moreover u-open contradiction. contrary second path ̺a∶b. note must non-triplex node ̺a∶b because otherwise path would also u-open contradiction. reason cannot spouse however contradicts assumptions made. proof. remark assume without loss generality nodes ρa∶b spouse node ρa∶b spouse then ρa∶b path -open neither activate paths deactivate ρa∶b. repeating reasoning node exists leads desired result. proof. denote bidirected connectivity component contains denote nodes connected path passes neg. denote nodes connected path passes neg. denote nodes connected path passes respectively. note gb\u0000u note also path makes statement hold contains bidirected edges nodes remark thus pb\u0000u graphoid closure dependence base then sb\u0000u decomposition. moreover gsb\u0000u follows remark therefore pb\u0000u contraction pb\u0000u decomposition. moreover gb\u0000u follows remark therefore pb\u0000u symmetry contraction. case gd\u0000u gd\u0000u then paths ρa∶d ρb∶d -open. note ρa∶d ρb∶d forms respectively remark note also ρa∶c contain because otherwise ρa∶d would -open since would triplex node ρa∶d likewise ρb∶c contain denote closest node ρa∶c ρb∶c. then ρa∶c path which moreover -open. latter note triplex node ρa∶d ρa∶c moreover ρa∶d -open. however implies second path u-open contradicts assumption gb\u0000u. note derivation pb\u0000u made dependencies dependence base nine properties introduced beginning section. thus pb\u0000u graphoid closure dependence base proof. denote undirected connectivity component contains denote nodes connected path passes spg. denote nodes connected path passes spg. denote nodes connected path passes respectively. note gb\u0000u note also path makes statement hold contains undirected edges nodes remark thus pb\u0000u graphoid closure dependence base then sb\u0000u decomposition. moreover gsb\u0000u follows remark therefore pb\u0000u contraction pb\u0000u decomposition. moreover gb\u0000u follows remark therefore pb\u0000u symmetry contraction. case paths -open pass paths -open pass assume without loss generality paths -open pass since must non-triplex node paths. therefore none paths -open because otherwise would spouse thus removing paths would result path deﬁnition mccgs which moreover would open would pass contradicts assumption path exist. consequently gd\u0000u then decomposition pb\u0000u intersection. case node ρa∶c ρb∶c. then ρa∶c ρc∶b path which moreover -open. latter note non-triplex node ρa∶c ρc∶b spouse however implies second path u-open contradicts assumption gb\u0000u. case node ρa∶c ρb∶c. then denote closest node ρa∶c ρb∶c. then ρa∶c path which moreover -open. latter note non-triplex node ρa∶d ρa∶c moreover ρa∶d -open. note derivation pb\u0000u made dependencies dependence base nine properties introduced beginning section. thus pb\u0000u graphoid closure dependence base denote number connectivity components ρa∶b passes through. result holds lemma assume induction hypothesis result holds prove denote farthest node ρa∶b connectivity component note note also ρa∶c ρc∶b paths -open because otherwise would second path u-open remark contradicts gb\u0000u. then gc\u0000u gb\u0000u thus pc\u0000u pb\u0000u induction hypothesis. note gb\u0000u remark then pb\u0000u weak transitivity. proof. clearly dependencies dependence base identiﬁed graphical criterion deﬁnition therefore remains prove graphical criterion satisﬁes nine properties introduced beginning section. contraction ρa∶b denote path nodes make left-hand side hold. following remark assume without loss generality nodes ρa∶b respectively. note also implies node path ρa∶b then ρa∶b -open. second path -open ̺a∶b shortest paths. then node ρa∶b -open ̺a∶b not. note ̺a∶b -open must contain non-triplex node because otherwise ̺a∶b would u-open contradiction. moreover note implies following cases must occur. case cases apply. then ̺a∶d must contain non-triplex node clearly ρa∶b -open. moreover adding activate paths. path nodes -open -open because otherwise would triplex node thus would spouse thus removing ̺a∶b would result path deﬁnition mccgs which moreover would -open contradicts assumption ̺a∶b shortest paths. contraction ρa∶b denote path nodes make left-hand side hold. following remark assume without loss generality nodes ρa∶b respectively. note also implies node path ρa∶b then ρa∶b -open. second path ̺a∶b -open node ρa∶b -open ̺a∶b not. note ̺a∶b -open must contain triplex node because otherwise ̺a∶b would u-open contradiction. moreover note implies following cases must occur. case cases apply. then ̺a∶d must contain triplex node clearly ρa∶b -open. moreover removing activate paths. path nodes -open -open because otherwise would non-triplex node however recall triplex node ̺a∶d. then spouse thus would -open contradiction. intersection ρa∶b denote path nodes make left-hand side hold. following remark assume without loss generality nodes ρa∶b respectively. note also implies node path ρa∶b then ρa∶b -open. second path -open ̺a∶b shortest paths. then node ρa∶b -open ̺a∶b not. note ̺a∶b -open must contain triplex node because otherwise ̺a∶b would u-open contradiction. moreover note implies following cases must occur. case ̺a∶d contains triplex node however contracase cases apply. then ̺a∶d must contain non-triplex node clearly ρa∶b -open. moreover adding activate paths. path nodes -open -open because otherwise would triplex node thus would spouse thus removing ̺a∶b would result path deﬁnition mccgs which moreover would -open contradicts assumption ̺a∶b shortest paths. weak transitivity gk\u0000z ρa∶k denote path nodes make gk\u0000z hold. likewise ρk∶b denote path nodes make hold. show path ρa∶k ρk∶b nodes make hold. following remark assume without loss generality node ρa∶k node ρk∶b note also implies ρa∶k node ρk∶b node following remark assume without loss generality nodes ρa∶k spouse nodes ρk∶b spouse second note ρa∶k ρk∶b path node ρa∶k ρk∶b. assume contrary. speciﬁcally denote closest node ρa∶k ρk∶b. note path ρa∶c ρc∶b cannot -open therefore following cases must occur. case triplex node ρa∶c ρc∶b however together fact ρa∶k -open imply non-triplex node ρa∶k. moreover triplex node ρa∶c ρc∶b implies spouse then removing ρa∶k results second path deﬁnition mccgs which moreover -open contradiction. moreover note ρa∶k ρk∶b must -open because otherwise would non-triplex node ρa∶k ρk∶b would contradict finally second path -open must triplex node path because otherwise path would contradict however implies second path -open contradiction. denote path nodes make hold. show path ρa∶k ρk∶b nodes make hold. following remark assume without loss generality node ρa∶k node ρk∶b note also implies ρa∶k node ρk∶b node following remark assume without loss generality nodes ρa∶k spouse nodes ρk∶b spouse finally second path -open must non-triplex node path because otherwise path would contradict however implies second path -open contradiction. composition ρa∶b denote path nodes make left-hand side hold. following remark assume without loss generality nodes ρa∶b respectively. note also implies node path ρa∶b then ρa∶b -open. second path ̺a∶b -open node ρa∶b -open ̺a∶b not. note ̺a∶b -open must contain non-triplex node because otherwise ̺a∶b would u-open contradiction. moreover note implies following cases must occur. case cases apply. then ̺a∶d must contain triplex node clearly ρa∶b -open. moreover removing activate paths. path nodes -open -open because otherwise would non-triplex node however recall triplex node ̺a∶d. then spouse thus would -open contradiction. theorem somewhat expected single path u-open possibility path cancelation combination theorems rather exciting simple graphical criterion decide whether given dependence graphoid closure dependence base i.e. need derivation usually tedious task. worth mentioning graphical criterion deﬁnition complete sense identifying dependencies shared graphoids whose mmccg note also neither graphical criterion deﬁnition sound graphical criterion complete sense identifying dependencies counterexamples. reasons developing graphical criterion deﬁnition imply however cycle corollary proves imply moreover identifying dependencies sound complete strictest sense possible since identiﬁed. proof. assume contrary faithful since mccg assumption equivalent assume exist three pairwise disjoint subsets denoted however implies must exist path node node -open. furthermore since cycle must path however implies thus theorem contradiction. discussion. section introduced sound complete graphical criterion reading dependencies mccg graphoid e.g. gaussian probability distribution. recall advantages mccgs ability model covariance concentration matrices gaussian probability distribution jointly single graph rather modeling former covariance graph latter concentration graph. argued that mccgs model accurately probability distribution. show examples illustrate this. speciﬁcally examples show mmccg graphoid identify dependencies covariance graph concentration graph jointly. example consider gaussian probability distribution faithful mccg below. recall theorem probability distribution exists. note mmccg moreover cycle undirected bidirected edges. despite examples above discard possibility gaussian probability distributions modeled accurately covariance graph plus concentration graph mccg. would like study occurs all. would like thank anonymous reviewers specially reviewer comments. work funded center industrial information technology so-called career contract link¨oping university swedish research council feder funds spanish government project tin--c-.", "year": 2013}