{"title": "Limbo: A Fast and Flexible Library for Bayesian Optimization", "tag": ["cs.LG", "cs.AI", "cs.RO", "stat.ML"], "abstract": "Limbo is an open-source C++11 library for Bayesian optimization which is designed to be both highly flexible and very fast. It can be used to optimize functions for which the gradient is unknown, evaluations are expensive, and runtime cost matters (e.g., on embedded systems or robots). Benchmarks on standard functions show that Limbo is about 2 times faster than BayesOpt (another C++ library) for a similar accuracy.", "text": "personal robotics imperial college london london inria nancy grand villers-l`es-nancy france cnrs loria vandœuvre-l`es-nancy france universit´e lorraine loria vandœuvre-ls-nancy france limbo open-source library bayesian optimization designed highly ﬂexible fast. used optimize functions gradient unknown evaluations expensive runtime cost matters benchmarks standard functions show limbo times faster bayesopt similar accuracy. machine learning. bayesian optimization designed challenging ones gradient unknown evaluating solution costly evaluations noisy. instance case want optimal parameters machine learning algorithm testing parameters take hours stochastic nature many machine learning algorithms. besides parameter tuning bayesian optimization recently attracted interest direct policy search robot learning online adaptation; example recently used allow legged robot learn gait mechanical damage trials core bayesian optimization builds probabilistic model function optimized using samples already evaluated usually model gaussian process select next sample evaluated bayesian optimization optimizes acquisition function leverages model predict promising areas search space. typically acquisition function high areas explored algorithm model predicts highperforming solutions. result bayesian optimization handles exploration exploitation trade-oﬀ selecting samples combine good predicted value high uncertainty. spite strong mathematical foundations bayesian optimization template fully-speciﬁed algorithm. bayesian optimization algorithm following components need chosen initialization function model acquisition function global non-linear optimizer acquisition function non-linear optimizer learn hyper-parameters models speciﬁc applications often require speciﬁc choice components research articles focus introduction single component almost inﬁnite number variants bayesian optimization calls ﬂexible libraries components easily substituted alternative ones many applications run-time cost negligible compared evaluation potential solution case online adaptation robots algorithm small embedded platforms interactive applications algorithm needs quickly react inputs. knowledge open-source library combines high-performance implementation bayesian optimization high ﬂexibility needed developing deploying novel variants. limbo open-source library provides modern implementation bayesian optimization ﬂexible highperforming. depend proprietary software code standard-compliant currently mostly defigure comparison accuracy wall clock time limbo bayesopt state-of-the library bayesian optimization common test functions conﬁgurations tested without optimization hyper-parameters gaussian process. experiment replicated times. median data pictured thick represents ﬁrst third quartiles. extreme data points delimited whiskers outliers individually depicted smaller circles. limbo conﬁgured reproduce default parameters bayesopt. veloped gnu/linux clang compilers. library distributed github repository bugs developments handled community developers users. extensive documentation available contains guides examples tutorials. contributors rely full reference developments checked continuous integration platform limbo instrumental several robotics projects successfully used internally ﬁelds. implementation limbo follows template-based policy-based design allows highly ﬂexible without paying cost induced classic object-oriented designs practice changing components algorithms limbo usually requires changing template deﬁnition source code. design make possible users rapidly experiment test ideas fast specialized code. policy-based design limbo allows users deﬁne adapt variants bayesian optimization little change code. deﬁnition optimized function achieved creating functor function) takes input vector outputs resulting vector object also deﬁnes input output dimensions problem example maximize function eric brochu vlad cora nando freitas. tutorial bayesian optimization expensive cost functions application active user modeling hierarchical reinforcement learning. arxiv preprint arxiv. roberto calandra andr´e seyfarth peters marc peter deisenroth. bayesian optimization learning gaits uncertainty. annals mathematics artiﬁcial intelligence ruben martinez-cantin. bayesopt bayesian optimization library nonlinear optimization experimental design bandits. journal machine learning research jasper snoek hugo larochelle ryan adams. practical bayesian optimization machine learning algorithms. advances neural information processing systems pages aaron wilson alan fern prasad tadepalli. using trajectory data improve bayesian optimization reinforcement learning. journal machine learning research hile default functors provided components boptimizer replaced allow researchers investigate variants. example changing kernel function squared exponential kernel another type kernel using acquisition function achieved follows addition many kernel mean acquisition functions implemented limbo provides several tools internal optimization acquisition function hyper-parameters. example wrapper around nlopt library allows limbo used large variety internal optimization algorithms. moreover several restarts internal optimization processes performed parallel avoid local optima minimal computational cost several internal optimizations chained order take advantage global aspects algorithms local properties others.", "year": 2016}