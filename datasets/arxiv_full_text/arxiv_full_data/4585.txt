{"title": "Knowledge revision in systems based on an informed tree search strategy  : application to cartographic generalisation", "tag": ["cs.AI", "cs.LG"], "abstract": "Many real world problems can be expressed as optimisation problems. Solving this kind of problems means to find, among all possible solutions, the one that maximises an evaluation function. One approach to solve this kind of problem is to use an informed search strategy. The principle of this kind of strategy is to use problem-specific knowledge beyond the definition of the problem itself to find solutions more efficiently than with an uninformed strategy. This kind of strategy demands to define problem-specific knowledge (heuristics). The efficiency and the effectiveness of systems based on it directly depend on the used knowledge quality. Unfortunately, acquiring and maintaining such knowledge can be fastidious. The objective of the work presented in this paper is to propose an automatic knowledge revision approach for systems based on an informed tree search strategy. Our approach consists in analysing the system execution logs and revising knowledge based on these logs by modelling the revision problem as a knowledge space exploration problem. We present an experiment we carried out in an application domain where informed search strategies are often used: cartographic generalisation.", "text": "work presented paper deals problem knowledge revision systems based specific informed search strategy. propose approach automatic knowledge revision systems. part introduce general context work takes place difficulties must face. part devoted presentation approach. part describes application approach cartographic generalisation. context present real case study carried well results. part concludes presents perspectives work. description considered optimisation problems many real world problems expressed optimisation problems. goal kind problems find among possible solutions maximises evaluation function. optimisation problem class defined entity class characterised current state. solving consists finding state optimises applying actions {action}p initial state abstract many real world problems expressed optimisation problems. solving kind problems means find among possible solutions maximises evaluation function. approach solve kind problem informed search strategy. principle kind strategy problem-specific knowledge beyond definition problem find solutions efficiently uninformed strategy. kind strategy demands define problem-specific knowledge efficiency effectiveness systems based directly depend used knowledge quality. unfortunately acquiring maintaining knowledge fastidious. objective work presented paper propose automatic knowledge revision approach systems based informed tree search strategy. approach consists analysing system execution logs revising knowledge based logs modelling revision problem knowledge space exploration problem. present experiment carried application domain informed strategies often used cartographic generalisation. introduction problem-solving topics artificial intelligence. among solving approaches based informed search strategy. principle kind strategy problem-specific knowledge beyond definition problem find solutions efficiently uninformed strategy. efficiency systems based kind strategy directly depends used knowledge quality. unfortunately usually difficult acquire expert knowledge. eward feigenbaum formulated problem knowledge acquisition bottleneck problem. indeed expert knowledge many ways solve problems kind. paper interested systems solve exploring state tree means informed strategy. systems often used real world problems thanks efficiency. section present generic system revision approach dedicated. revision approach could used kinds systems adaptations. description considered systems generic system based informed depth-first exploration state trees. passage state another corresponds application action. figure presents action cycle. begins characterisation current state entity evaluation using function then system tests current state good enough necessary continue exploration others states. system decides continue exploration tests current state valid not. entity backtracks previous state otherwise system constructs list actions apply. actions list empty entity backtracks previous state otherwise system chooses best action applies goes back first step. action cycle ends stopping criterion checked actions applied valid states. paper interested pieces procedural knowledge used construct actions list. knowledge base defined optimisation problems class many real world applications knowledge expressed production rules. interest kind knowledge representation easily interpretable domain experts thus facilitate knowledge validation update. therefore impose system knowledge expressed production rules. knowledge base contains action production rule base defines state according measure action applied weight. higher weight higher priority action weight integer weight_max measure defined action. several actions depend measure set. advantage rule base action unique rule base actions facilitate definition rules domain experts readable knowledge base improve modularity system makes easier update knowledge base removing adding actions. formalisation knowledge revision define function perf evaluates performance system resolution problem function linked effectiveness efficiency resolution depends domain users needs. define function perf evaluates performance system resolution problems class computation function demands compute function perf belonging knowledge revision problem consists finding optimisation problem class help initial knowledge base among possible knowledge bases optimises perf. practice time impossible compute perf. indeed rarely possible compute perf belonging thus estimate perf sample problems class representative problems problems composing sample better estimation related works mention part interested knowledge represented productions rules. many learning algorithms propose induce production rules examples labelled experts among allow taking account initial rules. however works already dealt problem. among them interested inductive knowledgebase refinement. objective works improve expert system knowledge base. assumption knowledge base almost valid small improvements needed thus approaches propose improve rule bases refining deleting existing rules without giving possibility rules others refining rule bases directly supporting user refining process many works based logical operators thus rarely deal noisy data another drawback many works increase number rules lead readability problems. common point works concern revision unique rule base allow revising several dependant rule bases simultaneously. thus possible directly apply approaches revision problem. minimal pruning chosen results obtained independent initial pieces knowledge whichever initial pieces knowledge state tree obtained minimal pruning composed states analysis stage proposed approach analysis stage system revises knowledge base thanks problems solved exploration stage. propose formulate revision problem search problem. search knowledge base optimises function perf defined part sample problems solved exploration stage. remind deal revision action application knowledge. action rule base defines weight action value measure difficulty comes distributed nature knowledge. actually application rule bases action dependent expression results analysed compared weight actions. fact given system actions solve class problems knowing that given entity state weight equal meaning know entity state weight therefore possible revise knowledge action independently take account actions time. order reduce search space propose decompose measure space areas partitioning taking account initial rules information obtained solved problems. example consider system propose action depends measure composed real measure example partitioning decompose domain areas revision problem consists assigning action best possible weight area measure set. call solution complete assignment action weights area measure set. finding best solution possible simplify resulting rule bases rule aggregation. partitioning measure sets based results obtained solved problems exploration stage. fact build example sets solved problems measure sets decomposition. next part introduces construction example sets. construction example sets construction example sets achieved analysis state trees obtained exploration stage. example build action. action example composed state labelled decision. state described measure linked action. decision either success failure. define notion best path best path sequence least states root revision approach based analysis execution logs. seek on-line knowledge revision. approach requires stop normal system functioning order activate process minimal pruning thus complete accurate information successes/failures piece knowledge stage system solves sample problems minimal pruning. pruning defined system problem constructs possible states according actions initial state problem ensuring action cycle converge. possible simulate possible knowledge base rearranging states without system knowledge set. tree initial state best state tree final state. construction example state tree consists first step extracting best paths tree. next step consists analysing state best path. states actions proposed leads another state best path action noted success. otherwise noted failure. figure gives simplified example example sets built resolution problem actions constraint partitioning take account initial action application rules. impose that rule defining partition measure space must either initial rules either specialisation initial rules. interest constraint keep possibility obtain rules similar initial rules revision process. several approaches based utilisation example sets used solve problem. partitioning approach propose consists discretising measure recomposing rules taking account initial rules example consider action linked measures initial rules others approaches used partitioning. example possible supervised learning algorithm decompose measure specialise posteriori comparing learnt rules. exploring stage defined revision problem optimisation problem search given problem class given system solution among possible solutions maximises quality function perf. according fact area assign weight value weight _max size solutions space equals number areas. help search dispose initial solution often good. numerous methods solve problem kind. size solution space impossible complete approach. thus incomplete approach. indeed order solve problem propose reactive local search algorithm others algorithms hill climbing tabu search simulated annealing also used solve problem. principle kind algorithm start initial solution improve exploring neighbourhood. time effective kind exploration problem. local require defining notion neighbourhood solution. problem means solutions areas weight value changed neighbour value. given weight neighbour weights rule base simplification exploring stage allows system assign good weight area. last step analysis stage consists simplifying obtained rules bases aggregating rules. mean satisfaction represents effectiveness system. higher mean satisfaction effective system mean number states represents efficiency system. higher mean number states less efficient system function perf ranged explain formula fact satisfaction ranged number state order favour effectiveness system rather efficiency introduce factor favour satisfaction. case study real case study generalisation geographic object kind building group. building group generalisation interesting case study well mastered time consuming. defined five actions building group generalisation well knowledge bases first defined generalisation expert second corresponds case actions proposed state expert knowledge base revision corresponds classical scenario knowledge revision good initial rule base want refine. revision action knowledge base corresponds scenario initial knowledge base worst possible want acquire good knowledge replace building groups automatically selected among available revision process tested initial revised knowledge different area used revision area used test composed building groups. cartographic generalisation process aims decreasing level details geographic data order produce given scale. figure gives example cartographic generalisation. figure cartographic generalisation simple size reduction. application numerous operations local scaling displacements elimination objects needed order ensure readability keeping essential information initial map. automation process complex problem core numerous research works recent years. works solve local step-by-step knowledge-based approach difficulty consists choosing best sequence generalisation operations apply various geographic objects. approach solve problem informed search. nowadays procedural knowledge used guide search entered hand generalisation experts. tuning often long fastidious demands face problem knowledge collecting formalizing several works already used machine learning learn relevant procedural knowledge among propose automatically revise existing knowledge. proposes previously generalised objects build case base. concerning rule base revision work existing proposes experience learn rules added system. work propose revise existing rules ones. automation cartographic generalisation particularly interesting industrial application context. fact first problem solved. moreover directly concerns many mapping agencies wish improve production lines. finally touches problem on-demand mapping takes important place multiplication possibilities create one’s web. generalisation system generalisation system experiment based agent model follows specification defined part generalises geographic object group geographic objects mean informed tree search strategy. state represents geometric state considered geographic objects evaluated satisfaction function translates respect cartographic constraints geographic objects. cartographic constraint building enough readable. satisfaction state ranged actions cycle used presented figure stopping criterion following action cycle ends system reaches perfect state validity criterion depends cartographic constraints satisfaction improvement. weight actions ranged interesting point concerns initial knowledge base taken account. revised knowledge obtained revision kexpert obtained better results obtained revision knoaction. explanation expert integrated knowledge base information present learning sample kept revision process. results show interest taking consideration initial knowledge base revision process. figure gives examples building groups generalised different knowledge bases. examples show generalisation obtained revised knowledge bases better ones obtained initial knowledge bases. conclusion paper proposed knowledge revision approach based exploration knowledge space. showed effectiveness efficiency approach real case study. revised action application knowledge revise others pieces knowledge like validity criterion actions cycle ending criterion. adaptation approach could proposed revise well kind knowledge. adaptations could proposed revise knowledge expressed others formalisms production rules. point deserves study problem sample choice. fact depending choice revision results obtained different quality. another point deserves study knowledge space partitioning. partitioning allow improve initial knowledge. barrault regnauld duchêne haire baejis demazeau hardy mackaness ruas weibel integrating multi-agent object-oriented algorithmic techniques improved automated generalisation’ overcoming knowledge acquisition bottleneck generalization role interactive systems computational intelligence’ knowledge generalization cosit", "year": 2012}