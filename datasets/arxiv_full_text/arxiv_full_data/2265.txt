{"title": "DLPaper2Code: Auto-generation of Code from Deep Learning Research Papers", "tag": ["cs.LG", "cs.AI", "stat.ML"], "abstract": "With an abundance of research papers in deep learning, reproducibility or adoption of the existing works becomes a challenge. This is due to the lack of open source implementations provided by the authors. Further, re-implementing research papers in a different library is a daunting task. To address these challenges, we propose a novel extensible approach, DLPaper2Code, to extract and understand deep learning design flow diagrams and tables available in a research paper and convert them to an abstract computational graph. The extracted computational graph is then converted into execution ready source code in both Keras and Caffe, in real-time. An arXiv-like website is created where the automatically generated designs is made publicly available for 5,000 research papers. The generated designs could be rated and edited using an intuitive drag-and-drop UI framework in a crowdsourced manner. To evaluate our approach, we create a simulated dataset with over 216,000 valid design visualizations using a manually defined grammar. Experiments on the simulated dataset show that the proposed framework provide more than $93\\%$ accuracy in flow diagram content extraction.", "text": "abundance research papers deep learning reproducibility adoption existing works becomes challenge. lack open source implementations provided authors. further re-implementing research papers different library daunting task. address challenges propose novel extensible approach dlpapercode extract understand deep learning design diagrams tables available research paper convert abstract computational graph. extracted computational graph converted execution ready source code keras caffe realtime. arxiv-like website created automatically generated designs made publicly available research papers. generated designs could rated edited using intuitive drag-and-drop framework crowdsourced manner. evaluate approach create simulated dataset valid design visualizations using manually deﬁned grammar. experiments simulated dataset show proposed framework provide accuracy diagram content extraction. growth deep learning ﬁeld artiﬁcial intelligence astounding last decade research papers published since keeping growing literature real struggle researchers practitioners. recent conferences nips maximum number papers submitted topic deep learning neural networks. however majority research papers accompanied corresponding implementations. nips papers made source implementation available. implementing research papers takes least days effort soft∗akshay sethi interened research india work. copyright association advancement artiﬁcial intelligence rights reserved. another major challenge availability various libraries multiple programming langauges implement algorithms tensorﬂow theano caffe torch mxnet cntk wrappers keras lasagne pytorch public implementations research papers available various libraries offering little interoperability communication among them. consider use-case researcher working image captioning three highly referred research papers problem image captioning show tell original implementation available theano; https//github.com/ kelvinxu/arctic-captions implementations available different libraries researcher cannot directly combine models. also practitioner remaining code-base java directly leveraging either public implementations would daunting. thus highlight highly overlooked challenges lack public implementation available existing research works thus time incurred reproducing results figure architecture proposed creative system extracts understands diagram deep learning research paper generates execution ready deep learning code differcaffent platforms keras caffe. research propose novel algorithm automatically parses research paper extract described model design. design represented abstract computational graph independent implemenation library language. finally source code generated multiple libraries abstract computational graph design. results shown automatically generating source code arxiv papers caffe keras however evaluating generated source code debatable lack ground truth. overcome challenge simulated large image dataset valid model designs caffe keras. generate visualizations manually deﬁned grammar models. visualizations highly varying comparable ﬁgures present research papers. thus major research contributions rest paper organized follows section explains entire proposed approach auto generation source code research paper section talks simulated dataset experimental performance individual components proposed approach section discusses experimental results arxiv papers section concludes paper discussion future efforts. consider state-of-art paper paper published aaai explains design model ﬁgures shown figure similarly aaai paper model design explained using table. thus given research paper deep learning proposed dlpapercode architecture consists major steps shown figure extract ﬁgures tables research paper. handling ﬁgure table content done independently although follow similar pipeline could descriptive image results tables paper classify ﬁgure table whether contains model design. also perform grained classiﬁcation type ﬁgure table used describe model extract text information ﬁgures tables independently construct abstract computational graph independent implementation library generate source code caffe keras computational graph. characterizing research papers observed research paper design mostly explained using ﬁgures tables. thus assertion parsing ﬁgure image table content respective novel design could obtained. primary challenges ﬁgures research papers design ﬁgures typically follow deﬁnition show extreme variations. similarly tables different structures entail different kind information. manually observed images research papers characterized model deisgn images broad categories shown figure types neurons plot classical representation neural network layer circular nodes inside them hidden layer represented rectangular stackedd layer represented stack rectangular boxes describing depth layer hidden layer represented cuboid structure pipeline plot along model design entire pipeline mostly intermediate results image/ text shown well. similarly based representation tables classiﬁed row-major table model design ﬂows along model design ﬂows along column essential account variations proposed pipeline indicate design represented paper. following assumption proposed approach identify design neither table ﬁgure. extracting figures tables extracting visual ﬁgures document especially scholarly report well studied problem common challenges includes extracting vector images embedded document extracting large ﬁgure whole instead multiple ﬁgures components. used publicly existing tool called pdffigures extracting list ﬁgures scholarly paper. however none existing open source tools maintain table structure essential thus built table extraction tool using pdfminer poppler-utils. poppler-utils provide high level information document text dump using pdfminer certain level document details vertical line spacing obtained. table structure along table caption retrived building heuristics horizontal vertical line spacing. figure table classiﬁcation classify retrive ﬁgures tables research paper contains design ﬂow. futher ﬁne-grained classiﬁer required classify ﬁgure identiﬁed broad categories classify table row-major column-major ﬂow. case ﬁgures classiﬁer trained perform prediction using architecture shape ﬂow. example ﬁgures result graphs showing sample images dataset different shape compared architecture diagram. ﬁgures resized features extracted fully connected layer popular deep learning model pre-trained imagenet dataset. classiﬁcation levels coarse classiﬁer binary neural network classiﬁer trained features classify ﬁgure contains model fine-grained classiﬁer class neural network classiﬁer trained features identify type design ﬁgures classiﬁed positive coarse classiﬁer. sequence classiﬁers provided better performance compared single classiﬁer classes case tables bag-of-words model built using keywords caption text well table text. cosine distance based classiﬁer used identify design given table compared tables containing results. based number rows columns table extracted previous section table classiﬁed row-major column-major ﬂow. content extraction figure content extraction ﬁgures major steps flow detection identify nodes edges extract content. identifying challenges huge variation type design diagrams. section explain details approach type shown figure similar approach could extended types well. flow detection involves identifying nodes ﬁrst followed edges connecting nodes. image usually high resolution quality directly binarized using adaptive gaussian thresholding canny edge detection approach used identify lines. iterative region grown algorithm adopted identify closed countours ﬁgure represent nodes shown figure detected nodes masked ﬁgure contour detection algorithm applied detection edges shown figure direction edge obtained analyzing pixel distribution within edge contour. node edge contours sorted based location direction obtain entire model design. shown figure proposed approach could also handle branchings forking design diagram. content extraction table major table every corresponds layer design shown figure similarly column major table every column corresponds layer along parameters layer. layer name extracted matching manually created dictionary. further parameters extracted mapping corresponding column header pre-deﬁned list parameter names corresponding layer. thus sequentially entire design extracted table. generating source code overall detecting design abstract computational graph represented json format shown figure rule based converters written convert abstract computational graph extracted previous step either keras code caffe protobuf format inference engine acts convertor abstract computational graph grammar platform. inference engine consists comprehensive list templates dictionaries built manually keras caffe. template based structures transfer component abstract representation platform speciﬁc structure using dictionary mappings. further anset templates consisting assertions designed translating layer’s parameters. further inference engine highly ﬂexible allowing easy extension addition layer deﬁnitions. example inference engine’s dictionary mapping poolingd layer shown figure process simulate generate ground truth deep learning designs corresponding visualizations ﬁgures. thus proposed pipeline model design could quantitatively evaluated. observed keras caffe in-built visualization routine design model. keras caffe internal model validator visualization exported simulated design deemed valid validator. grammar design generation able generate meaningful valid design models manually deﬁned grammar model well hyper-parameters. considered unique layers dataset simulation {convd maxpoold avgpoold} building convolution neural network like architectures {embed simplernn lstm} building recurrent neural network like architectures {dense flatten dropout concat} core layers. concat enables designed models non-sequential well combination recurrent convolution architectures. allows create random complex highly varying models. also lstm layers additional binary parameter return true returns output every hidden cell otherwise returns output last hidden cell layer. table explains proposed grammar generating design models. grammar deﬁnes possible next layers given current layer. determined shape tensor ﬂowing layer’s operation. example dense layer strictly expect input vector shape thus dense cannot appear after convd layer without presence flatten layer. proposed grammar includes possible values hyper-parameter layer explained table hyper-parameter values beyond deﬁned bounds possible table values indicate assumed values model simulation process. simulated dataset model simulation starts input layer four possible options mnist cifar imagenet imdbtext. possible next layers given input layer completely random layer decided. given next layer random value picked every possible hyper-parameter. example mnist input layer convd could picked random next layer. then convd hypar-parameters determined randomly ﬁlters ﬁlter size stride model design always ends dense layer number nodes equal number classes corresponding input layer. number layers input layer ﬁnal dense layer denotes depth model. simulation generated models depth varied creating total dataset models. model contains keras json representation keras image visualization caffe protobuf ﬁles caffe image visualization resulting total model design visualizations. models valid construct since follow well-deﬁned grammar. however models need best execution perspective respect training performance. figure type classiﬁcation performance experiment binary nnet classiﬁer hidden layers size trained features model differentiate simulated visualizations kind diagrams often available research papers whole dataset split training validation testing making total images training images testing. performance nnet classiﬁer compared different classiﬁers shown table observed classiﬁer provide classiﬁcation accuracy showing ﬁgures obtained research paper would possible distinguish deep learning design diagrams. classiﬁers default parameters provided scikit-learn package. computational graph extraction performance experiment performance content extraction keras caffe visualizations evaluated ground truth. performing extracted unique layer names obtained detection accuracies reported blob detection accuracy evaluates performance blob detection layers identiﬁed using computed ratio correct blobs detected model figure plot showing performance proposed ﬁgure extraction pipeline keras caffe. observed proposed pipeline provides accuracy layer extraction accuracy extracting edges. edges curved length even connecting ﬁrst last layer variations caused reduction performance. details extracting information keras caffe visuazliation also additional results kindly refer supplementary material. ﬁrst papers downloaded arxiv.org using deep learning input query. ﬁgures extracted downloaded papers ﬁgures contain design remaining contained. represent usual ﬁgures found deep learning research paper contain design ﬂow. figure type classiﬁcation accuracy evaluate coarse level binary classiﬁcation hidden layer nnet trained features obtained images extracted research papers. whole dataset split training validation testing results computed seven different classiﬁers shown table further evaluate level ﬁve-class ﬁgure type classiﬁcation design diagrams manually labelled. distribution ﬁgures follows neurons plot ﬁgures stackedd pipeline plot train validation test split performed train nnet classiﬁer comparison classiﬁer perform class classiﬁcation. results table table results show even highly varying design images identifying type accurate. details experimental analysis please refer supplementary material. crowdsourced improvement extracted designs using proposed dlpapercode framework extracted design models downlaoded papers. however quantitatively evaluating extracted design would challenging lack ground truth. hence created arxiv-like website shown figure papers corresponding design generated source code available. community further intuitive drag-and-drop based framekwork generated community edit generated design shown figure ideally respective papers’ author community could edit generated designs wherever error found. edited design could made publicly available researcher reproduce design. system could generate source code edited design keras caffe real-time. thus two-fold advantange system public system could one-stop repository paper it’s corresponding design source code feedback community provides would enable continuously learn improve system. thus researchers developers need struggle further reproducing research papers deep learning. using research design explained research paper could automatedly extracted. using intuitive drag-and-drop based editor designed part research extracted design could manually edited perfected. extracted design source code could generated keras caffe real-time. proposed dlpapercode framework extracts ﬁgure table information research paper converts source code. currently arxiv-like website created contains design source code research papers. evaluate approach simulated dataset unique deep learning designs validated proposed grammar corresponding keras caffe visualizations. total dataset deep learning model visualization diagrams diagrams appeared deep learning research papers contains model visualization proposed binary classiﬁcation using nnet classiﬁer obtained accuracy. performance extracting generic computational graph ﬁgures using proposed pipeline research could high impact reproducibility research planned plenty possible extensions proposed pipeline proposed pipeline detects layers edges diagram. could extended detect extract hyper-parameter values layer make computational graph content rich. currently independent pipelines generating abstract computational graphs tables ﬁgures. combining information obtained multimodal sources could enhance accuracy extracted design ﬂow. broader would propose deﬁnition representating model design research papers achieving uniformity better readibility. further authors future papers could also release design created website easy accessibility community. springenberg dosovitskiy brox riedmiller striving simplicity convolutional net. arxiv preprint arxiv.. szegedy ioffe vanhoucke alemi inception-v inception-resnet impact residual connections learning. aaai vinyals toshev bengio erhan show tell neural image caption generator. computer vision pattern recognition", "year": 2017}