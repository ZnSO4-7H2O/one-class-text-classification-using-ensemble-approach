{"title": "Vision-Based Navigation I: A navigation filter for fusing  DTM/correspondence updates", "tag": ["cs.CV", "cs.AI", "68T45", "E.5; E.4; E.2; H.1.1; F.1.1; F.1.3"], "abstract": "An algorithm for pose and motion estimation using corresponding features in images and a digital terrain map is proposed. Using a Digital Terrain (or Digital Elevation) Map (DTM/DEM) as a global reference enables recovering the absolute position and orientation of the camera. In order to do this, the DTM is used to formulate a constraint between corresponding features in two consecutive frames. The utilization of data is shown to improve the robustness and accuracy of the inertial navigation algorithm. Extended Kalman filter was used to combine results of inertial navigation algorithm and proposed vision-based navigation algorithm. The feasibility of this algorithms is established through numerical simulations.", "text": "algorithm pose motion estimation using corresponding features images digital terrain proposed. using digital terrain global reference enables recovering absolute position orientation camera. order this used formulate constraint corresponding features consecutive frames. utilization data shown improve robustness accuracy inertial navigation algorithm. extended kalman ﬁlter used combine results inertial navigation algorithm proposed vision-based navigation algorithm. feasibility algorithms established numerical simulations. vision-based algorithms major research issue past decades. common approaches navigation problem landmarks ego-motion integration. landmarks approach several features located imageplane matched known location. using data camera’s pose derived. examples algorithms landmarks found pose derivation simple achieve quite accurate estimates. main diﬃculty detection features correct matching landmarks set. ego-motion integration approach motion camera respect estimated. ego-motion derived optical-ﬂow ﬁeld instruments accelerometers gyroscopes. ego-motion obtained integrate motion derive camera’s path. factors make approach attractive speciﬁc features need detected unlike previous approach. several ego-motion estimation algorithms found weakness ego-motion integration comes fact small errors accumulated integration process. hence estimated camera’s path drifted pose estimation accuracy decrease along time. approach used would desirable reduce drift activating while additional algorithm estimates pose directly. navigation-system suggested. work like work drift corrected using digital terrain discrete representation observed ground’s topography. contains altitude level terrain geographical location. patch ground reconstructed using ‘structure-from-motion’ algorithm matched order derive camera’s pose. using algorithm make information obtained rather bases estimate ﬂow-ﬁeld alone positions technique critique applies algorithms algorithm presented work require intermediate explicit reconstruction world. combining information directly images information claimed algorithm well-conditioned generates accurate estimates reasonable scenarios error sources. present work claim explored performing error analysis algorithm outlined above. assuming appropriate characterization error sources closed form expression uncertainty pose motion camera ﬁrst developed inﬂuence diﬀerent factors studied using extensive numerical simulations. problem brieﬂy described follows given time instance coordinates system ﬁxed camera z-axis coincides optical-axis origin coincides camera’s projection center. time instance camera located geographical location given orientation respect global coordinates system vector orthonormal rotation matrix). deﬁne transformation camera’s frame world’s frame vectors respectively following section describes navigation algorithm estimate mentioned parameters. pose ego-motion camera derived using optical-ﬂow ﬁeld consecutive frames. unlike landmarks approach speciﬁc features detected matched. correspondence consecutive images found order derive optical-ﬂow ﬁeld. mentioned previous section rough estimate required parameters supplied input. nevertheless since algorithm input initial guess re-calculate pose ego-motion directly integration previous errors take place accuracy preserved. approach founded following observation. since supplies information structure observed terrain depth observed features dictated camera’s pose. hence given pose ego-motion camera optical-ﬂow ﬁeld uniquely determined. objective algorithm ﬁnding pose ego-motion lead optical-ﬂow ﬁeld close possible given ﬁeld. single vector optical-ﬂow ﬁeld used deﬁne constraint camera’s pose ego-motion. location ground feature point world. diﬀerent time instances feature point projected image-plane camera points assuming pinhole model camera cqand homogeneous representations locations. standard think vectors vectors optical-center camera projection point image plane. using initial-guess pose camera line passing intersected dtm. ray-tracing style algorithm used purpose. location intersection denoted subscript letter highlights fact ground-point estimated location feature point general diﬀerent true ground-feature location diﬀerence true estimated locations main sources error initial guess pose errors determination caused discretization intrinsic errors. reasonable initial-guess dtm-related errors points close enough allow linearization around denoting normal plane tangent point write order simplify notations replaced likewise replaced respectively. superscript describing coordinate frame vector given also omitted except cases special attention needs drawn frames. normally camera’s frame rest vectors given world’s frame. using simpliﬁed notations rewritten expression clear geometric interpretation vector projected onto tangent plane. projection along direction direction camera’s optical-center passing image feature. next step transferring global coordinates framew ﬁrst camera’s frame second camera’s frame since pand rdescribe transformation inverse transformation constraint involves position orientation ego-motion deﬁning frames camera. although involves vectors clear rank exceed usage projects two-dimensional subspace. constraint established vector optical-ﬂow ﬁeld non-singular system obtained. since twelve parameters need estimated least optical-ﬂow vectors required system solution. correct conclusion nonlinear problem. gauss-newton iterations method make linearization problem near approximate solution. found matrix always singular points numerical simulations demonstrate. necessary least seven points obtain nonsingular linear approximation. usually vectors used order deﬁne over-determined system lead robust solution. reader attention drawn fact non-linear constraint obtained. thus iterative scheme used order solve system. robust algorithm uses gauss-newton iterations m-estimator described begin levenberg-marquardt method gauss-newton method several iterations stopped converge. algorithms realized lsqnonlin matlab function. applicability accuracy robustness algorithm veriﬁed though simulations lab-experiments. vision-based navigation algorithms major research issue past decades. algorithm used paper based foundations multiple-view geometry land map. help method position orientation observer camera. hand obtain data inertial navigation methods. adjust results kalman ﬁlter used. employ paper extended kalman ﬁlter nonlinear equations input kalman ﬁlter consists part. ﬁrst variables equations motion. case inertial navigation equations. vector consists ﬁfteen components coordinates deﬁned diﬀerence real position camera position gotten inertial navigation calculus.variables δvxδvyδvz deﬁned diﬀerence real velocity camera velocity gotten inertial navigation calculus. variable deﬁned euler angles matrix matrix deﬁned real euler angles camera respect local level frame matrix deﬁned euler angles camera respect local level frame gotten inertial navigation computation. necessary attention found euler angles equivalent diﬀerence real euler angles euler angles gotten inertial navigation calculus. small values perturbations angles added linearly angles used kalman ﬁlter small errors. choose angles made formulas describing evolution much simpler formulas describing evolution euler angles diﬀerences. variables deﬁned vector accel bias inertial navigation measurements.variables deﬁned vector gyro bias inertial navigation measurements. navigation algorithms.vector consists components coordinates δxmδymδzm diﬀerence camera position measured vision-based navigation algorithm position gotten inertial navigation calculus.variable δθmδψm deﬁned euler angles matrix matrix deﬁned euler angles camera respect local level frame measured visionbased navigation algorithm matrix deﬁned euler angles camera respect local level frame gotten inertial navigation computation. variable number step time discretization used kalman ﬁlter. assume errors values gotten inertial navigation computation real values linearly depend noise. corespondent process noise covariance matrix denoted diagonal elements correspondent velocity deﬁned accel noise proportional time interval tk−. diagonal elements correspondent euler angles deﬁned gyro noise proportional assume errors values gotten vision-based navigation algorithm real values linearly depend noise. corespondent measurement noise covariance matrix denoted error analysis giving matrix described write kalman ﬁlter equations must deﬁne matrices yethk matrix measurement jacobian describing connection predicted measurement actual measurement deﬁned above. diagonal elements describing coordinate elements describing angles equal one. rest elements equal zero. jacobian matrix describing evolution vector exact expression matrix diﬃcult approximate formula neglecting coriolis eﬀects earth rotation euler angles lframe deltav vector gotten inertial navigation measurements fvec acceleration vector l-frame dcmb-to-l direction cosine matrix numerical simulations realized examine eﬀectiveness kalman ﬁlter combine navigation algorithms. fig. corrected path coordinate error much smaller inertial navigation coordinate error without kalman ﬁlter. improved results help kalman ﬁlter gotten also velocity spite fact velocity measured help vision-based navigation algorithm fig. algorithm pose motion estimation using corresponding features images presented using kalman ﬁlter. served global reference data used recovering absolute position orientation camera. numerical simulations position velocity estimates found suﬃciently accurate order bound accumulated errors prevent trajectory drifts. d.g. r.h. park r.c. s.u. i.c. integrated position estimation using aerial image sequences ieee transactions pattern analysis machine intelligence vol. haralick propagating covariance computer vision advances image understanding azriel rosenfeld bowyer ahuja ieee computer society press washington oleg kupervasser ronen lerner ehud rivlin hector rotstein error analysis navigation algorithm based optical-flow digital terrain proceedings ieee/ion position location navigation symposium предложен алгоритм нахождения позиции ориентации оценки движения использующий соответствующие точки изображениях цифровую карту ландшафта. использование цифровой карты ландшафта глобальной справочной информации позволяет восстановление абсолютной позиции ориентации камеры. чтобы сделать используется чтобы сформулировать дополнительные ограничения между соответствующими точками двух последовательных кадрах. использование этих данных позволяет улучшить надежность точность инерциального навигационного алгоритма. расширенный фильтр калмана использовался чтобы объединить результаты инерциального навигационного алгоритма навигационного алгоритма основанного компьютерном зрении. выполнимость этого алгоритма продемонстрирована путем численного моделирования. основанные системе технического зрения алгоритмы были главной исследовательской проблемой течение прошлых десятилетий. единых подхода навигационной проблемы существуют наземные ориентиры интеграция собственного движения. подходе основанном наземных ориентирах несколько характерных объектов находятся плоскости изображения сверяются известному трехмерному местоположению. используя трехмерные данные могут быть получены положение ориентация камеры. немного примеров таких алгоритмов только наземные ориентиры были найдены нахождение положения ориентации камеры просто может быть достигнуто весьма точно. основная трудность обнаружение наземных ориентиров нахождение правильного соответствия объектам известного набора. методе интеграции собственного движения движение камеры относительно себя самой оценивается. движение может быть получено поля оптического потока приборов таких акселерометры гироскопы. только собственное движение было получено можно интегрировать движение найти путь камеры. один коэффициентов которые делают этот подход привлекательным никаких наземных ориентиров нужно находить отличие предыдущего подхода. несколько алгоритмов оценки собственного движения могут быть найдены недостаток метода интеграции собственного движения происходит того обстоятельства маленькие ошибки суммируются время процесса интеграции. следовательно ошибка предполагаемого положения ориентации камеры накапливается происходит уменьшение точности оценки позы течением времени. если такой подход используется было желательно уменьшить накопление ошибки активизируя время времени дополнительный алгоритм который оценивает позу непосредственно. предлагается такая навигационная система. этой работе также настоящей работе накопление ошибки исправляется используя цифровую карту ландшафта дискретное представление топографии наблюдаемой местности. содержит высоту уровнем моря ландшафта каждого географического местоположения. кусок местности восстановлен используя ’структуру движения’ алгоритм согласован чтобы получить позу камеры. использование алгоритма который использует информацию полученную скорее основывает свою оценку одном только поле оптического потока может быть подвержено тому критическому анализу алгоритм алгоритм представленный этой работе требует промежуточной явной реконструкции трехмерного мира. комбинируя информацию непосредственно информацией изображений алгоритм хорошо обусловлен генерирует точные оценки разумных сценариев разумных ошибок. данной работе требование исследуется выполняя анализ ошибок алгоритма выделенном выше. определяя соответствующие характеристики этих источников ошибок получаем выражение неопределенности позы движения камеры затем изучаем влияние различных коэффициентов используя обширное числовое моделирование. проблема может быть кратко описана следующим образом любой момент времени система координат установлена камеру таким способом z-ось совпадает оптической осью начало координат совпадает центром проектирования камеры. этот момент времени камера расположена некотором географическом местоположении имеет данную ориентацию относительно глобальной координатной системы трехмерный вектор ортонормальная матрица вращения). определяют преобразование координатной системы камеры глобальную координатную систему если являются векторами соответственно рассмотрим теперь последовательных момента времени преобразование дано вектором сдвига матрицей вращения таким образом грубой оценки позы камеры собственное движение камеры между двумя моментами времени используются. величина.) также используется поле оптического потока {ui} i’th характерная точка местности представляют местоположение первом втором кадре соответственно. используя вышеупомянутые обозначения цель предложенного алгоритма состоит чтобы оценить истинной позу камеры собственное движение используя поле оптического потока {ui} приблизительные начальные условия ∆re. следующий раздел описывает навигационный алгоритм который оценивает вышеупомянутые параметры. поза движение камеры получены используя поле оптического потока двух последовательных кадров. отличие метода наземных ориентиров никакие характерные ориентиры должны быть обнаружены распознаны. только соответствие между двумя последовательными изображениями должно быть найдено чтобы получить поле оптического потока. было упомянуто предыдущем разделе грубая оценка искомых параметров используется первое приближение. однако алгоритм только используют начальное приближение повторно вычисляет позу движение непосредственно никакое сложение предыдущих ошибок будет иметь место точность будет сохраняться. новый подход основан следующем наблюдении. предоставляет информацию структуре наблюдаемого ландшафта глубину наблюдаемых характерных точек местности определяет поза камеры. следовательно учитывая позу движение камеры поле оптического потока может быть однозначно определено. целью алгоритма является нахождение позы движения которые приводят полю оптического потока наиболее близкому насколько возможно найденному выше полю оптического потока. единичный вектор поля оптического потока будет использоваться чтобы определить ограничения позу камеры движение. пусть является местоположением характерной точки местности трехмерном пространстве. различные момента времени характерная точки местности проектируется плоскость изображения камеры точки используя модель дырочной камеры получаем позвольте быть гомогенными представлениями этих местоположений. также можно описать вектора вектора оптического центров камер точкам проектирования плоскости изображений. используя начальную оценку позы камеры линия проходящая через может быть пересечена цкл. любой алгоритм трассировки лучей может использоваться этой цели. местоположение этого пересечения обозначено символ \"e\"нижнего индекса проясняет факт точка местности предполагаемое местоположение характерной точки который вообще будет отличаться истинного местоположения характерной точки различие между истинным оцененным местоположением происходит двух основных источников ошибка начальном предположении позы ошибка определении вызванной дискретизацией основными погрешностями. разумных ошибок начального положения связанных ошибок точки должны быть достаточно близким чтобы позволить линеаризацию вокруг обозначая нормаль плоскости касательной точке можно написать чтобы упростить обозначения будет заменен аналогично будут заменены соответственно. верхний индекс описывающий систему координат которой вектор будет также опущен исключением случаев требуется особое внимание описываемым системам координат. обычно находится системе координат камеры время остальная часть векторов дана глобальной системе координат. используя упрощенные обозначения может быть переписано этот оператор проектирует вектор нормаль подпространства вдоль направления иллюстрация просто проверить добавляя вычитая после переупорядочения вышеописанного выражения есть ясная геометрическая интерпретация вектор проектируется касательную плоскость. проектирование идет вдоль направления которое является направлением луча оптического центра камеры проходящего через соответствующую точку изображения. следующий будет перенос глобальной системы координат систему координат первой камеры затем системе координат второй камеры описывают преобразование будем использовать обратное преобразование проекция истинной характерной точки местности таким образом векторы должны совпасть. наблюдение может быть выражено математически проектируя продолжение луча является проекцией ортогональную компонент должны совпадатьэто проектирование должно давать нулевой вектор. подстановка приводит нашему окончательному ограничению ограничение включает позицию ориентацию собствнное движение определяемое основе двух кадров камеры. хотя включают трехмерные вектора ясно ранг может превысить двойку из-за использования который проектирует двумерное подпространство. такое ограничение может быть установлено каждого вектора поле оптического потока пока будет получена несингулярная система. двенадцать параметров должны быть оценены крайней мере шесть векторов оптического потока требуются решения системы. правильное заключение нелинейной проблемы. если используем метод итераций гаусса-ньютона делаем линеаризацию нашей проблемы около приближенного решения. найденная матрица будет всегда сингулярной шести точек численное моделирование демонстрирует. таким образом необходимо использовать крайней мере семь точек чтобы получить несингулярное линейное приближение. обычно больше векторов будет использоваться чтобы определить переопределенную систему более устойчиво решение. внимание должно быть привлечено факту было получено нелинейное ограничение. таким образом итерационная схема будет использоваться чтобы решить систему. устойчивый алгоритм который использует итерации гаусса-ньютона м-оценщик описан начинаем использовать метод levenberg-marquardt если метод гаусса-ньютона после нескольких итераций прекратил сходиться. алгоритма реализованы функции lsqnonlin пакета matlab. применимость точность надежность алгоритма были проверены через численное моделирование лабораторные эксперименты. использование этой нормализованной формы уравнений предотвращает получение неверного тривиального решения когда позиции находятся единой точке местности. основанные компьютерном зрении навигационные алгоритмы были главной исследовательской проблемой течение прошлых десятилетий. алгоритм используемый этой статье основан геометрии многих изображений карте местности. помощью этого метода получаем позицию ориентацию наблюдающей камеры. другой стороны получаем самые данные инерциальных навигационных методов. чтобы скорректировать результата используется фильтр калмана. используем этой статье расширенный фильтр калмана нелинейных уравнений вход фильтра калмана состоит двух частей. первый переменные уравнений движения. нашем случае инерциальные навигационные уравнения. вектор состоит пятнадцати компонентов координаты δxδy определены разница между реальной позицией камеры позицией полученный инерциального навигационного вычисления. переменные определены разница между реальной скоростью камеры скоростью полученной инерциального навигационного вычисления. переменная определена углы эйлера матрицы здесь матрица определена реальными углами эйлера камеры относительно локальной системы координат другой стороны матрица определена углами эйлера камеры относительно локальной системы координат полученными инерциального навигационного вычисления. необходимо обратить внимание найденные углы эйлера эквивалентны разнице между реальными углами эйлера углами эйлера полученными инерциального навигационного вычисления. однако маленьких значений попрвки этим углам могут быть добавлены линейно таким образом углы могут использоваться фильтре калмана случае маленьких ошибок. такой выбор углов сделан поскольку формулы описывающие эволюцию намного более просты формулы описывающие эволюцию разницы между углами эйлера. переменные определены вектором смещения ускорения инерциальных навигационных измерениях. переменные bxby определены вектором гироскопического смещения инерциальных навигационных измерениях. второй вход фильтра калмана z-результат измерений основанных навигационных алгоритмах компьютерного зрения. вектор состоит шести компонентов координаты являются разницей между позицией камеры измеренной основе навигационного алгоритма компьютерного зрения позицией полученный инерциального навигационного вычисления. переменная определена углы эйлера матрицы здесь матрица определена углами эйлера камеры относительно относительно локальной системы координат измеренных основе навигационного алгоритма компьютерного зрения. другой стороны матрица определена углами эйлера камеры относительно локальной системы координат полученными инерциального навигационное вычисления. пусть переменная определяет число шагов дискретизации времени используемых фильтре калмана. ного навигационного вычисления реальными значениями линейно зависят шума. соответствующая ковариационная матрица шума обозначена диагональные элементы соответствуют скорости определяются шумом ускорения пропорциональны интервал времени между tk−. диагональные элементы соответствуют углам эйлера определяются гироскопическим шумом пропорциональны предполагаем также ошибки между значениями полученными основе навигационного алгоритма компьютерного зрения реальными значениями линейно зависят шума. соответствующая ковариационная матрица шума обозначена анализ ошибок дающий матрицу описан чтобы написать уравнения фильтра калмана должны определить матрицы матрица является якобианом измерения описывающая связь между предсказанным измерением фактическим измерением определенным выше. диагональные элементы описывающие координату элементы описывающие углы равны единице. остальная часть элементов равна нулю. матрица якоби описывающая эволюцию вектора точное выражение этой матрицы является очень сложным поэтому используем приближенную формулу пренебрегая эффектами кориолиса вращением земли далее. позвольте быть углами эйлера l-frame является вектором deltav полученным инерциальных навигационных измерений fvec вектор ускорения l-frame dcmb-to-l матрица направляющих косинусов найденный вектор используется чтобы обновить координаты скорости углы эйлера смещение ускореня гироскопическое смещение инерциальных навигационных вычислений следующем шаге. численные расчеты были реализованны чтобы исследовать эффективность фильтра калмана чтобы объединить навигационных алгоритма. рис. можем видеть откорректированного пути ошибка координаты полученныя основе двух навигационных методов фильтрацией калмана намного меньше инерциальная навигационная ошибка координаты полученная фильтра кальмана. улучшенные результаты помощью фильтра калмана были получены также скорости несмотря скорость измеряется напрямую навигационным алгоритмом использующим компьютерное зрение рис. алгоритм оценки позы движения использующий соответствующие точки изображениях представлен использованием фильтра калмана. служит глобальная справочная информация данные используются того чтобы восстановить абсолютную позицию ориентацию камеры. численных расчетах оценка позиции скорости находятся достаточно точно чтобы предотвратить накопленные ошибки предотвратить дрейф траектории. рис. ошибки позиции координаты координаты координаты ошибки инерциального дрейфа отмечены красной линией ошибки исправленные видео-навигацией отмечены синей линией. d.g. r.h. park r.c. s.u. i.c. integrated position estimation using aerial image sequences ieee transactions pattern analysis machine intelligence vol. haralick propagating covariance computer vision advances image understanding azriel rosenfeld bowyer ahuja ieee computer society press washington oleg kupervasser ronen lerner ehud rivlin hector rotstein \"error analysis navigation algorithm based optical-flow digital terrain map\"in proceedings ieee/ion position location navigation symposium", "year": 2011}