{"title": "Recurrent Autoregressive Networks for Online Multi-Object Tracking", "tag": ["cs.CV", "cs.AI", "cs.LG"], "abstract": "The main challenge of online multi-object tracking is to reliably associate object trajectories with detections in each video frame based on their tracking history. In this work, we propose the Recurrent Autoregressive Network (RAN), a temporal generative modeling framework to characterize the appearance and motion dynamics of multiple objects over time. The RAN couples an external memory and an internal memory. The external memory explicitly stores previous inputs of each trajectory in a time window, while the internal memory learns to summarize long-term tracking history and associate detections by processing the external memory. We conduct experiments on the MOT 2015 and 2016 datasets to demonstrate the robustness of our tracking method in highly crowded and occluded scenes. Our method achieves top-ranked results on the two benchmarks.", "text": "figure introduce recurrent autoregressive networks online multiple object tracking. rans generative models object trajectories combine external memories object appearance motion internal memories recurrent cells network facilitate data association tracking. information long-term history adjust estimation accordingly. recently also works trying recurrent neural networks extract longterm temporal features multiple object tracking however feature space object appearance complicated existing multi-object tracking datasets relatively small hard train rnns enough representation capabilities memorize discriminate different objects existing datasets withoverﬁtting. work propose recurrent autoregressive network framework learn generative model multiple object trajectories. built upon standard components learns extract long-term sequence history internal memory represented recurrent hidden layer. enhance memorizing power model guaranteeing generalization capability equip rans external memory templates directly storing previous input features. time step estimates probability distribution detections using internal external memories autoregressive manner thus data memorized external memory internal memory focuses learning retrieve process data main challenge online multi-object tracking reliably associate object trajectories detections video frame based tracking history. work propose recurrent autoregressive network temporal generative modeling framework characterize appearance motion dynamics multiple objects time. couples external memory internal memory. external memory explicitly stores previous inputs trajectory time window internal memory learns summarize long-term tracking history associate detections processing external memory. conduct experiments datasets demonstrate robustness tracking method highly crowded occluded scenes. method achieves top-ranked results benchmarks. tracking multiple objects videos important problem applied various applications visual surveillance activity analysis autonomous driving robot navigation. common strategy tackle multi-object tracking employ tracking-by-detection framework objects ﬁrst identiﬁed object detector video frame linked trajectories across video frames. case core problem estimate characteristics trajectories time thus determine associations detections. characteristics object trajectory depicted features object’s appearance location usually represented either hand-crafted features neural network extracted features. order summarize denoise features across time many previous methods store features recently tracked frames templates templates determine associations detections. since templates constrained ﬁxed time window models cannot learn external memory. model seen variant memory networks comparing traditional memory networks constantly updates memory temporal sliding window according tracking decisions instead using control data reading procedure. advantages rans mainly two-folds. first enables maintain external memory trajectories thus robust occlusions sudden changes targets. second output space parameters applied templates much easier train compared directly estimating high dimensional feature smaller tracking datasets. track multiple objects ensemble multiple rans attaching target. furthermore design data association algorithm based multi-object tracking framework. rans update hidden states templates according decisions data association algorithm. memorize update feature representations objects time. fig. illustrates example rans tracking multiple targets video. conducted experiments multiple object tracking benchmark evaluate rans online mot. system analysis comparison state-ofthe-art online multi-object tracking methods demonstrate rans capable learning powerful generative model improve multi-object tracking performance. summarize paper contributions propose novel temporal generative modeling framework recurrent autoregressive networks couples internal memories external memories estimate conditional probability future sequence. framework potentially applied various tasks computer vision sequential data modeling. batch tracking online tracking. generally speaking classify multi-object tracking methods batch mode online mode. methods batch mode video frames future time steps utilized solve data association problem batch methods useful ofﬂine video analysis applications. however applicable problems immediate decisions made video frame robotics autonomous driving. contrast methods online mode previous video frames current video frame used solve data association problem online tracking feature representation object critical reliable data association. previous online tracking methods hand-crafted features propose encode feature representation object memory recurrent autoregressive networks. multi-object tracking neural networks. recently methods proposed employ deep neural networks multi-object tracking. learns siamese network match pair object detections uses output siamese network similarity score data association. since network trained match object detections able capture long term history object. introduces online multi-object tracking method using recurrent neural network trained data association multiple objects endto-end. end-to-end training requires signiﬁcant amount training trajectories limits tracking performance contrast focus learning good feature representation objects rans used subsequent data association algorithm online multiobject tracking. deep autoregressive models. idea introducing autoregressive structure deep generative models ﬁrst appeared nade darn essentially used autoregressive structure specify conditional dependencies designed bayesian networks accordingly model distribution ﬁxed-dimensional random variables. however framework aimed model temporal sequential data better resonates traditional applications autoregressive models. primary goal model memorize characteristics multiple object trajectories time memory data association tracking-by-detection manner. proposed architecture couples internal memory external memory object trajectory representations appearance motion dynamics object. section describe neural network design multi-object tracking algorithm training procedure method figure recurrent autoregressive network architecture. explain associated speciﬁc object trajectory. takes appearance motion features inputs updates internal external memories based data association results. solid boxes represent chosen detections dashed predicted position ran. combining internal external memories estimates conditional distribution detection future frames explained section training phase keep ﬁxed test time. model allow variables change time. enables adjust estimation strategies according newly received inputs characteristics sequence change. recurrent parameter estimation. order capture long-term trend sequence estimate sequentially embed gate recurrent unit model. maintains updates hidden state internal memory time dimension hidden state. given hidden state time step parameters model estimated applying mapping function case fully-connected layer followed speciﬁc element-wise transformations equation applies softmax function fully connection mapping regularization guarantee one. equaparameters tion guarantees standard deviations positive. able estimate conditional probability distribution used suppose receives input vectors time step estimates conditional probability distribution incoming input vector model conditional probability distribution utilize autoregressive model models upcoming input weighted previous input vectors plus gaussian noise denotes logistic sigmoid function tanh denotes hyperbolic tangent function denotes element-wise multiplication. parameterized matrices dimension matrices dimension equation regarded update gate decides degree update performs. equation called reset gate decides much information previous time step forgotten. equation known candidate activation used compute hidden state equation training parameters learned order update hidden state appropriate way. external internal memories. rans maintain types memories tracked object time ﬁrst type external memory consists input vectors previous time steps {xt− xt−k} considered templates object online single object tracking methods. second type internal memory represented hidden state rnns ht−. hidden state encodes information templates combined order predict probability distribution next input. given detections time data association problem object decide detection object associated handle data association problem using appearance information motion dynamics object. detections indexed compute motion dynamic features bounding boxes image patches detections. object bounding boxes appearance features previous chosen detections respectively. detection deﬁne association score object conditional probability given modeled rans equation assume independence bounding boxes appearance features. computing association scores detections object associated detection maximum score i∗|l larger predeﬁned threshold. otherwise object associated detection time marked lost. appearance motion different modalities terms dimensions updates. therefore sibling internal memories sibling external memories appearance motion respectively. tracking detection associated types memories updated simultaneously. derived respectively equation combined together compute associab tion score target lost updated predicted motion appearance counterparts remain same. tracking multiple objects tracking multiple objects assemble multiple rans corresponds object. rans used compute association scores tracked objects detections. following practice implemented multi-object tracking framework using bipartite matching described algorithm notational simplicity bind object trajectories corresponding internal external memories denoted time step detections feature extractions ﬁnished ﬁrst generate candidate pairs trajectories detections. concern computation time consider detection bounding boxes within distance last detected bounding trajectory. association scores computed explained section associate object trajectories detections initialize trajectories unassociated detections. time step update trajectories internal external memories. initialization termination trajectory handled time step. unassociated detections used initialize object trajectories. terminate trajectory lost tterminate time steps. reduce number false positive detections standard non-maximum suppression thresholding detection scores applied model a-gru a-ave a-tiv a-ran m-gru m-ave m-tiv m-ran -gru -ave -tiv -ran table analysis tracking framework validation dmot dataset. span mota table performance validation dataset according different time spans external memory. person re-identiﬁcation datasets. feature extraction takes second average frame test time. extracted appearance feature vector dimensional. motion features simply dimensional vector ﬁrst dimensions coordinates detection center relative previous trajectory last dimensions width height detection. section compare tracking performance directly using features using rans. network architecture. choose dimensional internal memories appearance dimensional internal memories motion. external memories dimensions features. time spans external memories section discuss inﬂuence varying time spans. optimization. training batch consists object trajectories multiple training videos. trajectories randomly subsampled temporally cropped across time data augmentation. adam optimization learning rate rnndrop used recurrent layers prevent overﬁtting. previous works. cases trajectory initialized false detection fail associate detections following time steps. therefore trajectory usually marked lost later eventually terminated. training goal learn parameters discriminate ground truth associations false associations. formulate training procedure maximum likelihood estimation problem conditional probability distribution ran. training iteration sample batch object trajectories training videos. trajectory instead using ground truth bounding boxes sample bounding boxes among detections whose intersection unions ground truth bounding larger then extract corresponding appearance features feed features time step estimate conditional probability distribution equation skip time steps ground truth object invisible lost. finally training loss deﬁned negative likelihood datasets. dmot datasets experiments. datasets composed pedestrian tracking videos object trajectories respectively. dataset videos aggregated multiple multi-object tracking benchmarks equally divided training testing sets. split training dmot training videos validation videos suggested evaluation metrics. multiple metrics suggested benchmark evaluate multiple object tracking performance. multiple object tracking accuracy multiple object tracking precision number switches percentage mostly track targets percentage mostly lost targets total number false positives total number false negatives total number times trajectory fragmented frame rate tracking phase among these mota metrics directly depict quality tracking association. order compare tracking performance leaderboard public detections provided benchmark faster-rcnn detections used current leading tracking algorithm. public detections computed detector faster-rcnn detections using faster-rcnn network architecture analysis validation faster-rcnn detections. baseline models. table compare performance three modality settings including using appearance information using motion dynamics using modalities modality setting evaluate baseline models explained below gated recurrent unit instead estimating parameters processing external memory model directly predict mean feature vectors along standard deviation variables multivariate gaussian distribution. average keep temporal sliding window object trajectory. features directly predicted averaging valid features sliding window. standard deviation terms trained time invariant variables case. estimate conditional probability distribution future detections using external memories only baseline uses internal memories recurrent cells. fair comparison representation capability update rules recurrent cell dimensions time span sliding window baselines chosen full model. association threshold trained model chosen automatic random search. baselines worst results. performance difference obvious appearance modality since high dimensional appearance features require representation power neural network memories. comparing three models external memories using trainable parameters comparable better performance directly averaging templates. tivs usually weight recent template sliding window highest weights decay exponentially previous time steps. rans predicted weights also decay time cases values vary occlusions noisy detections happen. among three modalities best performance achieved using appearance motion. using appearance motion former achieves fewer model design since cases appearance discriminative clue different objects bounding motions. baseline using motions obtain higher mota using appearance. using motion current setting hardly better equivalent naive constant velocity motion prior widely used previous tracking frameworks obtains much fewer switches higher mota consistent observations appearance motion affects tracking performance appearance information discriminative tracking targets overlaps occlusions other. full model framework vary time span external memory analyze inﬂuence tracking performance. previous works show using longer sliding window able capture richer history information. tracking performance ﬂuctuates time span extended peak reached certain length. table increase time span time step time steps. observed mota leap beginning constantly increase small ﬂuctuations converging steps. demonstrates robustness tracking framework terms architecture variants trajectory length. models longer time span harder train since memory required training. test time majority time spent forwarding time span minor inﬂuence runtime. order evaluate method dmot test submit results benchmark evaluation server compare state-of-theart multi-object tracking methods. shown table table model achieves competitive mota among online methods using public detections. table shows achieved state-of-the-art performance terms mota comparing online methods dmot. method even outperforms batched methods term method achieves best among online methods. shown table mota performance reaches state-of-the-art results video performance tracking framework outperforms terms mota testing videos terms testing videos. section show qualitative results tracking framework challenging scenes demonstrate predicts parameters changes time. figure choose highly crowded occluded figure visualization tracking results multiple pedestrians rans highly occluded scenes predicted parameters time. visualize frames eth-linthescher video. predicted parameters object appearance features visualized histograms time. bottom visualize frames tud-crossing video. predicted parameters object appearance features plotted. shows selected frames ethlinthescher video complicated occlusions continuously happen group people walk across business street. predicted parameters exponential decay across time rising tail end. object keep visible video parameters rely last feature. time step occlusion happen chosen detection becomes noisy updated parameters lean towards memorized features previous time steps external memory. object reappears video chose protective estimation strategy closer averaging features external memory. later updated parameters choose trust recent frame appearance became stable. bottom show another example tud-crossing video. video shot crossing multiple people walking opposite directions crosswalk. video challenging pedestrians walking parallel front camera similar scales velocities other tracking algorithm needs rely objects’ appearance rather bounding motions associate objects. object enters scene without occlusions predicted parameters similar distribution previous example. object starting overlap object parameters lean previous frames time step starting time step overlapped objects move away other. updated parameters gradually back normal case. work propose novel recurrent autoregressive network online multi-object tracking. maintains external memory internal memory order capture history characteristics object tracking. order track multiple objects represent object solve data association problem computing likelihoods object detections according distribution modeled ran. experiments conducted commonly-used benchmark multi-object tracking demonstrate advantages method online multi-object tracking. believe idea combining external memories internal memories useful sequential data modeling video analysis tasks.", "year": 2017}