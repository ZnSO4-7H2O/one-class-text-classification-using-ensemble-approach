{"title": "Computing the Stereo Matching Cost with a Convolutional Neural Network", "tag": ["cs.CV", "cs.LG", "cs.NE"], "abstract": "We present a method for extracting depth information from a rectified image pair. We train a convolutional neural network to predict how well two image patches match and use it to compute the stereo matching cost. The cost is refined by cross-based cost aggregation and semiglobal matching, followed by a left-right consistency check to eliminate errors in the occluded regions. Our stereo method achieves an error rate of 2.61 % on the KITTI stereo dataset and is currently (August 2014) the top performing method on this dataset.", "text": "known output network used initialize matching cost pair patches. matching costs combined neighboring pixels similar image intensities using cross-based cost aggregation. smoothness constraints enforced semiglobal matching left-right consistency check used detect eliminate errors occluded regions. perform subpixel enhancement apply median ﬁlter bilateral ﬁlter obtain ﬁnal disparity map. figure depicts inputs output method. contributions paper introduction large stereo datasets relatively stereo algorithms used ground-truth information learn parameters models; section review ones did. general overview stereo algorithms kong used squared distances compute initial matching cost. trained model predict probability distribution three classes initial disparity correct initial disparity incorrect fattening foreground object initial disparity incorrect reasons. predicted probabilities used adjust initial matching cost. kong later extend work combining predictions obtained computing normalized cross-correlation different window sizes centers. peris initialized matching cost ad-census used multiclass linear discriminant analysis learn mapping computed matching cost ﬁnal disparity. ground-truth data also used learn parameters graphical models. zhang seitz used alternative optimization algorithm estimate optimal values markov random ﬁeld hyperparameters. scharstein present method extracting depth information rectiﬁed image pair. train convolutional neural network predict well image patches match compute stereo matching cost. cost reﬁned cross-based cost aggregation semiglobal matching followed left-right consistency check eliminate errors occluded regions. stereo method achieves error rate kitti stereo dataset currently performing method dataset. consider following problem given images taken cameras different horizontal positions goal compute disparity pixel left image. disparity refers difference horizontal location object left right image—an object position left image appear position right image. knowing disparity object compute depth using following relation described problem subproblem stereo reconstruction goal extract shape images. according taxonomy scharstein szeliski typical stereo algorithm consists four steps matching cost computation cost aggregation optimization disparity reﬁnement. following hirschmuller scharstein refer steps computing matching cost steps stereo method. figure input pair images left right camera. input images differ mostly horizontal locations objects. note objects closer camera larger disparities objects farther away. output dense disparity shown right warmer colors representing larger values disparity constructed dataset stereo pairs used learn parameters conditional random ﬁeld. huttenlocher presented conditional random ﬁeld model non-parametric cost function used structured support vector machine learn model parameters. recent work focused estimating conﬁdence computed matching cost. haeusler used random forest classiﬁer combine several conﬁdence measures. similarly spyropoulos trained random forest classiﬁer predict conﬁdence matching cost used predictions soft constraints markov random ﬁeld decrease error stereo method. image intensities position left right image locations within ﬁxed rectangular window centered bold lowercase letters denote pairs real numbers. appending lowercase following meaning equation interpreted measuring cost associated matching patch left image centered position patch right image centered position since examples good matches obtained publicly available datasets e.g. kitti middlebury attempt solve matching problem supervised learning approach. inspired successful applications convolutional neural networks vision problems used evaluate well small image patches match. denotes patch left image centered location true disparity known extract negative positive example. negative example obtained setting center right patch {−phi phi}. instead setting zero stereo method used later particular found cross-based cost aggregation performs better network assigns matching costs good matches well near matches. size image patches hyperparameters method. architecture used depicted figure network consists eight layers ﬁrst layer convolutional layers fullyconnected. inputs network gray image patches. ﬁrst convolutional layer consists kernels size layers fullyconnected neurons each. dimensional vectors concatenated dimensional vector passed four fully-connected layers fneg output network negative class input patches naively would perform forward pass image location disparity consideration. following three implementation details kept runtime manageable locations single forward pass feeding network full-resolution images instead image patches. achieve this apply layers convolutionally—layer ﬁlters size layer ﬁlters size outputting feature maps. similarly replaced convolutional ﬁlters size order compute output locations single forward pass. unfortunately still perform forward pass disparity consideration. information neighboring pixels combined averaging matching cost ﬁxed window. approach fails near depth discontinuities assumption constant depth within window violated. might prefer method adaptively selects neighborhood pixel support collected pixels similar disparities. cross-based cost aggregation build local neighborhood around location comprising pixels similar image intensity values. cross-based cost aggregation begins constructing upright cross position. left position extends left long following conditions hold neurons each. ﬁnal layer projects output real numbers softmax function producing distribution classes weights networks left right image patch tied. rectiﬁed linear units follow layer except pooling architecture. network contains almost thousand parameters. architecture appropriate gray images easily extended handle images learning instead ﬁlters best hyperparameters network differ dataset another. chose architecture performed well kitti stereo dataset. denotes indicator function. ﬁrst term penalizes disparities high matching costs. second term adds penalty disparity neighboring pixels differ one. third term adds larger penalty neighboring disparities differ one. rather minimizing perform minimization single direction dynamic programming. solution introduces unwanted streaking effects since incentive make disparity image smooth directions optimizing over. semiglobal matching minimize energy many directions average obtain ﬁnal result. although hirschmuller suggests choosing sixteen direction optimized along horizontal vertical directions; adding diagonal directions improve accuracy system. second term included prevent values growing large affect optimal disparity map. parameters according image gradient jumps disparity coincide edges image. according following rules denote disparity obtained treating left image reference image—this case i.e. d—and denote disparity obtained treating right image reference image. contain errors occluded regions. attempt detect errors performing left-right consistency check. label position either positions marked occlusion want disparity value come background. interpolate moving left position labeled correct value. positions marked mismatch nearest correct pixels different directions median disparities interpolation. refer interpolated disparity dint. size disparity image smaller size original image bordering effects convolution. disparity image enlarged match size input copying disparities border pixels. proceed applying median ﬁlter following bilateral ﬁlter kitti stereo dataset collection gray image pairs taken video cameras mounted roof roughly centimeters apart. images recorded driving around city karlsruhe sunny cloudy weather daytime. dataset comprises training test image pairs resolution image pair rectiﬁed i.e. transformed object appears vertical position images. rotating laser scanner mounted behind left camera provides ground truth depth. true disparities test withheld online leaderboard provided researchers evaluate method test set. submissions allowed every three days. goal kitti stereo dataset predict disparity pixel left image. error measured percentage pixels true disparity predicted disparity differ three pixels. translated depth means that example error tolerance centimeters objects meters camera centimeters objects meters camera. train network using stochastic gradient descent minimize cross-entropy loss. batch size trained epochs learning rate initially decreased factor iteration. shufﬂe training examples prior learning. training image pairs extracted million examples. half belonging positive class; half negative class. preprocessed image subtracting mean dividing standard deviation pixel intensity values. stereo method implemented cuda network training done method achieves error rate kitti stereo test currently ranked ﬁrst online leaderboard. table compares error rates best performing stereo algorithms dataset. measure runtime implementation computer nvidia geforce titan gpu. training takes hours. predicting single image pair takes seconds. evident table majority time prediction spent forward pass convolutional neural network. would like know training data would lead better stereo method. answer question train convolutional neural network many instances kitti stereo dataset varying training size. results experiment depicted figure obresult kitti stereo dataset seems suggest convolutional neural networks good computing stereo matching cost. training bigger datasets reduce error rate even further. using supervised learning stereo method could also beneﬁcial. method suitable real-time applications robot navigation. future work focus improving network’s runtime performance.", "year": 2014}