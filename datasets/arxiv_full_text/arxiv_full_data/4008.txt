{"title": "Generalized Fast Approximate Energy Minimization via Graph Cuts:  Alpha-Expansion Beta-Shrink Moves", "tag": ["cs.CV", "cs.AI"], "abstract": "We present alpha-expansion beta-shrink moves, a simple generalization of the widely-used alpha-beta swap and alpha-expansion algorithms for approximate energy minimization. We show that in a certain sense, these moves dominate both alpha-beta-swap and alpha-expansion moves, but unlike previous generalizations the new moves require no additional assumptions and are still solvable in polynomial-time. We show promising experimental results with the new moves, which we believe could be used in any context where alpha-expansions are currently employed.", "text": "present α-expansion β-shrink moves simple generalization widely-used αβswap α-expansion algorithms approximate energy minimization. show certain sense moves dominate αβ-swap α-expansion moves unlike previous generalizations moves require additional assumptions still solvable polynomial-time. show promising experimental results moves believe could used context α-expansions currently employed. focus problem ﬁnding probable conﬁguration pairwise markov random ﬁeld discrete variables fundamental problem study graphical models. equivalent minimizing unary pairwise energy functions deﬁned discrete variables. problems type arise many applications general np-hard solve problems even case binary variables classical method computing approximate solution problem besag’s iterated conditional mode algorithm local nature method become stuck poor local optimum. special case variables binary pairwise energy functions satisfy submodularity condition possible solve problem polynomial-time motivated αβ-swap α-expansion moves proposed boykov approximate solution non-binary problem satisfying submodularity condition pairs states solving sequence binary submodular problems. experiments szeliski show algorithms perform well compared competing approximate minimization methods minimizing energy functions arising problems computer vision stereo image matching creating photo montages image restoration. further study found α-expansions often faster competing methods similar performance problems originally introduced context computer vision algorithms generalizations also proved eﬀective domains protein structure prediction α-expansions dominate classic algorithm. however although α-expansions often lead better experimental results αβ-swaps deﬁnition dominance neither advanced methods dominates other. paper propose type move α-expansion note unlike previous generalizations moves require additional assumptions beyond needed apply α-expansions moves computed polynomial-time solving binary submodular problem deﬁned original graph structure. thus place α-expansions applications moves currently used. experiments standard test problems type pairwise energy prefers neighbouring variables take state. special case binary variables pairwise energies submodular optimal solution computed polynomial-time minimum-cut problem there also exist several notable cases possible compute solution polynomial-time case pairwise energies convex case general energies graph structure treewidth common approach ﬁnding approximate minimizer iterative descent algorithm. input iteration algorithms particular conﬁguration variables iteration iterative descent method ﬁnds conﬁgumake deﬁnition conditional energy used x−αβ reference states variables labeled binary problem subgraph induced nodes labeled condition update computed polynomial-time edges induced subgraph submodular. reference variables labeled binary problem time subgraph induced nodes labeled however condition longer suﬃcient guarantee edges induced subgraph submodular since pairwise term involves three states nevertheless suﬃcient ensure antees approximation accuracy tend conservative since global bounds must hold possible optima. further often provide guidance choosing iterative descent methods. example small modiﬁcation analyinstead focusing global analysis instead focus simple local analysis methods. speciﬁcally interested improvement objective function obtained single iteration diﬀerent types moves given input iteration. viewpoint intuitive notion relative local improvement made diﬀerent moves also used measure relative ‘strengths’ local optima found diﬀerent types moves; move figure left right initial labeling labeling αβ-swap labeling α-expansion labeling α-expansion β-shrink. optimal labeling pixels outlined white triangle achieved initial labeling α-expansion β-shrink move. proof. assume arbitrary energy function conﬁguration optimal move must element optimal move establishes establish suﬃcient construct energy function along conﬁguration optimal solution involves changing elements example take variable problem optimal solution establishing α-expansions dominate done similarly. proof. establish α-expansions dominate αβ-swaps suﬃcient construct energy function conﬁguration optimal solution obtained single αβ-swap obtained single α-expansion. example take two-variable problem optimal solution similarly show αβ-swaps dominate α-expansions taking three variable problem optimal solution allow node currently labeled take value addition allow nodes currently labeled take value call αexpansion β-shrink moves figure illustrates instance move. αβ-swaps α-expansions special cases. further also includes moves instances either moves thus establish simply take three variable problem optimal solution computer vision problems originally motivated moves based minimum-cuts number states non-trivial since states represent discretization continuous value. example szeliski evaluate performance moves problems states state representing intensity level image. thus addition better empirical performance α-expansions preferred αβ-swaps simply number possible values number combinations quadratic scaling terms would also seem problem α-expansion β-shrink moves. however consider strategy choosing value given still obtain algorithm dominates α-expansions thus moves modiﬁed scaling α-expansions. large consider variants function consider moves instead variants would still dominate α-expansions. empirically evaluate three possible strategies selecting given many problems condition satisﬁed. cases widely-used approach modify potentials submodular optimal move modiﬁed energy guaranteed increase original energy case α-expansions construct modiﬁed energy replacing condition holds modiﬁed energy construction. further optimal α-expansion modiﬁed energy increase original energy since modiﬁed energy simply decreases energy current assignment discussed alternately increase make condition satisﬁed maintaining descent property moves. note unlike previous move sets discussed move computed solving problem involving conditional energies induced subgraph move involves solving problem original unary energies original graph structure. scenarios properties might make generalized move simpler implement αβswaps α-expansions. further original graph special structure allows specialized codes solving binary minimum-cut problems structure. example delong boykov propose method special case problems large grid structures. simple form subproblem also simplify implementation dynamic graph cuts similarity subproblems using value used substantially speed computation. implies optimal α-expansion β-shrink move computed solving minimum-cut problem using construction kolmogorov zabih thus optimal αexpansion β-shrink move computed polynomial time condition required α-expansions. further computing optimal α-expansion move computing optimal αexpansion β-shrink move worst-case time-complexity. would indicate terms energy function unchanged. already satisﬁed modiﬁed energy construction identical original energy. construction maintains appealing property move increase modiﬁed energy increase original energy. empirically evaluate performance moves performed several experiments nonbinary data sets examined szeliski data sets summarized table extracted terms energy functions code available online. triplets states. table show energy local minima obtained divided energy local minimum respect α-expansion moves. table value indicates energy identical energy obtained α-expansion moves energy close identical. experiment moves obtained lowest energy data sets strictly cases among remaining methods computationally eﬃcient strategy simply setting obtained lowest energy data sets. second experiment used local minimum respect α-expansion moves initialization tested whether methods consider moves could escape local minimum. table shows energies local optima obtained initialization. here even simple choices moves able escape local minimum respect α-expansions data sets. experiment choosing gave lowest energy data sets gave strictly lower energy selecting somewhat intuitive moves computed polynomial-time without assumptions kolmogorov rother consider implementing minimum-cut methods wihout restrictions energy functions general algorithm compute optimal move. lempitsky consider general class moves called fusion moves. moves consider full conﬁgurations variables moves form viewed ‘prematurely’ expanding next value region occupied current value although improved conﬁguration found least data three tasks largest improvements seen image restoration/inpainting tasks. likely possible labels much larger tasks. figure show restoration house data largest improvement observed. ﬁgure noticeable diﬀerence local minima respect diﬀerent moves. visual diﬀerence also reﬂected quantitatively; moves lead reconstruction error -norm distance original image) approximately two-thirds local minimum respect α-expansions variety generalizations αβ-swaps α-expansions proposed literature exhaustive list literature would outside scope. however among generalizations aware moves either require additional assumptions solved polynomial-time. example rangeswap range-expansion moves generalize αβ-swaps α-expansions replace arbitrary number elements corresponding elements alternative conﬁguration α-expansion β-shrink moves proposed special case type move otherwise. however proposition shows special case solvable polynomial-time condition lempitsky give restrictions would allow optimal general fusion move solved polynomial time. indeed generality fusion moves restriction would need much restrictive although paper focused case minimizing unary pairwise energies possible apply αβ-swaps α-expansions certain classes higher-order energies expect moves discussed paper also extended scenarios indeed believe moves could used place α-expansions many applications moves currently used. finally note implementation moves made available online. would like thank olivier duchenne daniel tarlow valuable discussions anonymous reviewers helpful comments improved paper. mark schmidt supported sierra grant european research council", "year": 2011}