{"title": "Towards Building an Intelligent Anti-Malware System: A Deep Learning  Approach using Support Vector Machine (SVM) for Malware Classification", "tag": ["cs.NE", "cs.CR", "cs.CV", "cs.LG", "stat.ML"], "abstract": "Effective and efficient mitigation of malware is a long-time endeavor in the information security community. The development of an anti-malware system that can counteract an unknown malware is a prolific activity that may benefit several sectors. We envision an intelligent anti-malware system that utilizes the power of deep learning (DL) models. Using such models would enable the detection of newly-released malware through mathematical generalization. That is, finding the relationship between a given malware $x$ and its corresponding malware family $y$, $f: x \\mapsto y$. To accomplish this feat, we used the Malimg dataset (Nataraj et al., 2011) which consists of malware images that were processed from malware binaries, and then we trained the following DL models 1 to classify each malware family: CNN-SVM (Tang, 2013), GRU-SVM (Agarap, 2017), and MLP-SVM. Empirical evidence has shown that the GRU-SVM stands out among the DL models with a predictive accuracy of ~84.92%. This stands to reason for the mentioned model had the relatively most sophisticated architecture design among the presented models. The exploration of an even more optimal DL-SVM model is the next stage towards the engineering of an intelligent anti-malware system.", "text": "abstract effective efficient mitigation malware long-time endeavor information security community. development anti-malware system counteract unknown malware prolific activity benefit several sectors. envision intelligent anti-malware system utilizes power deep learning models. using models would enable detection newly-released malware mathematical generalization. finding relationship given malware corresponding malware family accomplish feat used malimg dataset consists malware images processed malware binaries trained following models classify malware family cnn-svm gru-svm mlp-svm. empirical evidence shown gru-svm stands among models predictive accuracy ≈.%. stands reason mentioned model relatively sophisticated architecture design among presented models. exploration even optimal dl-svm model next stage towards engineering intelligent anti-malware system. concepts security privacy malware mitigation; computing methodologies supervised learning classification; support vector machines; neural networks; keywords artificial intelligence; artificial neural networks; classification; convolutional neural networks; deep learning; machine learning; malware classification; multilayer perceptron; recurrent neural network; supervised learning; support vector machine introduction effective efficient mitigation malware long-time endeavor information security community. development anti-malware system counteract unknown malware prolific activity benefit several sectors. ∗lead author implemented dl-svm models performed experiments †co-author converted malimg dataset numpy arrays code available https//github.com/afagarap/malware-classification mentioned database contains information known malware particular system used malware detection. consequently newly-released malware included database undetected. envision intelligent anti-malware system employs deep learning approach would enable detection newly-released malware capability generalize data. furthermore amend conventional models support vector machine classification function. take advantage malimg dataset consists visualized malware binaries train dl-svm models classify malware family. methodology machine intelligence library google tensorflow used implement deep learning algorithms study scientific computing libraries matplotlib numpy scikit-learn. dataset deep learning models study evaluated malimg dataset consists malware samples different malware families. table shows frequency distribution malware families variants malimg dataset. nataraj created malimg dataset reading malware binaries -bit unsigned integer composing matrix rm×n. said matrix visualized grayscale image values range representing black representing white. despite intended binary classification used multinomial classification well. approach achieve kernel tricks converts linear model non-linear model applying kernel functions radial basis function however study utilized linear lsvm multinomial classification problem. employed one-versus-all approach treats given class positive class others negative class. convolutional neural network. convolutional neural networks similar feedforward neural networks also consist hidden layers neurons learnable parameters. neurons receive inputs performs product follows non-linearity siдmoid tanh. whole network expresses mapping image pixels class scores study architecture used resembles laid input conv size filters stride leakyrelu max) pool size stride conv size filters stride leakyrelu max) pool size stride hidden neurons leakyrelu max) dropout output classes feature standardized mean value standard deviation. standardization implemented using standardscaler.fit_transform scikit-learn. granted dataset consists images standardization suitable data take note images originate malware binary files. hence features technically images begin with. support vector machine support vector machine developed vapnik binary classification. objective find optimal hyperplane separate classes given dataset features learns parameters solving following results experiments study conducted laptop computer intel core i-hq .ghz nvidia geforce gpu. table shows hyper-parameters used dl-svm models conducted experiments. table summarizes experiment results presented dl-svm models. modification introduced architecture design size layer inputs outputs leakyrelu instead relu course introduction l-svm network classifier instead conventional softmax function. paradigm combining actually proposed tang gated recurrent unit. agarap proposed neural network architecture combining gated recurrent unit variant recurrent neural network support vector machine purpose binary classification. update gate reset gate gru-rnn respectively candidate value cell state value. turn used predictor variable l-svm predictor function network instead conventional softmax classifier. multilayer perceptron. perceptron model developed rosenblatt based neuron model mcculloch pitts perceptron represented linear function passed activation function sigmoid sign tanh. activation functions introduce non-linearity represent complex functions. learning parameters weight bias model learned l-svm using loss function given computed loss minimized adam optimization. then decision function siдn produces vector scores malware family. order predicted labels given data arдmax function used preprocessed malimg dataset i.e. malware family variants epochs. hand models tested preprocessed malimg dataset i.e. malware family variants epochs. figure summarizes training accuracy dl-svm models epochs first cnn-svm model accomplished training minutes seconds average training accuracy meanwhile gru-svm model accomplished training minutes seconds average training accuracy lastly mlp-svm model accomplished training seconds average training accuracy figure shows testing performance cnn-svm model multinomial classification malware families. mentioned model precision recall score figure shows testing performance gru-svm model multinomial classification malware families. mentioned model precision recall score figure shows testing performance mlp-svm model multinomial classification malware families. mentioned model precision recall score shown confusion matrices dl-svm models better scores malware families high number variants notably allaple.a allaple.l. pointed omission relative populations malware family partitioning dataset training data testing data. however unlike results allaple.a allaple.l misclassifications them. discussion palpable gru-svm model stands among dlsvm models presented study. finding comes surprise gru-svm model relatively sophisticated architecture design among presented models notably -layer design. explained number layers neural network directly proportional complexity function represent. words performance accuracy neural network directly proportional number hidden layers. logic stands reason less number hidden layers neural network less performance accuracy hence findings study corroborates literature explanation mlp-svm came second gru-svm -layer design cnn-svm came last -layer design. reported test accuracy clearly states gru-svm model strongest predictive performance among dl-svm models study. attributed fact gru-svm model relatively complex design among presented models. first -layer design allows represent increasingly complex mappings features labels i.e. function mappings second capability learn data sequential nature image data belongs. nature gru-rnn comes gating mechanisms given equations section mentioned mechanisms gru-rnn solves problem vanishing gradients exploding gradients. thus able connect information considerable gap. however indicated training summary given figure gru-svm caveat relatively longer computing time. finished training minutes seconds slowest among dl-svm models. high-level inspection presented equations dl-svm model theoretical implication gru-svm would longest computing time non-linearities introduced computation. hand least non-linearities also theoretically implied mlp-svm model would shortest computing time. literature explanation empirical evidence inferred increasing complexity architectural design cnnsvm mlp-svm models catapult predictive performance would gru-svm model. turn implication warrants study exploration prolific information security community. conclusion recommendation used malimg dataset prepared consists malware images purpose malware family classification. employed deep learning models l-svm final output layer multinomial classification task. empirical data shows gru-svm model highest predictive accuracy among presented dl-svm models test accuracy ≈.%. improving architecture design cnn-svm model mlp-svm model adding hidden layers adding better nonlinearities and/or using optimized dropout provide better insights application malware classification. insights reveal information architecture serve best engineering intelligent anti-malware system. acknowledgment extend statement gratitude open-source community especially tensorflow. appreciation well lakshmanan nataraj karthikeyan gregoire jacob b.s. manjunath malimg dataset. would also like express appreciation friends took time reading parts paper development gave support endeavor. f.j.h. pepito gives appreciation hyacinth gasmin a.f. agarap gives appreciation pauline ocampo abqary alon rhea jude ferrer julius luis diaz. martín abadi ashish agarwal paul barham eugene brevdo zhifeng chen craig citro greg corrado andy davis jeffrey dean matthieu devin sanjay ghemawat goodfellow andrew harp geoffrey irving michael isard yangqing rafal jozefowicz lukasz kaiser manjunath kudlur josh levenberg mané rajat monga sherry moore derek murray chris olah mike schuster jonathon shlens benoit steiner ilya sutskever kunal talwar paul tucker vincent vanhoucke vijay vasudevan fernanda viégas oriol vinyals pete warden martin wattenberg martin wicke yuan xiaoqiang zheng. tensorflow large-scale machine learning heterogeneous systems. http//tensorflow.org/ software available tensorflow.org. abien fred agarap. neural network architecture combining gated recurrent unit support vector machine intrusion detection network traffic data. arxiv preprint arxiv. kyunghyun bart merriënboer caglar gulcehre dzmitry bahdanau fethi bougares holger schwenk yoshua bengio. learning phrase representations using encoder-decoder statistical machine translation. arxiv preprint arxiv. lakshmanan nataraj karthikeyan gregoire jacob manjunath. malware images visualization automatic classification. proceedings international symposium visualization cyber security. pedregosa varoquaux gramfort michel thirion grisel blondel prettenhofer weiss dubourg vanderplas passos cournapeau brucher perrot duchesnay. scikit-learn machine learning python. journal machine learning research frank rosenblatt. perceptron probabilistic model information", "year": 2017}