{"title": "A Study in a Hybrid Centralised-Swarm Agent Community", "tag": ["cs.NE", "cs.AI"], "abstract": "This paper describes a systems architecture for a hybrid Centralised/Swarm based multi-agent system. The issue of local goal assignment for agents is investigated through the use of a global agent which teaches the agents responses to given situations. We implement a test problem in the form of a Pursuit game, where the Multi-Agent system is a set of captor agents. The agents learn solutions to certain board positions from the global agent if they are unable to find a solution. The captor agents learn through the use of multi-layer perceptron neural networks. The global agent is able to solve board positions through the use of a Genetic Algorithm. The cooperation between agents and the results of the simulation are discussed here. .", "text": "present study paper whereby agents learn response situations local strategy entity global view problem. theorise agents learn local strategies likely lead overall globally desired behaviour system. firstly give short background domain multi-agent systems learning evolutionary technology study. present details study brief analysis findings. multi-agent paradigm many agents operate environment become useful tool solving large scale problems divide conquer strategy multi-agent system distributed decentralised system. paradigm individual entities collaborating solve particular problem beyond entities capabilities natural concept proving powerful practice however concept easily understandable implementation trivial. many complexities subtleties paper describes systems architecture hybrid centralised/swarm based multi-agent system. issue local goal assignment agents investigated global agent teaches agents responses given situations. implement test problem form pursuit game multi-agent system captor agents. agents learn solutions certain board positions global agent unable find solution. captor agents learn multi-layer perceptron neural networks. global agent able solve board positions genetic algorithm. cooperation agents results simulation discussed here. multi-agent systems engineering paradigm gaining momentum past years particular form multi-agent systems swarm based systems successfully applied number problems large part difficulty designing systems assigning local strategies individual agents community result desired overall global behaviour fact subject assigning local strategies current research practical interest. methodology whereby agents equipped host strategies design time learn interaction appropriate local strategy given situation proposed ideal situation would agents able dynamically develop local behaviours outcome given user desired global behaviour response environment operate. possibility would agents possibility faster response times fewer delays logic/intelligence situated nearer problem domain. increased flexibility take account changes occurring problem domain. multi-agent systems built ad-hoc since absolute theory types systems. recent attempts however formalise design agent based systems gaia methodology however widespread use. agents system. communication agents usually performed indirectly agents making changes environment agents upon. analogous insects laying pheromone trails food source etc. emphasis therefore placed reactivity systems. swarm systems successfully applied many problems notably routing computer telecoms networks recently manufacturing control system disadvantage swarm based systems agents actually global view problem solved. agents entirely focused achieving local goals whether goals benefit detriment overall community. exacerbate problem system getting stuck local optima worse cause system fail. artificial neural networks inspired functioning biological neurons animal human brains. artificial neural networks differ computing techniques able learn arbitrary relations sets data presented them. rules explicitly programmed learned experience network basic architecture neural network also based biological counterpart networks consist many simple elements known neurons operating parallel widely used neural network models multi-layer perceptron radial basis function networks. swarm intelligence particular paradigm multi-agent systems emphasizes distributedness agent simplicity. based observations social insects nature ants termites bees insect societies extremely organized even though central control planning. agent system programmed achieve local goal. agent’s behaviours swarms simple intelligence system ‘emergent’ overall behaviours genetic algorithms inspired process natural selection evolution nature. class non-greedy algorithms perform exploration search space. first proposed john holland thought four modules encoding selection recombination evaluation. modules evaluation function problem specific. possible solutions problem encoded proposed system applied game pursuit. pursuit board represented dimensional grid pattern shown figure asterisks represent captor agents circle represents fugitive agent game captors surround corner fugitive. agent move block turn. legal moves pursuit board down left right stay. diagonal moves allowed. least captor agent must move captors’ move. furthermore board wrap around. game ended fugitive captured implying fugitive place move architecture system four separate agents representing captors. agents neural network trained independently other. agent responsible making valid move. system also genetic algorithm based agent control captor agents called global agent. global view system. global agent invoked acts centralised system proposes moves best satisfy global goal system. system operation shown flowchart form figure turn captors move captor agents invoked. proposed moves captors combined result tested legality. proposed moves captors implemented synchronously. global agent invoked chromosome string. population chromosomes make generation possible solutions problem. chromosome evaluated problem-specific evaluation module. certain chromosomes selected selection module procedure selected chromosomes recombination module form next generation chromosomes. reference states method human learning presented task rational reasoning perform decision making process behind solving task. using deliberative approach begin master task able perform naturally without explicitly performing rational reasoning. point people pattern recognition skills perform task. hypothesised human model discovery learning applied agent strategising. evolutionary optimisation genetic programming techniques used discover strategies agent community. methods desirable large number possible solutions problem. deliberative stage problem solution formulated. strategy discovered used neural network trained results. pattern recognition stage. thus time neural networks learn large number strategies generalising strategies scenarios. thus agents perform tasks problem solving become natural them neural networks start taking genetic programming optimisation modules. paper link qualities swarm based centralised system. this propose system consists centralised control swarm agents. method aims centralised control deliberative phase problem solving switch distributed system problem solutions discovered centralised system learned subconscious agents. system thus hybrid centralised/swarm system. centralized system effectively used train multi-agent system. advantage arrangement centralized system global view pursuit board. centralised system represented global agent programmed favour solution minimises captor’s distances fugitive. words looks arrangement captors maximally surround fugitive. pure swarm system approach followed likely implementation would agent attempts minimize distance fugitive. cause agents others blocking result inferior strategy agents since prepared make sacrifice positions even would result globally better arrangement captors. initially system operates mainly centralised system global agent proposing moves. time progresses however captor agents start performing moves system edges towards swarm system. agents contain neural network. network inputs current relative positions agents board agent. five outputs network representing particular direction agent move. input representation neural network important success practical extremely smooth network representation input data well using input representation describes features data help reduce number states network learn lookup-table type fashion increase ability network generalise learned data situations board representation relative differences position. captor agent relative positions captors inputted order cartesian distance. relative position fugitive given last inputs. depicted figure representation allows various formations agents captured regardless exact location pursuit board. formations common captors chasing fugitive. trained moves discovered global agent using genetic algorithm. captor trained data specific experience board. training agents centralised system means direct communication agents drastically espite fact pursuit simple game successful suggestion moves community agents quite significant. firstly make legal move agents aware rules game explicitly programmed them. secondly successful moves invariably require degree cooperation neighbouring agents. usually achieved explicitly using communication agents. system communication. successful moves mean agents able anticipate other’s actions. fter large number games agent observed large variety board positions system neural networks tend same. agents system abilities allowed moves. scenario agents different abilities separate pieces chess networks train totally different output moves tend different even observing infinite number moves. however reason agents still able anticipate others moves since trained data. many occasions agents able make legal move fact agents suggested direction move time. intuitively suggests agents well trained particular situation often case. genetic algorithm always propose result particular board position. means given board position agent trained many possible moves. needed method resolve proposed multiple directions agent particular situation agents. urther work involves methodology allowing agents formulate global strategy without relying external global agent. could simple principle distributing evaluations genetic algorithm populations among agents elaborate methods. reduced. fact agent take account agents moves moving itself. therefore terms communication system acts swarm system major difference agent aware global goal training received global agent inherently acts cooperatively agents. illegal moves discouraged penalty scheme used multiplied large number order create peak evaluation function. similarly ensure winning move chosen clearly possible legal combination move heavily rewarded. system implemented matlab. genetic algorithm toolbox used open source gaot netlab used implement neural networks captor agents. two-layer architecture used networks. networks logistical function output units. variable number hidden units used depending amount data network seen. since netlab directly support on-line training alternative scheme used. every time global agent invoked board position recorded well moves proposed global agent. data added training data. game complete agents retrained using updated training data. maria chli philippe wilde goossenaerts vladimir abramov nick szirbik pedro mariano rita riberio stability multi agent systems ieee international conference systems cybernetics volume pages j.a. marshall m.e. brouke francis autonomous agents pursuit strategies proceedings block island workshop cooperative control. springer-verlag series lecture notes information sciences study hybrid centralised-swarm agent community discussed paper. implementation proposed architecture form centralised/global agent neural networks swarm agents applied game pursuit. found although swarm captor agents able learn large number moves fact move applicable situation results agents proposing possibilities situation. needs resolved within swarm system result valid move. jordan bishop neural networks artificial intelligence laboratory massachusetts institute technology last accessed august ftp.publications.ai.mit.edu.", "year": 2007}