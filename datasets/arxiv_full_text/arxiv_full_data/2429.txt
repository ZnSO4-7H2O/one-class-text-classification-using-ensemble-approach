{"title": "Learning Equivalence Classes of Bayesian Networks Structures", "tag": ["cs.AI", "cs.LG", "stat.ML"], "abstract": "Approaches to learning Bayesian networks from data typically combine a scoring function with a heuristic search procedure. Given a Bayesian network structure, many of the scoring functions derived in the literature return a score for the entire equivalence class to which the structure belongs. When using such a scoring function, it is appropriate for the heuristic search algorithm to search over equivalence classes of Bayesian networks as opposed to individual structures. We present the general formulation of a search space for which the states of the search correspond to equivalence classes of structures. Using this space, any one of a number of heuristic search algorithms can easily be applied. We compare greedy search performance in the proposed search space to greedy search performance in a search space for which the states correspond to individual Bayesian network structures.", "text": "approaches data typically tion heuristic bayesian scoring turn score entire structure belongs. scoring heuristic search algorithm equivalence classes bayesian opposed general states equivalence classes space algorithms easily applied. pare greedy search performance posed search space greedy search perfor­ mance search space states correspond network structures. search algorithm must define space. first search tions search problem. sentation operators state another space systematic defined search algorithms perhaps learning networks defined individual representation graph operators changes compare various search operators adjacent deleted edge added either subject formed. shall bayesian-network space short way. figure shows example b-space. bayesian probability distributions works equivalent. lence imposes network structures. many scoring actually alence class candidate call scoring paper provide eral search space states equivalence easily apply gorithms. describe work. section fine search space. particular efficient equivalence representation troduce simple operators compare representation. section search performance b-space greedy search per­ formance emphasize suitable chosen greedy search literature every edge participating undirected fies equivalence pdags however correspond equivalence pdag used definition class. follows represent dags equivalence least different pdags represent class. next section subclass pdags correspondence equiva­ lence classes. skeleton pdag every directed edge v-structures orientation consistent consistent extension class tent extension extension discussed components states representation states operators. score-equivalent scoring function used argued states search equivalence section simple operators equivalence applied representation. call sulting search space equivalence-class short. recall given section lence class compelled edges. consequently reversible dags. define completed pdag representation equivalence rected class equivalence figure shows completed class. given completed necessarily applying results first extract admit consistent legal. complete rithm dag-to-pdag called resulting cess applying figure application illustrated proposed changes example effects pdag. furthermore completed pdag correspond consistent alence class. scoring dags efficiently fortunately uncommon complete simple operators pleted pdags. algorithms. pdag-to-dag takes input arbitrary pdag returns ists. pdag-to-dag returns given pdag admit consistent tarsi present pdag-to-dag used experimen­ results. dag-to-pdag takes input arbitrary returns class. derson mentations results greedy section search applied e-space performance greedy search applied b-space. greedy search simple algorithm that given current state always moves adjacent state increases score most. adjacent state higher score experiments algorithm terminates. empty graph used greedy search initialized identify class high score. goal given particular highest score. consequently score best state found search algorithm best indicator algorithm's compared scoring functions many researchers search algorithms together. case learning curacy often measured terms close learned network edge candidate structure using version used corresponds assumptions. empty prior network equivalent sample size either results reported expressed log-space. experiment score difference structural gold standard ratio difference score score e-space minus score b-space hence indicates search b-space. difference structural differ­ ence however structural generated gold standards. fol­ contained binary variables lows every pair nodes graph directed edge inserted constraint ents. conditional network drawn uniform dirichlet tion. alarm network network contains nodes edges expert system problem ventilator management become standard benchmark learning alarm network database con­ tained cases. database e-space b-space. results summarized table greedy search e-space sig­ nificantly domain. first experiment investigated mance e-space compares b-space size graphs increase. five sizes gold-standard nodes. graph size gen­ standard generated three random databases erated three random gold standards. gold con­ sisting cases each. greedy search using databases e-space b-space gen­ erated. results summarized table size greedy search e-spac.e out­ every gold-standard performed greedy search b-space terms average score difference. standard increased difference measures tended increase well. size database increases. used random gold standards experiment gold standard contained binary nodes. used database sizes cases. generated; databases containing generated. e-space b-space. results sum­ marized table again greedy search e-space outperformed greedy search b-space quality measures every database size. final experiment using data generated overall gorithm applied e-space consistently greedy algorithm time complete search e-space signifi­ cantly longer. reasons latter observation. consider search networks nodes. b-space approximately operators step. e-space however approximately greedy search b-space local maximum reached. next generate completed pdag represen­ tation score increased e-space. make step e-space switch back b-space next local maximum. approach reached b-space. furthermore using e-space local maxima result­ search performance", "year": 2013}