{"title": "Multi-Instance Multi-Label Learning", "tag": ["cs.LG", "cs.AI"], "abstract": "In this paper, we propose the MIML (Multi-Instance Multi-Label learning) framework where an example is described by multiple instances and associated with multiple class labels. Compared to traditional learning frameworks, the MIML framework is more convenient and natural for representing complicated objects which have multiple semantic meanings. To learn from MIML examples, we propose the MimlBoost and MimlSvm algorithms based on a simple degeneration strategy, and experiments show that solving problems involving complicated objects with multiple semantic meanings in the MIML framework can lead to good performance. Considering that the degeneration process may lose information, we propose the D-MimlSvm algorithm which tackles MIML problems directly in a regularization framework. Moreover, we show that even when we do not have access to the real objects and thus cannot capture more information from real objects by using the MIML representation, MIML is still useful. We propose the InsDif and SubCod algorithms. InsDif works by transforming single-instances into the MIML representation for learning, while SubCod works by transforming single-label examples into the MIML representation for learning. Experiments show that in some tasks they are able to achieve better performance than learning the single-instances or single-label examples directly.", "text": "feature vector associated class label. formally denote instance space class labels. task learn function given data instance known label although formalization ﬁrst step mimlboost miml example transformed number multi-instance bags i.e. ψ]}. note labeled multi-instance containing number instances i.e. label bag. convenience denote denotes expectation. then goal learn function minimizing bag-level exponential loss ebeg|b)] ultimately estimates bag-level log-odds function training set. boosting round expand i.e. adding weak given miml training examples goal d-mimlsvm learn mapping proper label corresponds speciﬁcally d-mimlsvm chooses instantiate functions i.e. number labels label space lt}. here t-th function determines belongingness i.e. addition single instance viewed containing instance also well-deﬁned function. convenience simpliﬁed transform miml example number multiinstance bags ψ]··· ψ]}. thus original data transformed multi-instance data containing number multi-instance bags denoted y)]} initialize weight table characteristics page data sets denotes percentage documents belonging category; denotes average number labels document; denotes percentage rare categories i.e. kind category less instances data belong", "year": 2008}