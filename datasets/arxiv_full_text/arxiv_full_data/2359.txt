{"title": "A Branch-and-Bound Algorithm for MDL Learning Bayesian Networks", "tag": ["cs.AI", "cs.LG", "stat.ML"], "abstract": "This paper extends the work in [Suzuki, 1996] and presents an efficient depth-first branch-and-bound algorithm for learning Bayesian network structures, based on the minimum description length (MDL) principle, for a given (consistent) variable ordering. The algorithm exhaustively searches through all network structures and guarantees to find the network with the best MDL score. Preliminary experiments show that the algorithm is efficient, and that the time complexity grows slowly with the sample size. The algorithm is useful for empirically studying both the performance of suboptimal heuristic search algorithms and the adequacy of the MDL principle in learning Bayesian networks.", "text": "paper extends presents and-bound network description given algorithm network network nary experiments efficient slowly useful formance rithms adequacy bayesian learning assuming tion values ually minimized. enumerates independently work specifies reduces subset x;_t} minimizes random variables score need search work variables need search search space still variables. section directly result paper. since possible tures search exponential variables given scoring variable successively adds parent vari足 able within xi-d maximally proves bayesian able added score improves. tion algorithm function called presented figure used preprocessing proposed search space represented graph. states represented graph operators search-space tematic guaranteed current define empty root search give order variables call order tree order. tree order nothing could arbitrary given variable ordering. later algorithm efficient state variables list xil' 'xi} tree order. restricted tree order. search-space finding parent variable figure search tree variable nodes tree depth state pruning arbitrary. quently used tree order would influence terms. example tend lower parent sets contain lower bounds would parent sets contain entropy values sets contain would large contain frequencies ables appear terms opposite tree order appears tree order variables earlier reduce entropy lower bounds would values ordered around. tree order determined search algorithm value found dfbnb pro足 cedure initial minm value. since works well practically minimum value pro足 leads dfbnb cedure prune search tree nodes using optimal minm value starting time. assume visiting search tree. denote variables {xk+p xk;_j. want decide visit branch child tu{xq} since entropy tive ables parent suzuki obtained lower bound values search improvement ble. lower bound terms computed tion avoided show leads minor improvement. used fixed tree order visit search tree. possible first according possible find lesser speed pruning. procedure performs minimum values namical outweights states. space graph form tree added state order visit tree. time compute terms comes parent sets contain variables assume using hash tables sufficient statistics. finding minimum scored parent variable deriving take zero lower bounds tropy terms. practice used equation minm sometimes termined thus branches branches fact many variables also leads actual search depth less estimation test results sec足 tion show dfbnb_k algorithm show efficiency compared database. stands computation variable ordering. \"states\" many times entropy b&b..d algorithm number states visited dfbnb_k algorithm number states implemented table gives test results algorithm sizes full network states since time spent state overall slow increase exploit large databases give results hours recover since dfbnb_k exhaustive returns paves studying interesting algorithm global minimum performed well time regardless databases. local minimum twice variables. times variables databases found global another function ture. table gives test results. networks edges extra missing works training databases ated. results miss edges training extra edges even data size small. number missing increases scoring i-map given variable large enough. trouble randomly several empty picked parent sets) developed bound search structures given. preliminary time complexity sample size. algorithm optimum networks tion thus used empirically performance network timal algorithm finding global", "year": 2013}