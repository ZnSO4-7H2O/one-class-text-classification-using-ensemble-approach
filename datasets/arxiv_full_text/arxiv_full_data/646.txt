{"title": "Fast YOLO: A Fast You Only Look Once System for Real-time Embedded  Object Detection in Video", "tag": ["cs.CV", "cs.AI", "cs.NE"], "abstract": "Object detection is considered one of the most challenging problems in this field of computer vision, as it involves the combination of object classification and object localization within a scene. Recently, deep neural networks (DNNs) have been demonstrated to achieve superior object detection performance compared to other approaches, with YOLOv2 (an improved You Only Look Once model) being one of the state-of-the-art in DNN-based object detection methods in terms of both speed and accuracy. Although YOLOv2 can achieve real-time performance on a powerful GPU, it still remains very challenging for leveraging this approach for real-time object detection in video on embedded computing devices with limited computational power and limited memory. In this paper, we propose a new framework called Fast YOLO, a fast You Only Look Once framework which accelerates YOLOv2 to be able to perform object detection in video on embedded devices in a real-time manner. First, we leverage the evolutionary deep intelligence framework to evolve the YOLOv2 network architecture and produce an optimized architecture (referred to as O-YOLOv2 here) that has 2.8X fewer parameters with just a ~2% IOU drop. To further reduce power consumption on embedded devices while maintaining performance, a motion-adaptive inference method is introduced into the proposed Fast YOLO framework to reduce the frequency of deep inference with O-YOLOv2 based on temporal motion characteristics. Experimental results show that the proposed Fast YOLO framework can reduce the number of deep inferences by an average of 38.13%, and an average speedup of ~3.3X for objection detection in video compared to the original YOLOv2, leading Fast YOLO to run an average of ~18FPS on a Nvidia Jetson TX1 embedded system.", "text": "boxes using hand-picked priors instead predicting bounding coordinates directly. anchor associated coordinates score values estimate probability object object proposed box. motivated improvement faster r-cnn anchor proposal redmon farhadi proposed improved yolo method anchor boxes used predict bounding boxes. furthermore compared yolo yolov fully-connected layers network architecture. make training procedure easier network k-means clustering applied training bounding boxes automatically select good priors thus improved modeling accuracy. make network faster yolov utilized network architecture contrast frameworks using vgg-. speciﬁcally darknet- requires billion ﬂoating point operations signiﬁcantly lower compared vgg- requires billion ﬂoating point operations forward pass. experimental results approach demonstrated yolov perform object detection nvidia titan-x achieving state-of-the-art detection performance. although yolov achieve real-time performance powerful still remains challenging leveraging approach real-time object detection video embedded computing devices limited computational power limited memory. example different real-world applications realtime inference smartphones embedded video surveillance available computing resources limited combination low-power embedded gpus even embedded cpus limited memory. therefore real-time object detection video embedded devices remains challenge tackle. motivated tackle challenge propose framework called fast yolo accelerates yolov real-time objection detection video embedded devices strategies. first motivated promising results demonstrated shaﬁee leverage evolutionary deep intelligence framework evolve yolov network architecture produce optimized architecture signiﬁcantly fewer parameters maintaining strong detection performance. second motion-adaptive inference method introduced proposed fast yolo framework reduce frequency deep inference o-yolov based temporal motion characteristics. combination strategies results object detection framework improves realtime embedded objection detection speed video making feasible embedded devices restricted computational memory power requirements. paper organized follows. section methodology behind fast yolo described detail. experimental results demonstrating efﬁcacy fast yolo presented section conclusions drawn section proposed fast yolo framework divided main components optimized yolov architecture motion-adaptive inference video frame image stack consisting video frame reference frame passed convolutional layer. result convolutional layer motion probability motion-adaptive inference module determine deep inference needed compute updated class probability map. mentioned introduction main goal introduce framework object detection video perform faster embedded devices decreasing resource usage turn signiﬁcantly decreases power usage. leveraging motion-adaptive inference approach frequency deep inference greatly reduced performed necessary. object detection considered challenging problems ﬁeld computer vision involves combination object classiﬁcation object localization within scene. recently deep neural networks demonstrated achieve superior object detection performance compared approaches yolov state-of-the-art dnn-based object detection methods terms speed accuracy. although yolov achieve real-time performance powerful still remains challenging leveraging approach real-time object detection video embedded computing devices limited computational power limited memory. paper propose framework called fast yolo fast look framework accelerates yolov able perform object detection video embedded devices realtime manner. first leverage evolutionary deep intelligence framework evolve yolov network architecture produce optimized architecture fewer parameters drop. reduce power consumption embedded devices maintaining performance motion-adaptive inference method introduced proposed fast yolo framework reduce frequency deep inference o-yolov based temporal motion characteristics. experimental results show proposed fast yolo framework reduce number deep inferences average average speedup objection detection video compared original yolov leading fast yolo average ∼fps nvidia jetson embedded system. object detection challenging problems ﬁeld computer vision. goal object detection localize different objects scene assign labels objects’ bounding boxes. common approach tackling problem re-purpose existing trained classiﬁers assign labels bounding boxes scene. example standard sliding window approach used classiﬁer determines existence object associated label possible windows scene. however type approach signiﬁcant limitations terms high computational complexity also high detection error rate. recently deep neural networks shown superior performance range different applications object detection areas dnns signiﬁcantly outperformed existing approaches. particular number convolutional neural network -based methods demonstrated achieve state-of-the-art object detection performance. example region-cnn approach architecture used generate bounding proposals image instead sliding window approach thus classiﬁer perform classiﬁcation bounding proposals. although r-cnn able produce state-of-the-art accuracy whole procedure slow difﬁcult optimize since component must trained individually. recently look object detection approach proposed mitigated computational complexity issues associated r-cnn formulating object detection problem single regression problem bounding coordinates class probabilities computed time. although yolo demonstrated provide signiﬁcant speed advantages r-cnn also shown localization error yolo signiﬁcantly higher recent r-cnn variants faster r-cnn region proposal network faster r-cnn predicts offsets conﬁdences anchor fig. overview proposed fast yolo framework object detection video. video frame image stack consisting reference video frame passed convolutional layer compute motion probability map. motion probability along passed motion-adaptive inference module decide deep inference needed compute class probability map. deep inference determined necessary optimized yolov network used compute updated class probability updated stored reference probability respectively; otherwise reference class probability used directly. such proposed fast yolo framework leverages greatly optimized architecture also reduces number deep inferences needed object detection video. main challenges deep neural networks particularly leveraging embedded scenarios network architecture design. design process usually performed human expert explores large number network conﬁgurations best architecture particular task terms modeling accuracy number parameters. finding optimized network architecture typically tackled currently hyper-parameter optimization problem tackling problem time-consuming methods either computationally intractable large network architectures lead suboptimal solutions insufﬁcient embedded use. example common approach hyper-parameter optimization grid search large range different network conﬁgurations examined best conﬁguration selected ﬁnal network architecture. however deep neural network designed purpose object detection video yolov tremendous number parameters computationally tractable search entire parameter space optimal solution. such rather leveraging hyper-parameter optimization approach obtaining optimal network architecture based yolov instead take advantage network optimization strategies designed speciﬁcally improving network efﬁciency particular leverage evolutionary deep intelligence framework optimize network architecture synthesize deep neural network satisﬁes memory computational power restrictions embedded devices. evolutionary deep intelligence framework architectural traits deep neural network modeled probabilistic genetic encoding modeling strategy. particular probabilistic ’dna’ produced manner encodes probability existence possible synapses within network architecture. probabilistic ’dna’ ancestor network along environmental factors leveraged synthesize offspring deep neural network stochastic manner encoding synthesis process repeated generation generation producing increasingly efﬁcient deep neural networks time goes advantages approach that unlike hyper-parameter optimization approaches need evaluate enormous number possible solutions signiﬁcantly mitigated thus signiﬁcantly decreases computational complexity ﬁnding optimal network architecture. leverage evolutionary deep intelligence framework obtaining optimized network architecture based yolov purpose embedded object detection video take consideration fact computational power available memory greatly limited embedded devices. therefore conﬁgure environmental factors used network synthesis process number parameters network architecture greatly reduced generation number parameters major factor computational memory requirements deep neural network. approach allowed automatically optimized network architecture based yolov contains fewer parameters compared original yolov network architecture. running optimized deep neural network greatly reduced computational memory requirements also decreases power consumption processor unit highly important embedded devices. decrease power consumption processor unit purposes embedded object detection video take advantage fact video frames captured contain unique information thus deep inference need performed frames. such introduce motion-adaptive inference approach determine deep inference needed particular video frame. performing deep inference using o-yolov network introduced previous section necessary motion-adaptive inference technique help framework decrease demand computational resources thus resulting signiﬁcant decrease power consumption system well increase processing speed. motion-adaptive inference process seen figure frame stacked reference frame iref form image stack. convolutional layer performed image stack produce motion probability map. motion probability along frame passed motion-adaptive inference module determines frame unique enough compared reference frame warrant deep inference compute class probability map. module determines deep inference necessary o-yolov network used compute updated class probability updated stored iref reference probability respectively. situation motion-adaptive inference module determines deep inference needed frame stored reference class probability used directly without performing o-yolov frame taking advantage simple effective procedure frames require deep inference processed leading decrease power consumption also decrease average running time frame provide faster framework speciﬁcally environments stationary small proposed fast-yolo framework evaluated using different strategies. first evaluate modeling accuracy performance optimized yolov network architecture original yolov network architecture pascal dataset demonstrate efﬁcacy network architecture optimization process. table shows architectural performance comparisons o-yolov original yolov pascal dataset. observed o-yolo network architecture smaller compared original yolov drop would little impact real-world video-based object detection applications. second proposed fast yolo framework o-yolov original yolov evaluated terms average run-time nvidia jetson embedded system video observed table proposed fast yolo framework reduce number deep inferences average leading average run-time compared achieved original yolov paper introduced fast yolo framework purpose real-time embedded object detection video. although yolov considered state-of-the-art framework realtime inference powerful gpus possible embedded devices real-time. here take advantage evolutionary deep intelligence framework produce optimized network architecture based yolov. optimized network architecture utilized within motion-adaptive inference framework speed detection process well reduce energy consumption embedded device. experimental results showed proposed fast yolo framework achieve average run-time faster compared original yolov reduce number deep inferences average possesses network architecture compact.", "year": 2017}