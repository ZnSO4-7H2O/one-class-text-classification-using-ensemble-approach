{"title": "LAREX - A semi-automatic open-source Tool for Layout Analysis and Region  Extraction on Early Printed Books", "tag": ["cs.CV", "cs.AI"], "abstract": "A semi-automatic open-source tool for layout analysis on early printed books is presented. LAREX uses a rule based connected components approach which is very fast, easily comprehensible for the user and allows an intuitive manual correction if necessary. The PageXML format is used to support integration into existing OCR workflows. Evaluations showed that LAREX provides an efficient and flexible way to segment pages of early printed books.", "text": "abstract semi-automatic open-source tool layout analysis early printed books presented. larex uses rule based connected components approach fast easily comprehensible user allows intuitive manual correction necessary. pagexml format used support integration existing workflows. evaluations showed larex provides efficient flexible segment pages early printed books. categories subject descriptors applied computing document management text processing document analysis optical character recognition. general terms algorithms experimentation human factors performance keywords layout analysis segmentation early printed books introduction large amount historical documents become available scanned images recent years open unlock heritage data make available fully electronic machine-actionable research data. several hurdles must overcome. first goal achieve high-quality recognition printed text characteristics completely different modern printings existing optical character recognition engines trained. recently achieved trained recurrent neural networks lstm architecture printed books character recognition rates manuscripts). however workflow geared high-volume throughput relies largely automatic preprocessing methods layout analysis task i.e. segmentation pages text non-text zones preferably semantic meaning text zones processed subject subsequent step yielding electronic text. manual work necessary obtain satisfactory segmentation ease efficiency crucial. third necessary task annotation results post correction phase comprising error correction normalization often highly variable historical spelling. following present tool difficult page layout analysis task currently biggest obstacles largescale application methods digital images historical https//github.com/chreul/larex http//www.frakturschrift.com/enstart https//transkribus.eu/transkribus/ documents. fast segmentation allowing quick interactive steps tune global parameters essential enable subsequent automatic turnaround whole book whose single pages afterwards corrected individually needed. therefore semi-automatic approach allows quick preprocessing compared purely manual methods available open-source license enable definition sustainable fully open-source workflow. remainder paper structured follows short overview related work chapter functionality larex described chapter evaluation chapter tool tested different scenarios performance measured aletheia’s. obtained results discussed chapter chapter concludes paper. related work given focus open-source tools workflows sensible divide existing tools open-source proprietary software. among proprietary tools abbyy products define state available automatic products excellent results wide variety layouts. downside cannot adapted user. company interest relatively volume historical documents less importantly maybe still interest assigned. proprietary product long term availability even adherence data standards guaranteed. abbyy also underlying engine automatic preprocessing transkribus cross-platform java tool opensource server software behind aletheia highly functional proprietary product prima research group university salford. windows uses tesseract automatic preprocessing. manual features extensive closed-source nature community contribution except feature request guaranteed long term availability comes fee. open-source engine tesseract built-in analysis routines significantly less successful abbyy. used aletheia also larex tool line segmentation engine ocropus capable segmenting lines text regions offers almost capability text/non-text region detection. scribo module olena platform opensource layout analysis framework finished second regions connected areas page like image running text headings marginalia page numbers etc.. larex uses type definitions pagexml format denoting regions. workflow segmentation consists following main steps illustrated figure input scanned page. output classified segments pagexml. processing input resized binary conversion binary. definition region interest resizing image. image detection region growing region growing regions larger regions region classification image image. competition historical book recognition clearly strengths modularity flexibility seem suited needs average user looking stand-alone tool used right away. agora open-source software developed paradiit project university tours like larex’ based connected components approach. software windows project appears currently dormant. finally gupta proposed method utilizes tesseract’s automatic segmentation text/noise classification obtained word bounding boxes. information used estimate document’s overall quality increase accuracy. despite performing layout analysis proper sense area still highly relevant mass digitization historical documents. part emop produced tool free open-source. conclude open-source tool well documented adaptable easily usable much lacking hampering progress historical books. larex goal larex tool currently development university würzburg support users segmentation classification regions images. paper discuss application analysis early printed books. segmentation procedure user-driven uses connected components approach. based main assumptions first starts premise related characters words text lines usually closer unrelated ones. second expects pages within book similar layouts least belong layout categories. larex designed able automatically segment given document perfection. contrast aims provide user quick easily comprehensible adapt given layout segmentation suggestion manually correct necessary. therefore correction operations simple possible deliver immediate feedback. overview goal proposed approach detect classify different regions scanned page figure workflow. binary image detection image removal region growing text region classification algorithm output user amendment. detailed description algorithm section steps basic workflow described. optional manual adaptations advanced text subregion detection discussed separately section table shows constraints three region types paragraph marginalia page number. position constraints different regions overlap. types checked area region bigger type-specific minimal area. case bounding rectangle region completely covered rectangle-position type region considered candidate type. initial classification step regions assigned several types. post processing step type priority list applied. default order first page number second marginalia third paragraph. region satisfied constraints types assigned type highest priority. addition possible define number maximal occurrences page type. example usually exists page number. therefore best fitting page number candidate chosen others either re-assigned types dropped. again decision priority list used. case page number priority position ‘top’ therefore topmost candidate chosen. conversion output format user satisfied segmentation result stored file using pagexml format. thus segmentation result recalculated true size input image. afterwards resulting file placed within folder input using file name. manual adaptions many cases default parameters enough obtain satisfying segmentation result. following sections global local operations improve results shown. global adjustments given book figure shows example outcome default setup consisting four regions obviously still work done. initial correctly detected well page number. however marginalia regions classified paragraph outer contour located entirely within marginalia regions. furthermore signature mark bottom page. lastly vertical spacing text lines relatively leading unwanted separation text blocks. worth mentioning marginalia located bottom right classified page number despite eligible position. default occurrence value page number region priority position top. default setup easily adapted clicks. first page number position bottom deleted upper slightly adjusted book page numbers always occur center page. furthermore marginalia regions expanded towards middle image. dilation preprocessing larex accepts color grayscale binary images input. however upcoming region growing contour detection operations require binary format. therefore conversion performed necessary. obviously resulting segmentation still corresponds original input image. user work entire binary image specify region interest drawing rectangle e.g. exclude artefacts input image scanning. everything outside specified area painted white effect rest segmentation process. region interest either specified single page applied entire book. adjusted time. image resized given resolution order speed segmentation process normalize parameters like upcoming dilation catchment areas required minimum area regions. images expected certain minimum area either compact possess border. first dilation operation applied using small kernel values prevent letters words merging well. imagined growing process black foreground pixels within defined kernel grow together. connected components bigger given image area threshold marked images. processing either contours straight rotated bounding rectangles around removed image. coarse text region detection afterwards another dilation process bigger kernel takes place step newly emerged regions assigned type enforcing several constraints. constraints type classification region attributes shown table constants table functions table parameters slightly increased. finally another region type signature-mark added located bottom center page. settings saved applied rest book well books similar layouts. figure result using default slightly adjusted parameters. local manual corrections special cases user make amendments like adjustment region parameters manual adaption obtained segmentation result deleting segments changing type splitting merging them. example figure signature mark connected bottom text block difficult correct global parameter optimization. several ways deal problems segments drawing line string lines. separated block gets automatically assigned correct type within corresponding position. alternative segments marked drawing rectangle polygon around assigning type. remains fixed entire segmentation process unaffected parameters. segmentation take place. afterwards resulting lines rotated back original position. process quite time consuming test image size pixels took around seconds complete line segmentation. reducing image resolution usually worsens result significantly. therefore recommended collect arbitrary number temporary segmentation results process once example night time. resulting line coordinates stored separate pagexml file automatically matched original segmentation result runtime soon corresponding page selected tool. example output line segmentation seen figure despite heavy skewing image result precise. mouse cursor moved block segments corresponding lines displayed directly cursor marked active. figure example block line segmentation putting line segmentation manual separation text block tedious task much easier using text lines. selecting line mouse click user underlying segment selected line. third option change type line. automatically triggers cuts. figure three ways influence result directly drawing lines rectangle polygon text sub-region segmentation sometimes necessary detected text block along several lines heading highlighted first line paragraph rest text. done drawing line. line segmentation needed utilize tesseracts page segmentation algorithm manually correct rather completely manually. locating lines assure optimal line segmentation results previously detected segments processed separately. cutting original image rotated upright position. segment small tesseract predict needed angle weighted average remaining segments used. line figure example operational scenario applying line segmentation segment detected lines extracted first line final result figure shows line segmentation action. particular book chapter starts heading looks like standard text slightly indented. followed first line paragraph printed bigger prominent font. standard segmentation process recognizes single block gaps around special parts text equal ones standard text. task split segments text assign correct types them. done simple actions line segmentation first line paragraph marked desired type triggering line cutting. next heading split text resulting text block marked heading evaluation interactive design would misleading compare larex approaches using evaluation metrics fully automatic tools. addition interactive tool overall required time user effort achieve satisfactory segmentation important. therefore number problems time needed correct assessed. report evaluations first standard tool second slight extensions special requirements. additional time exposure accuracy resulting text regions compared obtained fully manual segmentation. evaluating standard functionality first evaluation performed ‘the shyp folys’ part effort support ‘narragonien digital’ project. book consists pages alternates english latin text. figure shows segmentation guidelines task images initials marked ornaments around image supposed dropped. regions marginalia signature marks page numbers/sheet titles recorded. image descriptions supposed classified normal text. segmentation process performed student research assistant narragonien digital project prior experience larex background computer science image processing layout analysis. total corrections performed first scanned pages vast majority user actions consisted removal unneeded regions like ornaments stains bordures next main images. corrections real segmentation errors. closer analysis showed half amendments became necessary additional requirements initially specified parameter setup. included removal bordures next images ornaments text blocks lines. furthermore larex classified text blocks next images marginalia whereas supposed running text. instead trying optimize parameter setup order cover occurring special cases often efficient simply correct respective annotations manually. translated alexander barclay fortunately frequent errors requiring individual adjustments easily correct. almost thirds applied corrections required single mouse click region resolve issue. furthermore close alternations done either single click double click followed selection desired region type. costlier corrections rare requiring fitting lines rectangles polygons text. layout analysis entire book total time expenditure hours minutes recorded including time required finding optimal parameter set. within first minutes scans segmented. subsequently number processed pages half hour rose last scans comparison student research assistant university library würzburg managed segment pages hours minutes using aletheia. worth mentioning student extensive experience segmenting early printed books aletheia. application ‘der heiligen leben’ larex also deployed book ‘der heiligen leben’ printed anton koberger nuremberg indetail description reul case study highly automated layout analysis incunabulum ‘der heiligen leben’ figure shows representative selection page layouts occurring book. slight alteration default setup necessary achieve appealing coarse segmentation. however point several headings i.e. lines consisting prominent letters often still connected even surrounded running text. detect separate segments line location segmentation functionality described utilized. additionally simple rules applied taking height heading line candidate area connected components consideration. moreover reading order determined page. finally segmentation results manually checked corrected necessary. evaluation shown accuracy decreased slightly however overall time expenditure needed segmentation reduced significantly using larex. automatic extraction finished less hours fully manual extraction lasted close hours. notably additional correction larex output within tool took almost hours improved accuracy insignificantly implies text/non-text segmentation worked well. discussion evaluation illustrated larex powerful tool segmentation early printed books interactivity flexibility. assessment required user actions illustrated larex enables user influence result heavily minimal effort without changing setup itself. example common error non-separation small text blocks like signature mark catchword running text. types errors would require considerable effort prevented adjusting expected region positions dilation kernel real spatial separation adjacent region. however easy correct mistakes manually. assessing optimizing trade-offs part future work. application ‘der heiligen leben’ showed functionality dramatically reduce required user effort slightly decreasing accuracy. experiment additional rules added within program code. generic approach larger region line attributes well rules utilizing required. moreover user able enter rules directly test setup change necessary. conclusion future work semi-automatic tool layout analysis region extraction proposed. larex uses parameters order flexible enough adjusted different book layouts. offers maximal value books extensive number pages whose layouts complex consist clearly spatially separated segments. manual corrections done simple time efficient way. larex offer almost pixel-perfect segmentation like aletheia. however experiments ‘der heiligen leben’ showed cases much faster slightly less accurate segmentation completely sufficient. despite larex already fully functional tool still many things could added refined improve first rule functionality extended described chapter offer user parameters make tool flexible. furthermore post-processing correction performance could improved providing user tools perform even finer grained segmentation needed. addition many smaller additions planned user-driven swash capital removal optimized line segmentation. latter could improve text sub-region detection even directly support ocr. however main goal remains improvement declarative specification rules based range extracted parameters image processing operations. enhance larex´ range functions considerably keeping simplicity challenging task future. opensource nature larex benefit anticipated feedback co-development global user group. ready-touse tool together example data available https//go.uniwue.de/larex. want highlight larex currently available fully stand-alone open-source tool active development significantly reduces time manual highquality page analysis historical books. shown usable non-specialists short training period. hopefully help break preprocessing barrier mass-ocr digital images. acknowledgments authors would like thank maximilian wehner maximilian nöth testing efforts marco dittrich martin gruner helpful remarks tool university library würzburg providing required scans. references springmann lüdeling historical printings application building diachronic corpora case study using ridges herbal corpus. arxiv e-prints. https//arxiv.org/abs/.. accepted digital humanities quarterly. viehhauser stolz automatic transcription handwritten medieval documents. int. conf. virtual systems multimedia ieee http//dx.doi.org/./vsmm... aletheia advanced document layout text ground-truthing system production enviroments. int. conf. document analysis recognition ieee http//dx.doi.org/./icdar... marquegnies crepin-leblond scribo module olena platform free software framework document image analysis. int. conf. document analysis recognition ieee http//dx.doi.org/./icdar... gupta gutierrez-osuna christy capitanu auvil grumbach furuta mandell automatic assessment quality historical documents. proceedings aaai conference artificial intelligence", "year": 2017}