{"title": "Learning and Real-time Classification of Hand-written Digits With  Spiking Neural Networks", "tag": ["stat.ML", "cs.AI", "cs.LG", "cs.NE"], "abstract": "We describe a novel spiking neural network (SNN) for automated, real-time handwritten digit classification and its implementation on a GP-GPU platform. Information processing within the network, from feature extraction to classification is implemented by mimicking the basic aspects of neuronal spike initiation and propagation in the brain. The feature extraction layer of the SNN uses fixed synaptic weight maps to extract the key features of the image and the classifier layer uses the recently developed NormAD approximate gradient descent based supervised learning algorithm for spiking neural networks to adjust the synaptic weights. On the standard MNIST database images of handwritten digits, our network achieves an accuracy of 99.80% on the training set and 98.06% on the test set, with nearly 7x fewer parameters compared to the state-of-the-art spiking networks. We further use this network in a GPU based user-interface system demonstrating real-time SNN simulation to infer digits written by different users. On a test set of 500 such images, this real-time platform achieves an accuracy exceeding 97% while making a prediction within an SNN emulation time of less than 100ms.", "text": "networks back-propagation errors train network thereafter converting spiking versions several supervised learning algorithms proposed train snns explicitly using time spikes neurons encode information derive appropriate weight update rules minimize distance desired spike times observed spike times network normalized approximate descent algorithm design system identify handwritten digits. normad algorithm shown superior convergence speed compared methods remote supervised method trained mnist database consisting training images test images highest accuracy mnist reported two-stage convolution neural network achieved accuracy test set. network contrast three layers learning synapses achieves accuracy mnist test dataset. paper organized follows. computational units network architecture described section section details network simulation divided among different cuda kernels. user-interface system image pre-processing steps explained section present results network simulation speed related optimizations section section concludes based system implementation study. basic units spiking neurons synapses interconnecting them. computational tractability leaky integrate model neurons evolution membrane potential described total input current resting potential model membrane capacitance leak conductance respectively membrane potential crosses threshold reset resting value remains value till neuron comes refractory period synapse weight connecting input neuron output neuron transforms incoming spikes automated real-time handwritten digit classiﬁcation implementation gp-gpu platform. information processing within network feature extraction classiﬁcation implemented mimicking basic aspects neuronal spike initiation propagation brain. feature extraction layer uses ﬁxed synaptic weight maps extract features image classiﬁer layer uses recently developed normad approximate gradient descent based supervised learning algorithm spiking neural networks adjust synaptic weights. standard mnist database images handwritten digits network achieves accuracy training test nearly fewer parameters compared state-of-the-art spiking networks. network based user-interface system demonstrating real-time simulation infer digits written different users. test images real-time platform achieves accuracy exceeding making prediction within emulation time less human brain computational marvel compared man-made systems ability learn execute highly complex cognitive tasks well energy efﬁciency. computational efﬁciency brain stems sparsely issued binary signals spikes encode process information. inspired this spiking neural networks proposed computational framework learning inference general purpose graphical processing units become ideal platform accelerated implementation large scale machine learning algorithms multiple based implementations simulating large snns targeting forward communication spikes large networks spiking neurons and/or local weight update based spike timing difference. contrast demonstrate highly optimized real time implementation scheme spike based supervised learning platforms framework real time inference digits captured different users touch-screen interface. ieee. personal material permitted. permission ieee must obtained uses current future media including reprinting/republishing material advertising promotional purposes creating collective works resale redistribution servers lists reuse copyrighted component work works. output layer generates spike train frequency close output neurons issue spikes presentation duration also hyper-parameter network effect network’s classiﬁcation ability discussed section layer also lateral inhibitory connections helps prevent non-label neurons spiking given input. output neuron highest number spikes declared winner classiﬁcation. synapses connecting hidden layer neurons output layer neurons modiﬁed course training using normad rule strength weights adjusted based error observed desired spike streams term denoting effect incoming spike kernels neuron’s membrane potential according relation implemented platform using cuda-c programming framework. divided streaming multiprocessors consists stream processors optimized execute math operations. cuda-c programming framework exploits hardware parallelism gpus launches jobs grid blocks mapped blocks divided multiple threads scheduled also called cuda core. since memory transfer local memory main bottlenecks network variables declared global memory implementation. simulation equations evaluated numerically iterative manner time step. here summed function represents incoming spike train double decaying exponentials represent synaptic kernel. values closely match biological time constants three-layered network hidden layer performs feature extraction output layer performs classiﬁcation network designed take input pixel mnist digit image. translate pixel value spike streams passing pixels currents layer neurons current applied neuron corresponding pixel value range obtained following linear relation scaling factor minimum current neuron generate spike spike streams weighted twelve synaptic weight maps priori chosen values generate equivalent current streams using equations spatial ﬁlter maps chosen detect various edges corners image. fig. pixel images mnist database converted spike trains presented duration weighted twelve synaptic weight maps resulting twelve current streams feed corresponding feature neurons. output neurons corresponding digit. weights fullyconnected feed-forward synapses output layer neurons adjusted using normad learning rule additionally output layer neurons also lateral inhibitory connections. fig. diagram showing different variables network computed time step signals across different layers. dimensions within brackets sizes variables respective cuda kernels. update synaptic weights parallel. evaluation total synaptic current norm performed using parallel reduction cuda inference testing phase calculate synaptic currents membrane potentials neurons layers determine spike times evaluate term weight update. used cuda based described previous section design user interface capture identify images digits written users real-time touchscreen interface. drawing application capture digit drawn user built using opencv image processing library captured image touch screen pre-processed using standard methods similar used generate mnist dataset images convert user drawn images required format grayscale image size pixels. network implemented nvidia cuda cores. preprocessing phase takes image passed trained inference. cuda process takes initialize network memory network simulation time depends presentation time time step interval fig. shows preprocessing steps used create input signal captured image fig. shows sample pre-processed images. image captured user ﬁrst binarized thresholding cropped remove excess background. image resized pixels along longer dimension maintaining aspect ratio. thereafter resized image placed bounding image’s center mass coincides center bounding box. finally image passed blurring ﬁlter create gray-scale images similar ones mnist dataset. trained network mnist training data-set consisting images epochs. network achieves error training test time step network simulated table lists state-of-theart networks mnist classiﬁcation problem. seen though networks fig. shows forward pass backward pass weight update training phase. image pixels read memory passed currents layer neurons presentation duration ﬁltering process involves convolution incoming spike kernels weight matrix computation parallelized across cuda kernels grid size threads. thread computes current hidden layer neurons indexed d-array timestep based following spatial convolution relation synaptic current neuron hidden layer neuron output layer given equation re-written evaluated iterative manner thereby avoiding evaluation expensive exponential difference synaptic current time previous spike times current computation time step synapse spawned cuda across kernels represent rising falling regions double exponential synaptic kernel. strength synapses hidden output layers initialized zero training. every time step error function output neuron calculated based difference observed desired spikes. next spikes originating neuron computed integration time step interval used inference instead mnist test error increases reduction processing time. hence touch screen based interface system simulate infer users’ digits. digit presented network simulated average wall clock time making real-time processing possible tested fig. mnist test-set accuracy function presentation time integration time step various stages classifying user’s input image pre-processing takes emulation completed real-time. network’s accuracy handwritten digits collected various users user-interface system. measure accuracy captured images mnist test-set slight loss performance compared mnist dataset attributed deviations statistical characteristics captured images compared mnist dataset. developed simple three-layer spiking neural network performs spike encoding feature extraction classiﬁcation. information processing learning within network performed entirely spike domain. approximately times lesser number synaptic weight parameters compared state spiking networks show approach achieves classiﬁcation accuracy exceeding training mnist database test set. trained network implemented cuda parallel computing platform also able successfully identify digits written users real-time demonstrating true generalization capability. non-local weight update rules platform. time step neuronal spike transmission synaptic current computation weight update calculation network executed parallel framework. using implementation demonstrated touch-screen based platform real-time classiﬁcation user-generated images. nageswaran conﬁgurable simulation environment efﬁcient simulation large-scale spiking neural networks graphics processors neural networks vol. krichmar coussy dutt large-scale spiking neural networks using neuromorphic hardware compatible models journal emerging technologies computing systems vol. anwani rajendran normad -normalized approximate descent based supervised learning rule spiking neurons international joint conference neural networks july kukreja thakor cone convexoptimized-synaptic efﬁcacies temporally precise spike mapping ieee transactions neural networks learning systems vol. april", "year": 2017}