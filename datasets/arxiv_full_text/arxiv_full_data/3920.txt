{"title": "Sub-Structural Niching in Non-Stationary Environments", "tag": ["cs.NE", "cs.AI"], "abstract": "Niching enables a genetic algorithm (GA) to maintain diversity in a population. It is particularly useful when the problem has multiple optima where the aim is to find all or as many as possible of these optima. When the fitness landscape of a problem changes overtime, the problem is called non--stationary, dynamic or time--variant problem. In these problems, niching can maintain useful solutions to respond quickly, reliably and accurately to a change in the environment. In this paper, we present a niching method that works on the problem substructures rather than the whole solution, therefore it has less space complexity than previously known niching mechanisms. We show that the method is responding accurately when environmental changes occur.", "text": "niching enables genetic algorithm maintain diversity population. particularly useful problem multiple optima many possible optima. ﬁtness landscape problem changes overtime problem called non–stationary dynamic time–variant problem. problems niching maintain useful solutions respond quickly reliably accurately change environment. paper present niching method works problem substructures rather whole solution therefore less space complexity previously known niching mechanisms. show method responding accurately environmental changes occur. systematic design genetic operators parameters challenging task literature. goldberg used holland’s notion building blocks propose design–decomposition theory designing effective genetic algorithms theory based correct identiﬁcation substructures problem ensure scalability efﬁcient problem solving. theory establishes principles effective supply exchange manipulation sub–structures ensure solve problems quickly reliably accurately. types called competent emphasize robust behavior many problems. wide range literature exists competent gas. literature encompasses three broad categories based mechanism used unfold substructures problem. ﬁrst category perturbation techniques work effective permutation genes belonging substructure closer other. methods fall category include messy fast messy gene expression messy linkage identiﬁcation nonlinearity check linkage identiﬁcation monotonicity detection dependency structure matrix driven linkage identiﬁcation limited probing second category linkage adaptation techniques promoters used enable genes move across chromosome; therefore facilitating emergence genes’ linkages third category probabilistic model building techniques probabilistic model used approximate dependency genes. models category include population-based incremental learning bivariate marginal distribution algorithm extended compact iterated distribution estimation algorithm bayesian optimization algorithm ﬁtness landscape problem changes overtime problem called non–stationary dynamic time–variant problem. date three main evolutionary approaches solve optimization problems changing environments. approaches diversity control either increasing diversity change occurs hyper–mutation method variable local search technique others maintaining high diversity redundancy random immigrants aging thermodynamical memory-based approaches using either implicit explicit memory; speciation multi–populations self-organizingscouts method niching diversity mechanism capable maintaining multiple optima simultaneously. early study goldberg horn demonstrated niching massive multimodality deception. mahfoud conducted detailed study niching stationary environments. despite many studies found niching particularly useful maintaining global optima problem number global optima grows number niches grow exponentially. paper propose niching mechanism based automatic identiﬁcation maintaining sub–structures non–stationary problems. incorporate bounded changes problem structure ﬁtness landscape. noted environment changes either unboundedly randomly average method outperform restarting solver scratch every time change occurs. dynamic version extended compact genetic algorithm called dynamic compact genetic algorithm show proposed method respond quickly reliably accurately changes environment. structure paper follows next section present dcga niching feasibility study test niching undertaken followed experiments discussions. harik proposed conjecture linkage learning equivalent good model learns structure underlying genotypes. focused probabilistic models learn linkage proposed ecga method using minimum description length principle compress good genotypes partitions shortest possible representations. measure tradeoff information contents population called compressed population complexity size model called model complexity constant related base chosen express logarithm number possible sequences variables belonging partition cardinality measures amount disorder associated within population decomposition scheme. paper assume mechanism detect change environment. detecting change environment done several ways including re–evaluating number previous solutions; monitoring statistical measures average ﬁtness population focus paper however detect change environment; therefore assume simply detect dynamic compact genetic algorithm works follows change detected population generated random last learnt model used bias re–start mechanism using selection crossover. method continues population. ecga model re-built scratch every generation. advantage recovering possible problems exist hill–climber learning model. original ecga dcga probabilities estimated using frequencies bits selection. motivation that selection population contains solutions good enough survive selection process. therefore approximating model selected individuals inherently utilizes ﬁtness information. however explicit ﬁtness information used problems arise magnitude ﬁtness values scaling method. traditional niching algorithms work level individual. example re-scaling ﬁtness individuals based similarity measures. types niching require niche radius deﬁnes threshold beyond individuals dissimilar. results niching method normally sensitive niche radius. smaller niche radius would increase number niches problem suitable multiple optima located closer other larger niche radius would looking ecga example variables model decomposed subsets subset represents variables tight together. problem building blocks global optima within building block number global optima problem exponentially large number require exponentially large number niches. however since problem decomposable maintain niches within building block separately. therefore need niches. obviously know advance problem decomposable not; power ecga similar models. problem decomposable decomposition identify niches level sub–structures save unnecessary niches. problem decomposable model return single partition niches identiﬁed overall solution back normal case. ecga learns decomposition adaptive manner therefore niches also learnt adaptively. propose types niches dcga dynamic environments. call schem schem respectively. sub-structure average ﬁtness schema calculated partition follows where ﬁtness value individual `fis ﬁtness value individual schema part otherwise. schema ﬁtness calculated schem using previous equation. schem schema ﬁtness zero original value less average population ﬁtness. theory good maintain schemas population. practice however maintaining schemas disturb convergence probabilistic model. addition selection average schemas disappear overtime. therefore choice largely depend problem hand. dcga algorithm modiﬁed schem schem calculating probabilities sampling schema based schema ﬁtness rather frequencies alone. re–scaling maintains schemas frequencies small average ﬁtness high. proceed experiments non–stationary environment need check performance method stationary function. function trap–. trap functions introduced ackley subsequently analyzed details others trap function deﬁned follows where high scalars number string order trap function. figure –left depicts trap– function experiment. ﬁrst question experiments whether ﬁrst generation niching niching method correctly samples actual ﬁtness function. deﬁne unitation function counts number chromosome. ensure building block exists proportion ﬁtness second question answer whether niching method propose sufﬁcient maintain relative proportion different schemas correctly. figure conﬁrms behavior niching method able maintain relative proportion different schemas. conclude previous experiment niching method successful maintaining schemas. results require additional experiments changing environment environment switches already maintained schemas. example environment switching schema schema global optima previous results sufﬁcient guarantee best performance changing environment. main reason environment manipulating good schemas. however happen schemas become good ones environment reversing deﬁnition good schemas. already know maintenance schemas slow convergence selection pressures average schemas eventually disappear. therefore construct experimental setup changing environment problem challenging problems niching. ﬁrst problem alters deﬁnition average schemas second problem manipulates boundaries building blocks repeated experiment times different seeds. results presented average performance runs. population size chosen large enough provide enough samples probabilistic model learn structure ﬁxed experiments. termination occurs algorithm reaches maximum number generations assume environment changes generations changes environment assumed cyclic tested cycles length generations respectively. crossover probability tournament size experiments based harik’s default values. initial experiments modiﬁed trap function order break symmetry attractors. section choose high symmetry utilized solver easily track optima. function visualized figure time even cycles optimal solution variables second attractor equal environment changes cycles solution optimal variables deceptive attractor alternatively number results dcga response rate almost edge building blocks. means algorithm requires average generations close optimal. looking cycle length becomes clearer algorithm takes generations converge. looking schem algorithm takes longer ﬁrst phase optimal solution. average takes generations call period warming phase model. niching method delays convergence stage. however warming stage completed response rate spontaneous; change occurs drop occurs method recovers instantly gets back original optima. comparing schem schem methods similar except warming–up stage schem uses average schemas only shorter time warm-up schem. experiment subjected environment severe change linkage point view. here linkage boundary changes well attractors. depicted figure environment switching trap– optima trap– optima moreover trap– deceptive attractor exists number trap– deceptive attractor exists number setup tricky sense that hill climber gets trapped deceptive attractor trap– behavior good trap–. however hill–climber won’t escape attractor environment switches back trap- since solution surrounded solutions lower qualities. setup tests also whether methods behaving similar hill–climber. figure shows performance dcga schem schem. varied string length step string length dividable example string length bits optimal solution trap therefore objective value alternate values optimal cycles. results figure similar previous experiment. dcga method responds effectively environmental changes schem schem respond faster. also warming period schem longer schem. paper presented niching method based automatic problem decomposition approach using competent gas. demonstrated innovative idea niching possible sub–structural level despite learning sub–structures adaptive noise. tested changes functions maintain linkage boundaries switches optima well drastic changes functions change optima simultaneously change linkage boundaries. cases niching sub–structural level robust mechanism changing environments. work sponsored force ofﬁce scientiﬁc research force materiel command usaf grant f--- technology research education commercialization center uiuc ncsa funded ofﬁce naval research national science foundation grant dmr-- grant dept. energy grant defg-er university south wales scheme australian research council centre complex systems grant number ceo.", "year": 2005}