{"title": "Bethe-ADMM for Tree Decomposition based Parallel MAP Inference", "tag": ["cs.AI", "cs.LG", "stat.ML"], "abstract": "We consider the problem of maximum a posteriori (MAP) inference in discrete graphical models. We present a parallel MAP inference algorithm called Bethe-ADMM based on two ideas: tree-decomposition of the graph and the alternating direction method of multipliers (ADMM). However, unlike the standard ADMM, we use an inexact ADMM augmented with a Bethe-divergence based proximal function, which makes each subproblem in ADMM easy to solve in parallel using the sum-product algorithm. We rigorously prove global convergence of Bethe-ADMM. The proposed algorithm is extensively evaluated on both synthetic and real datasets to illustrate its effectiveness. Further, the parallel Bethe-ADMM is shown to scale almost linearly with increasing number of cores.", "text": "consider problem maximum posteriori inference discrete graphical models. present parallel inference algorithm called bethe-admm based ideas tree-decomposition graph alternating direction method multipliers however unlike standard admm inexact admm augmented bethe-divergence based proximal function makes subproblem admm easy solve parallel using sum-product algorithm. rigorously prove global convergence bethe-admm. proposed algorithm extensively evaluated synthetic real datasets illustrate effectiveness. further parallel bethe-admm shown scale almost linearly increasing number cores. given discrete graphical model known structure parameters problem ﬁnding likely conﬁguration states known maximum posteriori inference problem existing approaches solving inference problems graphs cycles often consider graph-based linear programming relaxation integer program solve graph-based relaxation problem main classes algorithms proposed. ﬁrst class algorithms dual algorithms uses dual decomposition solves dual problem. main approaches solving dual problems block coordinate descent sub-gradient algorithms coordinate descent algorithms empirically faster however reach dual optimum since dual problem strictly convex. recent advances coordinate descent algorithms perform treeblock updates sub-gradient methods guaranteed converge global optimum slow practice. detailed discussion dual algorithms refer readers second class algorithms primal algorithms like proximal algorithm advantage algorithms choose different bregman divergences proximal functions take graph structure account. however proximal algorithms closed form update iteration general thus lead double-loop algorithms. solving inference large scale graphical models becoming increasingly important recent work parallel inference algorithms based alternating direction method multipliers proposed. primal-dual algorithm admm combines advantage dual decomposition method multipliers guaranteed converge globally rate even non-smooth problems admm also successfully used solve large scale problem distributed manner design efﬁcient parallel algorithms based admm problem decomposition consider tradeoff between number subproblems size subproblem. several simple subproblems makes solving problem easy maintain numerous dual variables achieve consensus. hand subproblems makes number constraints small subproblem needs elaborate often iterative algorithm yielding double-loop. existing admm based algorithms inference decompose problem several simple subproblems often based single edges local factors subproblems easy solve. however enforce consensus among shared variables methods dual variables proportional number edges local factors make convergence slow large graphs. overcome limitations existing admm methods inference propose novel parallel algorithm based tree decomposition. individual trees need spanning thus includes edge decomposition spanning tree decomposition special cases. compared edge decomposition tree decomposition ﬂexibility increasing size subproblems reducing number subproblems considering graph structure. compared tree block coordinate descent works tree time algorithm updates trees parallel. note tree block coordinate descent algorithm updates disjoint trees within forest parallel whereas updates consider overlapping trees parallel. however tree decomposition raises problem subproblems cannot solved efﬁciently admm framework requires iterative algorithm yielding double-loop algorithm efﬁciently solve subproblem tree propose novel inexact admm algorithm called bethe-admm uses bregman divergence induced bethe entropy tree instead standard quadratic divergence proximal function. resulting subproblems tree solved exactly linear time using sum-product algorithm however proof convergence standard admm apply bethe-admm. prove global convergence bethe-admm establish convergence rate standard admm overall bethe-admm overcomes limitations existing admm based inference algorithms provides ﬂexibility required designing efﬁcient parallel algorithm through tree decomposition take graph structure account greatly reduce number variables participating consensus bethe-admm algorithm yields efﬁcient updates subproblem. compare performance bethe-admm existing methods synthetic real datasets illustrate four aspects. first bethe-admm faster existing primal methods terms convergence. second bethe-admm competitive existing dual methods terms quality solutions obtained. third certain graphs tree decomposition leads faster convergence edge decomposition bethe-admm. forth parallel bethe-admm based open gets substantial speedups sequential bethe-admm. particular show almost linear speed-ups increasing number cores graph several million nodes. rest paper organized follows review inference problem section section introduce bethe-admm algorithm prove global convergence. discuss empirical evaluation section conclude section pairwise deﬁned undirected graph vertex edge set. node random variable associated take value discrete space concatenating random variables obtain dimensional random vector {xu|u assume distribution markov random field meaning factors according structure undirected graph follows denoting nodewise edgewise potential functions respectively distribution takes form complexity depends critically structure underlying graph. tree structured graph inference problem solved efﬁciently max-product algorithm however arbitrary graph inference algorithm usually computationally intractable. intractability motivates development algorithms solve inference problem approximately. paper focus linear programming relaxation method relaxation inference problem deﬁned pseudomarginals non-negative normalized locally consistent edge included least subgraph also introduce local variable pseudomarginal deﬁned subgraph denote potentials subgraph denote components global variable belong subgraph note since tree-structured subgraph always lies newly formulated optimization problem impose consensus constraints shared nodes edges. ease exposition simply equality constraint enforce consensus. optimization problem formulate based graph decomposition follows positive constant associated subgraph. consensus constraints make sure pseudomarginals agree shared components across tree-structured subgraphs. besides consensus constraints also impose feasibility constraints guarantee that subgraph local variable lies constraints satisﬁed global variable guaranteed assuming constraints satisﬁed. easy verify that long satisﬁed speciﬁc choice change problem. binary indicator function positive e.g. simple approach obtaining potential recent years admm used solve large scale inference problems. solve using admm need split nodes or/and edges introduce equality constraints enforce consensus among shared variables. algorithm adopts edge decomposition introduces equality constraints shared nodes. degree node number equality dik) approximately equal binary pairwise mrfs subproblems admm closed-form solutions. multi-valued mrfs however ﬁrst binarize mrfs introduces additional variables nodes |e|k variables edges. binarization process increases number factors complexity solving subproblem increases note recent work active method employed solve quadratic problem arbitrary factors. generalized variant require binarization presented refer algorithm primal admm baseline section although subproblem primal admm efﬁciently solved number equality constraints dual variables admm also used solve dual refer algorithm dual admm algorithm baseline section dual admm works multi-valued mrfs linear time algorithm subproblem number equality constraint ﬁrst show solve using admm based tree decomposition. resulting algorithm doubleloop algorithm since updates closed form solutions. introduce bethe-admm algorithm every subproblem solved exactly efﬁciently analyze convergence properties. ﬁrst show decompose series subproblems. decompose graph overlapping subgraphs rewrite optimization problem consensus constraints enforce pseudomarginals subgraphs agree throughout paper focus tree-structured decompositions. speciﬁc collection subgraphs satisﬁes criteria subgraph tree-structured graph node however discussed previous section quadratic problem generally difﬁcult tree-structured graph thus conventional inexact admm lead efﬁcient update taking tree structure account propose inexact minimization augmented bregman divergence induced bethe entropy. show resulting proximal problem solved exactly efﬁciently using sumproduct algorithm prove global convergence bethe-admm algorithm section tree based admm equality constraints required shared nodes edges. assume shared nodes shared node copies shared edges shared edge copies. total number equality constraints special case tree dei= composition edge decomposition nodes edge decomposition number shared. approximately equal similar general number shared nodes edges tree decomposition much smaller edge decomposition. smaller number equality constraints usually lead faster convergence achieving consensus. problem turns whether updates solved efﬁciently analyze below updating since unconstrained optimization problem objective function decomposes component-wisely taking derivatives setting zero yield solution. particular subgraphs contain node node components have well known sum-product algorithm efﬁciently computes marginal distributions tree structured graph. also shown sum-product algorithm solves following optimization problem tree constant updating need solve quadratic optimization problem tree-structured subgraph. unfortunately close-form solution general. possible approach similar proximal algorithm ﬁrst obtain solution unconstrained problem project adopt cyclic bregman projection algorithm solve algorithm becomes double-loop algorithm i.e. cyclic projection algorithm projects solution individual constraint convergence projection algorithm iterative. refer algorithm exact admm baseline section proof tree-structured distribution tree |vτ| |eτ| pseudomarginal total components marginal distribution. particular marginal distributions corresponding node given figure results bethe-admm exact admm primal admm proximal algorithms simulation datasets. figure plots value decoded integer solution function runtime figure plot relative error respect optimal objective function runtime bethe-admm exact admm primal admm bethe-admm converges faster primal based algorithms. proof component augment following component otherwise corresponding components respectively. rewrite following equivalent component-wise form figure bethe-admm mplp sufﬁciently long i.e. iterations. dual objective value plotted function runtime mplp algorithm gets stuck reach global optimum. bethe-admm. experiments section using sequential updates. illustrate scalability algorithm parallel bethe-admm multicore machine show linear speedup section compare bethe-admm algorithm proximal algorithm exact admm algorithm primal admm algorithm proximal algorithm choose bregman divergence kldivergences across node edge distributions. following methodology terminate inner loop maximum constraint violation less similarly applying exact admm algorithm terminate loop solving maximum constraint violation less exact admm bethe-admm algorithm ‘edge decomposition’ simply edge graph |e|. obtain integer solution node-based rounding show experimental results synthetic datasets. underlying graph dataset three dimensional m×n×t grid. generate potentials follows nodewise potentials random numbers edgewise potentials according potts model i.e. otherwise. choose randomly edgewise potentials penalize disagreement penalize agreement generate datasets using varying figure shows plots synthetic dataset algorithms similar performances simulation datasets. observe algorithms converge optimal value plot relative error respect optimal value datasets figure overall bethe-admm algorithm converges faster primal algorithms. observe proximal algorithm exact admm algorithm slowest sequential projection step. terms decoded integer solution bethe-admm exact admm proximal algorithm similar performances. although present bethe-admm context pairwise mrfs easily generalized handle mrfs general factors. general view dependency graph factor graph bipartite graph disjoint variable nodes factor nodes edges connecting variable node factor node. distribution takes form decompose relaxed subproblems deﬁned factor trees impose equality constraints enforce consistency shared variables among subproblems. subproblem solved efﬁciently using sum-product algorithm factor trees betheadmm algorithm general mrfs bears similar structure pairwise mrfs. compare bethe-admm algorithm several state-of-the-art inference algorithms. show comparison results primal based inference algorithms section dual based inference algorithm section respectively. also show section tree decomposition beneﬁts performance figure results bethe-admm mplp dual admm algorithms protein design datasets. figure plots value decoded integer solution function runtime figure plot dual value function runtime dual admm bethe-admm bethe-admm dual admm similar performance terms convergence. three methods comparable performances decoded integer solution. section compare bethe-admm algorithm mplp algorithm dual admm algorithm conduct experiments protein design problems problems given structure goal sequence amino-acids stable structure. problems modeled nodewise pairwise factors posed ﬁnding assignment given model. demanding setting problem hundreds variables possible states average. algorithms problems different sizes i.e. mplp dual admm algorithm plot value integer programming problem dual.. bethe-admm algorithm plot value dual integer programming problem note although bethe-admm dual admm different duals optimal values same. bethe-admm based edge decomposition. figure shows result. observe mplp algorithm usually converges faster since coordinate ascent algorithm stop prematurely yield suboptimal solutions. figure shows dataset mplp algorithm converges suboptimal solution. note convergence time bethe-adm dual similar. three algorithms similar performance terms decoded integer solution. previous experiments ‘edge decomposition’ bethe-admm algorithm. since algorithm work tree-structured graph decomposition want empirically study decomposition affects performance bethe-admm algorithm. following experiments show utilize graph figure simulation dataset nodes sampled tree blue nodes sampled tree sampled nodes connected cross-tree edges tree nodes edges still form tree denoted solid lines. augmented tree tree-structured subgraph bethe-admm. conduct experiments synthetic datasets. generate mrfs whose dependency graphs consist several tree-structured graphs cross-tree edges introduce cycles. speciﬁc ﬁrst generate binary tree structured mrfs nodes. ordered pair tree-structured mrfs uniformly sample nodes replacement uniformly sample nodes without replacement resulting node sets dij. connect nodes denoting eij. repeat process every pair trees. construction graph consisting tree nodes edges still tree. augmented trees tree-structured subgraphs bethe-admm algorithm. figure illustrates graph generation tree decomposition process. simple calculation shows particular tree decomposition equality constraints maintained edge decomposition maintained. graph dominant tree structure tree decomposition leads much less number equality constraints. figure results bethe-admm algorithms based tree edge decomposition three simulation datasets maximum constraint violation plotted function runtime algorithms tree based bethe-admm algorithm better performance edge based bethe-admm tree structure dominant experiments bethe-admm algorithm based tree edge decomposition different values keeping ﬁxed. easy tree structure becomes dominant becomes larger. since observe algorithms ﬁrst converge optimal value equality constraints gradually satisﬁed evaluate performance computing maximum constraint violation iteration algorithms. faster constraints satisﬁed better algorithm results shown figure tree structure obvious algorithms similar performances. increase tree structure becomes dominant difference algorithms pronounced. attribute superior performance fact tree decomposition case much fewer number equality constraints imposed subproblem tree solved efﬁciently using sum-product algorithm. dataset used section climate research unit precipitation dataset monthly precipitation years dataset high gridded spatial resolution includes precipitation land. goal detect major droughts based precipitation. formulate problem estimating likely conﬁguration binary node represents location. underlying graph three dimensional grid nodes node possible states normal. bethe-admm algorithm dataset detect droughts based integer solution node-based rounding. details experiment refer readers algorithm successfully detects nearly major droughts last century. also examine bethe-admm algorithm scales dataset million variables. open code different numpropose provably convergent inference algorithm large scale mrfs. algorithm based ‘tree decomposition’ idea inference literature alternating direction method optimization literature. algorithm solves tree structured subproblems efﬁciently sum-product algorithm inherently parallel. empirical results show algorithm sequential version compares favorably existing approximate inference algorithm terms running time accuracy. experimental results large datasets demonstrate parallel version scales almost linearly number cores multi-core setting. research supported part career grant iis- grants iis- iis-. authors would like thank stefan liess peter snyder helpful discussion experiment. authors grateful technical support university minnesota supercomputing institute meshi globerson. alternating direction method dual relaxation. proceedings european conference machine learning principles practice knowledge discovery databases mitchell carter jones hulme new. comprehensive high-resolution grids monthly climate europe globe observed record scenarios tyndall centre climate change research ravikumar agarwal wainwright. messagepassing graph-structured linear programs proximal methods rounding schemes. journal machine learning research sontag jaakkola. tree block coordinate descent graphical models. proceedings twelfth international conference artiﬁcial intelligence statistics.", "year": 2013}