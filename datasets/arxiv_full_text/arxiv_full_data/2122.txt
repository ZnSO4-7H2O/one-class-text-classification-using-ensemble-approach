{"title": "Top-N Recommender System via Matrix Completion", "tag": ["cs.IR", "cs.AI", "cs.LG", "stat.ML"], "abstract": "Top-N recommender systems have been investigated widely both in industry and academia. However, the recommendation quality is far from satisfactory. In this paper, we propose a simple yet promising algorithm. We fill the user-item matrix based on a low-rank assumption and simultaneously keep the original information. To do that, a nonconvex rank relaxation rather than the nuclear norm is adopted to provide a better rank approximation and an efficient optimization strategy is designed. A comprehensive set of experiments on real datasets demonstrates that our method pushes the accuracy of Top-N recommendation to a new level.", "text": "model-based methods build model generate recommendations. instance widely studied matrix factorization methods employ user-item similarities latent space extract user-item purchase patterns. pure singular-value-decomposition-based matrix factorization method characterizes users items principal singular vectors user-item matrix. weighted regularized matrix factorization method applies weighting matrix differentiate contributions observed purchase/rating activities unobserved ones. third category methods rely ranking/retrieval criteria. here top-n recommendation treated ranking problem. bayesian personalized ranking criterion maximum posterior estimator bayesian analysis used measure difference rankings user-purchased items rest items. combined itemknn method common drawback approaches lies recommendation quality. recently novel top-n recommendation method slim proposed. user-item matrix size ﬁrst learns sparse aggregation coefﬁcient matrix rn×n encoding item linear combination items solving l-norm l-norm regularized optimization problem. entry describes similarity item slim obtained better recommendation accuracy state-of-the-art methods. however slim capture relations items co-purchased/co-rated least user intrinsic characteristic recommender systems sparsity fact users typically rate small portion available items. top-n recommender systems investigated widely industry academia. however recommendation quality satisfactory. paper propose simple promising algorithm. user-item matrix based low-rank assumption simultaneously keep original information. that nonconvex rank relaxation rather nuclear norm adopted provide better rank approximation efﬁcient optimization strategy designed. comprehensive experiments real datasets demonstrates method pushes accuracy top-n recommendation level. growth online markets made increasingly difﬁcult people items interesting useful them. top-n recommender systems widely adopted majority e-commerce sites recommend size-n ranked lists items best customers’ personal tastes special needs works estimating consumer’s response items based historical information suggesting consumer novel items predicted response high. general historical information obtained explicitly example ratings/reviews implicitly purchase history access patterns past decade variety approaches proposed top-n recommender systems roughly divided three categories neighborhood-based collaborative ﬁltering model-based collaborative ﬁltering ranking-based methods. general principle neighborhood-based methods identify similarities among users/items example item-based k-nearest-neighbor collaborative ﬁltering methods ﬁrst identify similar items items consumer purchased recommend topn items based similar items. however suffer accuracy since employ item characteristics. copyright association advancement artiﬁcial intelligence rights reserved. positive semideﬁnite matrix guaranteed general also required small leads signiﬁcantly biased approximation small singular values. compared nonconvex relaxations literature formulation enjoys simplicity efﬁcacy. considering user-item matrix often nonnegative nonnegative constraint i.e. element-wise positivity easy interpretation representation. orthogonal projection operator onto span matrices vanishing outside notice nonconvex optimization problem easy solve general. develop effective optimization strategy based augmented lagrangian multiplier method. introducing auxiliary variable following equivalent form features factor model rank. obtaining recommendation score user un-purchased/-rated item ˆxij i-th j-th column thus lorslim model relations items even sparse datasets thus improves performance. boost accuracy top-n recommender systems ﬁrst missing ratings solving nonconvex optimization problem based assumption user’ ratings affected factors resulting rating matrix rank make top-n recommendation. different previous approaches middle values rating ranges average user item ratings commonly utilized missing ratings reliable approach utilizes content information example missing ratings provided autonomous agents called ﬁlterbots rate items based speciﬁc characteristics content; rank matrix factorization approach seeks approximate multiplication rank factors experimental results demonstrate superior recommendation quality approach. inherent computational complexity rank problems non-convex rank function often relaxed convex surrogate i.e. nuclear norm however substitution always valid lead biased solution matrix completion nuclear norm regularization signiﬁcantly hurt entries matrix sampled non-uniformly nonconvex rank approximation received signiﬁcant attention thus log-determinant function approximate rank function design effective optimization algorithm. incomplete user-item purchases/ratings matrix denoted size positive value user ever purchased/rated item otherwise goal reconstruct full matrix supposed low-rank. consider following matrix completion problem locations corresponding observed entries rn×n identity matrix. easy show logdet/ i.e. logdet tighter rank approximation function nuclear norm. logdet also helps mitigate another inherent disadvantage nuclear norm i.e. imbalanced penalization different singular values previously logdet suggested restrict rank users items trns columns show number users number items number transactions respectively dataset. rsize csize columns average number ratings user item respectively dataset. column corresponding density shows density dataset ratings column rating range dataset granularity datasets evaluate performance method different real datasets whose characteristics summarized table datasets different sources different sparsity levels. broadly categorized classes. ﬁrst class includes delicious lastfm three datasets implicit feedback i.e. represented binary matrices. particular delicious derived bookmarking tagging information users delicious social bookmarking system bookmarked least users. lastfm corresponds music artist listening information obtained last.fm online music system music artist listened least users user listened least artists. subset book-crossing dataset implicit interactions contained book read least users. second class contains netﬂix yahoo. datasets contain multi-value ratings. speciﬁcally dataset corresponds movie ratings subset movielens research project. netﬂix subset data extracted netﬂix prize dataset user rated least movies. yahoo dataset subset obtained yahoomovies user ratings. dataset user rated least movies movie rated least users. evaluation methodology employ -fold cross-validation demonstrate efﬁcacy proposed approach. datasets split training test sets randomly selecting non-zero entries user part http//www.delicious.com http//www.last.fm http//www.informatik.uni-freiburg.de/ cziegler/bx/ http//grouplens.org/datasets/movielens/ http//www.netﬂixprize.com/ http//webscope.sandbox.yahoo.com/catalog.php?datatype=r parameters method follows itemknn number neighbors puresvd number singular values number iterations svd; wrmf dimension latent space weight purchases; bprknn learning rate regularization parameter bprmf dimension latent space learning rate; slim l-norm regularization parameter l-norm regularization parameter lorslim l-norm regularization parameter l-norm regularization parameter nuclear norm regularization parameter auxiliary parameter auxiliary parameters table bold numbers best performance terms arhr dataset. position test item ranked topn list i-th hit. hits occur earlier ranked list weighted higher occur later thus arhr measures strongly item recommended. highest value arhr equal hitrate occurs hits occur ﬁrst position whereas lowest value equal hr/n hits occur last position list. comparison algorithms compare performance proposed method seven state-of-the-art top-n recommendation algorithms including item neighborhood-based collaborative ﬁltering method itemknn mf-based methods puresvd wrmf ranking/retrieval criteria based methods bprmf bprknn slim lorslim test set. training used train model size-n ranked list recommended items user generated. evaluation model conducted comparing recommendation list user item user test set. following results reported paper equal top-n recommendation like ranking problem rather prediction task. recommendation quality measured hit-rate average reciprocal hitrank directly measure performance model ground truth data i.e. users already provided feedback for. pointed direct meaningful measures top-n recommendation scenarios. deﬁned hits number users whose item test recommended size-n recommendation list users total number users. value indicates algorithm able always recommend hidden item whereas value denotes algorithm able recommend hidden items. drawback treats hits equally regardless appear top-n list. arhr addresses rewarding based occurs topforms better methods across datasets speciﬁcally terms method outperforms itemknn puresvd wrmf bprknn bprmf slim lorslim average respectively datasets; respect arhr itemknn puresvd wrmf bprknn bprmf slim lorslim improved average respectively. better others except lastfm among rest methods. bprknn performs best among remaining methods average. among three mf-based models bprmf wrmf similar performance datasets much better puresvd datasets except lastfm mlk. recommendation different top-n figure shows performance achieved various methods different values datasets. demonstrates proposed method outperforms algorithms scenarios. more evident difference performance approach matrix reconstruction compare method lorslim looking reconstruct user-item matrix. take example whose density mean non-zero elements reconstructed matrix lorslim density whose nonzero values mean non-zero entries recovers mean value demonstrates lots information lost. contrary approach fully preserves original information thanks constraint condition model. method recovers zero values mean much higher suggests method recovers better lorslim. explain superior performance method. although model parameter-free introduce auxiliary parameter optimization. alternating direction method multipliers ﬁxed easy choose optimal value balance computational cost. thus dynamical increasing rate preferred real applications. controls convergence speed. larger fewer iterations obtain convergence meanmay lose precision. show effects different initializations dataset delicious figure illustrates experimental results sensitive them reasonable since auxiliary parameters controlling mainly convergence speed. contrast lorslim needs tune four parameters time consuming easy operate. paper seek low-rank matrix thus need principal singular vectors/values. packages like propack compute rank cost advantageous fact algorithm much faster lorslim. among datasets lastfm datasets smallest largest sizes respectively. method needs respectively datasets lorslim takes time measured machine intel xeon .ghz cores memory running ubuntu matlab furthermore without losing much accuracy speed algorithm considerably. veriﬁed figure shows computational time method delicious varying paper present matrix completion based method top-n recommendation problem. proposed method recovers user-item matrix solving rank minimization problem. better approximate rank nonconvex function applied. conduct comprehensive experiments multiple datasets compare performance state-of-the-art top-n recommendation algorithms. turns algorithm generates high quality recommendations improves performance rest methods considerably. makes approach usable real-world scenarios.", "year": 2016}