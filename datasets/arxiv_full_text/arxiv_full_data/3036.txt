{"title": "Fine-tuning deep CNN models on specific MS COCO categories", "tag": ["cs.CV", "cs.AI", "cs.LG"], "abstract": "Fine-tuning of a deep convolutional neural network (CNN) is often desired. This paper provides an overview of our publicly available py-faster-rcnn-ft software library that can be used to fine-tune the VGG_CNN_M_1024 model on custom subsets of the Microsoft Common Objects in Context (MS COCO) dataset. For example, we improved the procedure so that the user does not have to look for suitable image files in the dataset by hand which can then be used in the demo program. Our implementation randomly selects images that contain at least one object of the categories on which the model is fine-tuned.", "text": "abstract fine-tuning deep convolutional neural network desired. paper provides overview publicly available py-faster-rcnn- soware library used ne-tune model custom subsets microso common objects context dataset. example improved procedure user look suitable image dataset hand used demo program. implementation randomly selects images contain least object categories model ne-tuned. introduction understanding visual scenes important goal many articial intelligence applications knowledge acquisition anomaly detection intelligent user interfaces central parts. example human-robot interaction industry factories medical decision support scene understanding involves numerous tasks including localizing objects images contextual reasoning objects precise localization objects image recognition central part technical architectures applications. order provide state-of-the-art image classiers chateld trained model imagenet ilsvrc- dataset contains training images categorized object classes. girshick showed ne-tuning model target dataset improves mean average precision chateld could verify result ne-tuning model approach fork py-faster-rcnn uses approximate joint training region proposal network trained jointly fast r-cnn network resulting overall speed improvements. py-faster-rcnn-ft allows convenient fine-tuning model specic object classes coco dataset found cumbersome user needed enter source code several locations. furthermore necessity user inputs error-prone could cause incorrect states. soware freely available gplv license github repository; developer feedback much appreciated. related work background number cases ne-tuning network desired. environment strongly inuence best scores alternatively evaluation followed consistence seeking procedure exploits network categorization training samples produced demonstrated cases retraining network concerns samples ne-tuning desired r-cnn works bounding boxes part background. background dependence strong easily mislead categorization shown figure turn dierent environments need ne-tuning. faster r-cnn gains speed sharing full image convoluhps//github.com/rbgirshick/py-faster-rcnn hps//www.gnu.org/licenses/gpl-..en.html hps//github.com/dfki-interactive-machine-learning/py-faster-rcnn- mitigate risk implemented possibility user enter category already existing conguration keyword ids. necessary changes done automatically implementation. eectively reduces erroneous user inputs simplies setup workow demo image selection demo program tools/demo.py important tool visualizing performance trained ne-tuned model. original version user able choose images dataset manually apply model predicted bounding regions labels ploed overlay corresponding image. improved procedure user manually search suitable image dataset subsequently used demo program. implementation randomly selects images contain least object categories model ne-tuned. bugxes described section user ne-tune subset classes lling conguration training stage soware creates list training samples containing annotation information. original soware distinguish data samples selected unselected categories. leads creation many arrays invalid data causing crashes false results. lib/datasets/coco.py lter invalid data make sure samples chosen categories used ne-tuning step. usage allow quick setup time rapid results provide information regarding installation soware ne-tune model well verifying performance newly trained model. explained following subsections. complete step-by-step installation instruction usage listings available readme accompanying soware library. requirements suggest installation ubuntu -bit operating system allows easy quick installation minimal compiling addional sources. computer least supporting cuda required operation py-faster-rcnn-ft. single nvidia found sucient experiments model. result time required region proposals almost negligible compared rest computations. solution high interest seen special version transfer learning. implementation original py-faster-rcnn soware works model trained dataset containing image corresponding annotations. model able detect classify objects input images several classes. work pre-trained model able dierentiate classes relating ilsvrc- challenge. improved original soware explained rest paper order able ne-tune specic image dataset categories. prototxt file managing fine-tuning model subset categories requires changes aspects architecture neural network applied retraining process. perform ne-tuning several parameters corresponding train.prototxt test.prototxt need continuously changed depending chosen subset classes ne-tuning perform manual change parameters leads errors implemented python wrapper able read manipulate prototxt les. implementation wrapper performs prototxt manipulation automatically background coco category training process user decide categories ne-tuning performed. coco dataset manages classes so-called category wrote program extracts classes coco dataset along ids. program available data/scripts/mscoco categories.py helps user quickly decide correct category ids. hps//github.com/dfki-interactive-machine-learning/py-faster-rcnn/blob/master/readme.md hp//releases.ubuntu.com/zesty/ hps//developer.nvidia.com/cuda-downloads seings. canonical partners ticked soware well. py-faster-rcnn-ft requires additional soware fresh installation however easily installed using command line tool root shell required able perform installation following packages python-pip python-opencv libboost-dev-all libgoogle-glog-dev libgflags-dev libsnappy-dev libatlas-dev libatlas-base libatlas-base-dev libhdf-serial-dev liblmdb-dev libleveldb-dev libopencv-dev g++- nvidia-cuda-toolkit cython python-numpy python-setuptools python-protobuf python-skimage python-tk python-yaml. python package easydict installed pip. furthermore cudnn needs installed requires registration nvidia. note distribution version protobuf used compatibility cuda/cudnn needs cloned repository compiled user gcc-. compilation cython modules pycae provided repository straightforward. trained models datasets need downloaded separately suitable github repository demo successful installation veried running provided demo.py tools subfolder. demo uses coco dataset needs downloaded along already netuned model classes person car. demo program randomly selects images tries classify content display result fine-tuning specic classes order ne-tune model specic categories coco dataset respective category specied experiments/cfgs/faster rcnn endend.yml conguration possible listed running mscoco categories.py inside data folder. argument denotes system. training take hours default recommended iteration seing nvidia graphics card. following training automatic test started model coco minival validation test dataset comprised images. defaults changed editing faster rcnn endend.sh script. informal evaluation provided caemodel ne-tuned categories person car. tested minival dataset iou= person car. model trained coco categories results person car. early results indicate improvement average precision ne-tuning performed subset target dataset. future work py-faster-rcnn-ft limited coco dataset would like able ne-tune using datasets could automatically generated using pre-trained model i.e. could output google images dataset instances verify beforehand. techniques could used search relevant images based category. references michael barz peter poller daniel sonntag. evaluating remote head-worn trackers multi-modal speech-based hri. companion acm/ieee international conference human-robot interaction. acm/ieee international conference human-robot interaction march vienna austria bilge mutlu manfred tscheligi astrid weiss james young hps//doi.org/./. chateld karen simonyan andrea vedaldi andrew zisserman. return devil details delving deep convolutional nets. british machine vision conference hps//doi.org/./c.. arxiv. mark everingham gool christopher williams john winn andrew zisserman. pascal visual object classes challenge. international journal computer vision ross girshick donahue trevor darrell jitendra malik. rich feature hierarchies accurate object detection semantic segmentation. proceedings ieee conference computer vision paern recognition hps//doi.org/./cvpr.. arxiv. tsung michael maire serge belongie james hays pietro perona deva ramanan piotr doll´ar lawrence zitnick. microso coco common objects context. european conference computer vision hps//doi.org/./---- arxiv. andr´as l˝orincz m´at´e cs´akv´ari ´aron f´othi ´ad´am milacski andr´as s´ark´any zolt´an t˝os´er. towards reasoning based representations deep consistence seeking machine. cognitive systems research andr´as l˝orincz ´aron f´othi bryar rahman viktor varga. deep gestalt reasoning model interpreting electrophysiological signals related cognition. mutual benets cognitive computer vision workshop amino borji r.t. pramod kanan iccv mbcc. alexander prange michael barz daniel sonntag. speech-based medical decision support using deep neural network proceedings twenty-sixth international joint conference articial intelligence. ijcai hps//doi.org/./ijcai./ shaoqing kaiming ross girshick jian sun. faster r-cnn towards real-time object detection region proposal networks. advances neural information processing systems olga russakovsky deng jonathan krause sanjeev satheesh sean zhiheng huang andrej karpathy aditya khosla michael bernstein alexander berg fei-fei. imagenet large scale visual recognition challenge. international journal computer vision hps//doi.org/./s---y arxiv. daniel sonntag sonja zillner patrick smagt andr´as l˝orincz. overview smart factories project deep learning knowledge acquisition anomaly detection intelligent user interfaces. springer international publishing cham hps//doi.org/./---- faster_rcnn_endend/test.prototxt --net data/ faster_rcnn_models/ vgg_cnn_m__faster_rcnn_iter_.caffemodel -imdb coco__val --cfg experiments/cfgs/ faster_rcnn_endend.yml example tests specied cae-model coco validation image dateset consisting images hence testing take longer. case smaller validation dataset used --imdb coco minival specied.", "year": 2017}