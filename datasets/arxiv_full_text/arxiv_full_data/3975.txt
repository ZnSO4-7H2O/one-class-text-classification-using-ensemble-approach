{"title": "Do not Choose Representation just Change: An Experimental Study in  States based EA", "tag": ["cs.NE", "cs.AI"], "abstract": "Our aim in this paper is to analyse the phenotypic effects (evolvability) of diverse coding conversion operators in an instance of the states based evolutionary algorithm (SEA). Since the representation of solutions or the selection of the best encoding during the optimization process has been proved to be very important for the efficiency of evolutionary algorithms (EAs), we will discuss a strategy of coupling more than one representation and different procedures of conversion from one coding to another during the search. Elsewhere, some EAs try to use multiple representations (SM-GA, SEA, etc.) in intention to benefit from the characteristics of each of them. In spite of those results, this paper shows that the change of the representation is also a crucial approach to take into consideration while attempting to increase the performances of such EAs. As a demonstrative example, we use a two states SEA (2-SEA) which has two identical search spaces but different coding conversion operators. The results show that the way of changing from one coding to another and not only the choice of the best representation nor the representation itself is very advantageous and must be taken into account in order to well-desing and improve EAs execution.", "text": "abstract paper analyse phenotypic effects diverse coding conversion operators instance states based evolutionary algorithm since representation solutions selection best encoding optimization process proved important efﬁciency evolutionary algorithms discuss strategy coupling representation different procedures conversion coding another search. elsewhere multiple representations intention beneﬁt characteristics them. spite results paper shows change representation also crucial approach take consideration attempting increase performances eas. demonstrative example states identical search spaces different coding conversion operators. results show changing coding another choice best representation representation advantageous must taken account order well-desing improve execution. functioning. problem could difﬁcult representation easy another challenging task discover coding scheme suitable speciﬁc problem testing coding scheme using evolutionary algorithm representation could good behaviour begining besides search bias genetic search depends problem structure encoded search space genetic operators selection crossover mutation. every problem large number possible encodings. often possible follow principle minimal alphabets choosing encoding simultaneously following principle meaningful building blocks much harder. intuition structure problem space translate well binary-encoded spaces expand spread possible ways tackling problem coding design meaningful building blocks search possible encodings good searching solution apply chosen encoding. incorporate coding scheme simultaneously change representation solutions coding another optimization process help well exploring search space increasing count building blocks considered meaningful solution string. ﬁrst choice uses reordering operators like inversion look apply best encoding searching solution. rest paper motivates develops illustrates second approach states based evolutionary algorithm parallel version implemented group independent optimization algorithms algorithm considered state sea. state denoted optimization algorithms proposed literature genetic algorithms genetic programming evolution strategies etc. execution states equivalent execution parallel parameter settings main generation contains merge phase consists regrouping states together whole population. phase state undergoes mutation state given state mutation rate utstate help maintain diversity state space. mutation phase states existing solutions converted withchanging corresponding ﬁtness values. merge phase selection replacement elitist selection phases take place order guarantee survival best individuals. elitist selection stage done whole population according ﬁtness values state. finally split phase necessary disconnect members whole population reorder homogeneous group reconstitutes separate state. split merge cycle continues generation obtains ultimate solution until deﬁnite number iterations absorbed main principle choose good state according ﬁtness values actual solutions directly according states using classical selection operator. eventually favours coding whose solutions best average ﬁtness choice coding depends evolvability coding modiﬁcation representation. another terms depends evolvability coding conversion operator resumed capacity promote support crossover mutation operators build promising solutions ones. consequently conception coding conversion operators lead scaled average ﬁtness assorted evolvability would good approach attack dissolve problem caused representation issues. side redundant representations increasingly applied evolutionary computation seem affect positively performance genetic evolutionary algorithms higher number alleles encoding phenotypic information genotype essentially construct phenotype. reason preface block composites binary encoding proves features properties maintaining scaled genotypes phenotypes paper expose already-evoked structure binary representation tagged binary block coding founded concept bitstrings decomposed deﬁnite number blocks ﬁxed length previous work discussed synonymy representation inﬂuences genetic search. then developed population sizing model synonymously redundant representations based assumption representation affects initial supply. present study focus framework coupling representation algorithm. eventually paper centralized concept proposing diverse ways coding conversion matter apply conversion operators allow change representation solutions population coding another. intention different ways changing representation evolved paper. ﬁrst tends increase number zeros binary solution fact encoded sub-solution composed block binary bits maximum number second tends increase number ones binary solution fact solution encoded sub-solution composed block binary bits maximum number thus conversion operators different representations used encode individuals population identical fact search space neighborhood structure ﬁtness values individuals equivalent solutions. experiments performed intention prove even representations used encode solutions identical manner modifying representation coding another algorithm importance useful selecting best representation. paper contains four main sections. section described details. entire experiments exposed section section presents general comments concluding remarks. finally section summarizes works. binary block coding various coding conversion operators evolved paper purpose bringing form order disturbed situation caused inﬂuence representation performance eas. required speciﬁcations outlined following subsections. binary block coding present binary block coding scheme existing binary representation based binary block constitution possible solutions blocks number block size. suppose bitstring encoded bbc. composed binary blocks length decoding standard binary returns bitstring length procedure deﬁned binary voting mapping. block replaced value determinded voting majority values corresponding block. generally speciﬁc binary encoded optimization task requires binary representation correlates ﬁtness function structure. intention since value equal state variants changing binary representation coding another. ﬁrst assigned maximize number bitstring transforming string block binary substring containing largest possible number second variant assigned maximize number bitstring transforming string block binary substring containing largest possible number considered introduce form redundancy chromosome codiﬁcation inﬁnite group binary coding schemes varying block size standard binary coding basic element group block size equal encoding operators suppose bitstring length whose want encode block size equal generating well bitstring mentioned above encoding operators available change representation standard decoding operator suppose bitstring composed blocks size equal want decode standard binary bitstring generated using decoding operator dec. decoding procedure standard binary coding based predeﬁned function called used evaluate routine speciﬁed voting majority values bitstring outlined follows conversion operators exist several ways change representation individuals population bbc. state brief list conversion operators. transmutation utilities change state representation solution without changing ﬁtness value solution. state space search space ﬁtness function convj conversion operator state case conv corresponds operator maximizes number conv corresponds operator maximizes number bitstring. suppose bitstring encoded composed blocks size equal want change representation form redundancy increases number bitstring block size bitstring generated following main steps. ﬁrst belongs decoding standard binary producing well bitstring length second step belongs encoding applying enci operator poducing well bitstring length therefore convi operator deﬁned follows role importance classes optimization problems take advantage coexistence application conversion operators conv conv algorithm. dual coding strategy based variants developed genuinely serves make representation solutions adaptive well-matched problem’s ﬁtness function. likewise approach make advantageously explore undiscovered areas search space. introduce notion state deﬁned according representation appropriate algorithm integrates adaptive approach representation genotype encoding altered dynamically fact state mutation equivalent coding conversion. therefore modiﬁcation representation arbitrary solutions form using conv conv tries make equilibrum number bits classic binary representation sometimes makes bias towards bits example ultimate solution optimization problem contains number number string coding alternation tour performed applying conv conv random solutions search helpful increasing number bits lead iteration iteration discover locate global optimum. role conversion operators seen intermediators standard binary coding problem structure mediators serve well explore regions search space. importance operators lies concept speciﬁes adjustors attempt correct erroneous bits string replacing probable false value true matter seen interpreted indirectly constructors meaningful building blocks. since binary coding bitwise complement inversely bitwise complement conv translated complementary conversion operator conv reciprocally conv translated complementary conversion operator conv. must notice value resides using conv conv operators simultaneously method interact interchange data bits ﬁnally assisst creating destroying substantive building blocks. evolvability evolvability coding conversion operator deﬁned phenotypic effects produced change representation solutions using operator. another terms ability operator affect serve genetic operators crossover mutation develop promising solutions ones reproduction phase. particularly evolvability coding conversion operator deeply depends problem structure shape optimum. suppose optimize problem global optimum contains number ones greater zeros then conv operator favored regarding concern maximizing number ones bitstring. consequently chance produce promising solutions application conv greater application conv hence evolvability conv greater conv. experimental tests performed sections study compare evolvability conv conv operators. global optimum length onoff typical minimization problem. ﬁtness values non-negative ﬁtness value global optimum corresponds value length solution. value binary string global optimum represents label value represents label. illustrative example onoff function pictured figure length binary solution equal function advantageously conﬁrm assertions changing representation consider genuine solution form really challenging task conversion operators. consequently conv conv operators equal opportunities applied optimization task regarding global optimum contains equal consecutive number likewise experiments extended include alternation problem function counts number dicontinuities consecutive bits bitstring considered hard maximization problem simple solve. depends total number sequences string positions alternations. deﬁned binomial distribution space induced alternations. consequence alternation function following properties points number alternations ﬁtness value. symmetry respect value bitstring length bitwise complement. according property ﬁtness hamming distance correlation coefﬁcient equal zero. illustrative example alternation function pictured figure length binary solution equal problem provides interesting tool analyze report dimensions operators fact features global optimum regarding symmetry characteristic. ﬁrst shape second shape .... contrarily ﬁrst three problems non-linear problem form epistasis contained structure solution bits tightly linked other. chances apply conv conv operators must equivalent succeed. deﬁnitions problems summarized table length solution number hamming distance global optimum count dicontinuities consecutive bits order compute ﬁtness value given solution encoded ﬁrst decode standard binary generating well bitstring then ﬁtness value taken equal corresponding function value calculated according function expression given table ir+. obtain following equality dec. experiments prepared experiments test analyze main features conversion operators show importance changing representation solutions search process. test functions test performance optimization algorithms standard test problems used. mainly consider four binary encoded optimization functions. ﬁrst classical onemax problem. belongs unitation class ﬁtness functions. unitation functions ﬁtness functions ﬁtness function count solution length solution. ﬁtness values non-negative ir+. ﬁrst ﬁtness functions given table pictured figure examples unitation functions. respectively called onemax needle theoretically studied ﬁxed parameter simple rowe wright richter onemax ﬁtness function called fruit research maximization problem countes number string. neutral linear function global optimum string. well expanded observations test second function needle problem also belongs unitation class ﬁtness functions. global optimum string reasoned difﬁcult optimization task classic work out. needle maximization linear problem serve study properties show importance changing representation. side applied tests onoff problem deﬁne onoff problem ﬁtness function global optimum ﬁnite binary sequence form ﬁtness regular hamming distance solution parameters seudorandom generator uniform generator selection mechanism crossover mechanism utation mechanism replacement model replacement model ending criteria size equal last problem parameter value equal reﬂects fact alternation function requires exploitation exploration deceptive attractor mid-distance global optimum. choice well veriﬁed totally compatible choice erbit value alternation function enables algorithm discover recursively regularly good directions search interval. experimental results following subsections introduce experiments performed different purposes. ﬁrst serves analyze conversion operators study interaction dependency parameters -sea. second purpose tries test importance changing representation contributes comparison performance -sea classic analysis section present experiments designed examine several aspects conversion operators. would like know much change representation using conv conv could help advance -sea search. besides would like discover parameters -sea interact other. first essential mention utstate erbit parameters play important role -sea operation affected values decisive ﬁnal outcome. precisely utstate responsible conversion arbitrary individuals population initial representation one. research using conv conv different conversion operators search space deﬁned bbc. consequently operators different evolvability change representation. since evolvability coding conversion operator utstate incidental figure examples graphical representation onoff alternation functions. binary solution length equal compute ﬁtness values corresponding respectively possible solutions. x-axis represents real-value standard binary solution. y-axis represents ﬁtness solutions. parameters since several options terms implementation necessary denote parameter choices used paper. first number states state represented simple representations solutions applied states identical used encoding solutions. choice explicit intention integrate dual coding strategy help locating ultimate solution changing representation different random solutions coding another using conversion operators. thus states symbolized sgas similar everything component. instance implemented denoted -sea representation directly linked algorithm individual population. executed simple iteration before merge phase takes place algorithm life-cycle. next follow-up parameter utstate state mutation rate. case since representation directly linked algorithm state mutation means representation individuals algorithm changed another representation. afterwards refer utstate conversion rate. utstate parameter could easily modiﬁed provide conversion arbitrary solutions coding scheme another without affecting results dramatically search process. value parameter ﬁxed using experiments described later section well -sea another particular parameter block size. value used parameter chosen result prior experimentation reported subsequently section best parameter settings tested objective functions given table general parameter values order create fair tableau comparison -sea parameters shared algorithms kept same. since -sea composed parallel sgas classic -sea parameters recommended goldberg general used parameters respective attributes shown table with maxgen maximum number generations stop popsize population size vecsize genotype size tsize tournament selection size pcross crossover rate mutation rate erbit bit-ﬂip mutation rate. tableau employed four test problems. mention ﬁrst three test problems population figure study success rate ﬂuctuations relatively variations conversion rate bit-ﬂip mutation rate. utstate erbit values varied step test functions. result obtained success rate values varied figure best values utstate erbit plot number iterations required reach global optimum relatively block size problems. well plot percent correct solved solutions relatively block size problem. application genetic operators probability ﬂipping bitstring erbit begin exploring relationship utstate erbit parameters proportion solutions solved correctly success rate percent. ﬁrst experiment utstate erbit values changed within interval step experiment realized test problem independent runs. graphical representations ﬁtness variations relatively utstate erbit given figure simple reading ﬁgures shows large conversion rate needed test functions order -sea produce positive results reﬂects great importance utility change representation search. besides figure indicates high bit-ﬂip mutation rate required problems small bit-ﬂip mutation rate required problems -sea render important results. elementary synthesis obtained results problems require low-level mutation effects regarding ordered structure global optimums necessitate modest contribution genetic operators especially bit-ﬂip mutation able rearrange correct position bitstring. side another parameter block size. second experiment performed determine value parameter test function. first ﬁxed length standard binary genotype value means number blocks binary block genotype equal ﬁtness value global optimum equal unitation functions problem problem. likewise ﬁxed values utstate erbit parameters respectively unitation functions. problems utstate value equal respectively erbit value equal them. test realized objective functions independent runs. graphical records displayed figure show large block size necessary unitation functions order -sea produce signiﬁcant positive results minimum number iterations. fact explained consequence that classical linear problems optimal evolvability coding conversion operator related maximal length bitstring next maximal large block size. side problems require small block size make -sea competent submit large-scale solutions concept small erbit value loworder evolvability avoid disruptive effect solution result help adjusting structural form individuals heuristically progressively minor number generations. performance comparison -sea considering stochastic nature -sea compute average performance independent runs -sea objective function. global optimum equal table shows numerical results whereas figure represents graphical records experiments. algorithms -sea table displays main records test function. ﬁrst success rate measurement percentage number runs algorithm succeeded ﬁnding global optimum. second record generation number optimum measurement average number iterations needed algorithm attain global optimum. paper used method based framework change representation search. basic intermediators apply action diverse conversion operators. operators allow alter representation solutions coding another search without modifying respective ﬁtness values. purpose applied identical representations search space neighborhood structure ﬁtness values identical solutions various conversion operators change form representation issued bbc. state previous works used search good coding optimization process tried apply best coding essential helpful efﬁcient. another effective statement afﬁrmation deduced work test results. data experiments shown table figure clearly prove importance utility changing representation many random solutions favour -sea incorporates conversion strategy leads dynamic mutual representation. also conﬁrm change representation search helpful fundamental step profoundly think well apply tries improve performances. besides experimental results displayed table figure uncomparable show advancement -sea sga. distinctly show -sea found global optimum extreme minimal number generations ﬁrst three test functions reached global optimum onemax onoff problems remarkable larger number iterations failed detect global optimum needle alternation problems majority runs deceptive problem change representation appropriate conversion rate driven search process -sea build correct position relatively neighbours good combinations bits cannot made fast enough matter bits tightly linked other. consequently change representation optimization task proved great importance operation positively showed obtained results -sea signiﬁcantly different objective functions. prove results ﬁrst must show value applying coding conversion operators. thus reveal characteristics study evolvability conv conv made simple test onemax problem denoted fitness clouds representation started test ﬁxed number arbitrary solutions uniformly generated given seed number. ﬁrst step applied standard bit-ﬂip mutation solutions evaluated respective ﬁtnesses next step applied kinds coding conversion initial solutions ﬁrst done using conv operator second using conv operator. then applied standard bit-ﬂip mutation solutions evaluated respective ﬁtnesses following step applied types coding alternation tour random solutions taken before tour considered consecutive coding conversions. ﬁrst tour realized according respective application conv bit-ﬂip mutation conv bit-ﬂip mutation evaluation corresponding ﬁtnesses inversely second tour realized according respective application conv bit-ﬂip mutation conv bit-ﬂip mutation evaluation corresponding ﬁtnesses elementary test performed arbitrary solutions length extreme value equal blocks number equal hence ultimate solution string ﬁtness value equal traditional bit-ﬂip mutation operator applied steps bit-ﬂip mutation rate equal comparison obtained results illustrated figure graphical interpretation figure indicates ﬁtness values individuals submitted conv bit-ﬂip mutation operator higher individuals simply submitted bit-ﬂip mutation individuals submitted conv bit-ﬂip mutation operator. similarly figure shows ﬁtness values individuals submitted conv conv bit-ﬂip mutation operator higher individuals simply submitted bit-ﬂip mutation individuals submitted conv conv bit-ﬂip mutation operator. since onemax problem number string increases corresponding ﬁtness value increases figure proves well conv appropriate conversion operator clearly contributed producing superior results. conclude coding alternation tour conversion representation coding another induced beﬁtting evolvability matches problem structure. test results assume last applied conversion operator inﬂuences ﬁnal outcome. graphical representations ﬁtness variations relatively utstate given figure showed that test functions large conversion rate needed -sea render high positive results fact justiﬁes time important essential role coding alternation tour constructive inﬂuence performance -sea re-creating remodeling reforming meaningful building blocks. also evolvability coding conversion operator beneﬁcial performance change representation. coding important fundamental mechanism resides framework changing representation coding another contributes exploring undetected unspoiled sub-regions search space. therefore better ﬁtness values discovered progress towards positive outcomes. test results distinctly veriﬁed utility value coupling various encodings alternation strategy different conversion operators interact increase probabilities obtaining advanced good structures. ﬁnal statement believe test results totally complied assertions argument choose representation change showed algorithm incorporates method coding mating application conversion representation coding another search easily converge successful reaching optimum solutions using less computational power. future directions study used sgas -sea. advanced research lead exploitation kinds assigned state mind notion states state conversions essential functioning. paper considered. though kinds coding schemes tree linear representation number coding schemes applied order proﬁt convenient representation particular problem. future direction also suggests implementations still improved decreasing user deﬁned parameters figure performance comparison percentage correct solved solutions across number iterations required reach global optimum. records averaged independent runs test function. making automatically adjustable based measures extracted process. research must understand properly basic properties recognize well fundamental evolvability evoked genetic operators propose types conversion operators help making representation dynamic adaptive problem structure. sebastien verel. evolving dynamic change exchange genotype encoding genetic algorithms difﬁcult optimization problems. proceedings ieee international congress evolutionary computation figure fitness clouds representing inﬂuence interaction conversion routines genetic operators onemax problem plot different kinds ﬁtness values arbitrary solutions. x-axis represents ﬁtness initial solutions y-axis represents ﬁtness solutions application conversion operators bit-ﬂip mutation operator", "year": 2009}