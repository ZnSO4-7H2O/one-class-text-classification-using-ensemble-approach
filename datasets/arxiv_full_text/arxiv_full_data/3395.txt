{"title": "Initialization and Coordinate Optimization for Multi-way Matching", "tag": ["stat.ML", "cs.CV", "cs.LG"], "abstract": "We consider the problem of consistently matching multiple sets of elements to each other, which is a common task in fields such as computer vision. To solve the underlying NP-hard objective, existing methods often relax or approximate it, but end up with unsatisfying empirical performance due to a misaligned objective. We propose a coordinate update algorithm that directly optimizes the target objective. By using pairwise alignment information to build an undirected graph and initializing the permutation matrices along the edges of its Maximum Spanning Tree, our algorithm successfully avoids bad local optima. Theoretically, with high probability our algorithm guarantees an optimal solution under reasonable noise assumptions. Empirically, our algorithm consistently and significantly outperforms existing methods on several benchmark tasks on real datasets.", "text": "consider problem consistently matching multiple sets elements other common task ﬁelds computer vision. solve underlying np-hard objective existing methods often relax approximate unsatisfying empirical performance misaligned objective. propose coordinate update algorithm directly optimizes target objective. using pairwise alignment information build undirected graph initializing permutation matrices along edges maximum spanning tree algorithm successfully avoids local optima. theoretically high probability algorithm guarantees optimal solution reasonable noise assumptions. empirically algorithm consistently signiﬁcantly outperforms existing methods several benchmark tasks real datasets. ﬁnding consistent pairwise bijections pairs sets known multi-way matching. critical problem computer science widely used many computer vision tasks object recognition shape analysis structure motion also applied ﬁelds data source integration problem becomes hard combinatorial constraints induced consistency. underlying optimization np-hard solve even unweighted case therefore approximate methods convex relaxation matrix decomposition proposed. methods work well datasets little noise become unreliable realistic noise levels present data. paper algorithms directly optimize true objective weighted multi-dimensional matching problem. intuitive approach iteratively update matching bemay produce signiﬁcant errors erroneous pairwise matching found iterative process. alternatively simply perform coordinate updates objective since coordinate update subproblem weighted bipartite matching eﬃciently solved optimally. however coordinate update approaches depends heavily good initialization produce performance local optima. paper combine ideas design eﬀective method multi-way matching problem. build undirected graph edge weights pairwise matching similarity values maximum spanning tree good helps avoid local optima since focuses initially reliable matchings coordinate updates. seemingly simple idea yields good performance practice also enjoying theoretical guarantees. similar ideas discussed previous works lacked comprehensive theoretical analysis. real experiments obtij rm×m pair sets entry column represents similarity level elements closer elements other larger similarity level symmetry also require pair without loss generality assume constrained range ideally elements elements perfectly matched maximal. also hope avoid matching pairs elements related other e.g. minimal. pachauri recovered mappings solving following optimization problem call method pairwise alignment. clearly always work since matrices pij’s consistent correspond solution next section propose novel algorithms solve optimization problem. tain surprisingly strong results many well-known datasets. instance reliably error famous datasets house hotel task stereo landmark alignments points theoretically guarantee algorithm solves problem optimally pairwise alignment methods work also guarantee optimality high probability spanning tree noise parameter graph small bottleneck weight imposing mild assumptions. ment sets assume exists bijection elements element mapped element similar other. example could images everyday object image therein contains pixels since images describe object type expect bijection exist parts within pairs images. clearly bijections consistent mapped other. element mapped element element mapped element speciﬁcally given element sets interested ﬁnding consistent bijection pair element sets that mapped element sets element achieving equivalent reordering elements element elements index correspond other. mathematically ﬁnding consistent bijection pair element sets equivalent ﬁnding optimization problem equation essentially maximum weighted n-dimensional matching problem. even binary similarity matrices np-hard problem. moreover approximation solution within ratio also np-hard therefore cannot solutions problem arbitrary input values tij. instead constrain similarity matrices used inputs problem. approximate problem pachauri proposed eigenvalue decompositionbased method ﬁrst relaxing combinatorial optimization continuous rounding solution using kuhn-munkres algorithm however pachauri could guarantee solution every similarity matrix close ground truth permutation matrix solved polynomial time kuhn-munkres algorithm hence naive coordinate algorithm easy derive initialize permutation matrices then iteration seek good initialization coordinate update approach summarized equation consider objective function equation maximize objective conﬁdent values chosen corresponding term large. corresponds vertex pair element sets corresponds edge weight maximum spanning tree then initialize matrices along edges follows. initially sets every edge edge similarity matrices tij’s permutation matrices ai’s construct graph compute maximum spanning tree initialize {vi} initialize permutation matrix edge algorithm uses maximum spanning tree initialize permutation matrices iteratively combine vertices initialization need edge selected relatively large value. maximum spanning tree achieves this. subsequently algorithm simply iterates usual coordinate update process. next analyze initialization provides reliable starting point coordinate updates ultimately produce good ﬁnal permutation matrices analyze behavior algorithm first consider simple case guarantee pairwise alignment method consistent permutation matrices pair element sets i.e. pijpjk tij) achieved theorem recover consistent permutation matrices pairs element sets using pairwise alignment method guarantee algorithm solves optimization problem equation optimally. proof section supplementary material. theorem know algorithm least good pairwise alignment method. moreover optimality cases theorem subsume cases pachauri claimed could solve optimally. next even guarantee optimality much general settings. interesting setting matrices tij’s perfect consistent permutation matrices rather corrupted noise. denote optimal solution optimization problem equation ideally best input data could would ˆtij case similarity matrices noise perfectly equal ˆtij tij’s? analyze algorithm assume inputs random perturbations near ˆtij. need consider matrices since proof section supplementary material. minimum bottleneck spanning tree graph means spanning tree minimal edge weight heaviest edge. seems algorithm could work well large exists spanning tree graph proof edge weights guarantee asymptotically bottleneck weight bound cussed theoretical guarantees. however make algorithm better practice also suggest minor improvements tend provide slightly better empirical performance. weights large. therefore update according edges trust ﬁrst. achieve goal process edges descending weight order. exactly edge order running kruskal’s algorithm call ordering kruskal’s order. algorithm propose coordinate update process initialization step. however possibility solutions initialization well. therefore helpful coordinate update process right iteration initialization potentially errors algorithm made iteration. iteration processed vertices coordinate update corresponding permutation matrices ak’s adding intermediate update steps longer need ﬁnal coordinate update step since additional coordinate updates last iteration initialization already played role. algorithm performed initialization enumerating edges maximum spanning tree reasonable running updates good order along edges beneﬁcial. section propose kinds ordering found work well practice prim’s order kruskal’s order. ferent permutation matrices step. even though proved algorithm works well many cases improved cautious update fewer permutation matrices iteration. prim’s algorithm compute maximum spanning tree process edges order execution prim’s algorithm. since adding heuristics mentioned above obtain slight modiﬁcation algorithm shown algorithm algorithm works slightly better explore heuristics fare experiments section. using techniques similar proof theorem easy show algorithm least good pairwise alignment method theorem guarantee recovery pairwise-consistent permutation matrices pair element sets using pairwise alignment method guarantee algorithm solves optimization problem equation optimally. section show algorithms bepractice. focus primarily computer vision datasets. dataset compare algorithm permutation synchronization algorithm pachauri state-of-the-art method multi-way matching. experiment randomly selected images dataset digit roughly images. note larger number images scaleability limitations pachauri need baseline evaluation. algorithms however easily scale much larger data-sets. goal experiment compress mnist images dimensionality. represent image element randomly selecting white pixels forms element matrix merely explore various levels compression keeping min} leading eigenvectors well mean vector however since element sets free permute order element sets prior application pca. since mnist images digit reasonable believe many pairs images bijection correspondence relationship pixels compose digit. intuitively permutations discover bijection help improve performance. evaluate various permutation algorithms precede help ability reconstruct original data various compression levels goal reduce reconstruction error using algorithms reorder elements element prior compression. parameter. function suitable settings since expect close close close otherwise. compare versions algorithms baseline cases. ﬁrst baseline reorder pixels second baseline permutation synchronization algorithm reorder pixels compression. methods experiment selected best value achieves best performance. figure shows reconstruction errors recovered digits obtained methods. versions algorithm outperform baseline methods. note versions algorithm slightly outperform algorithm second computer vision task focus stereo matching. goal align pixels multiple images single object images taken various vantage points. experiment datasets house dataset hotel dataset. contains images house houses landmark points selected ﬁgures contains diﬀerent view landmark points. goal consistent mapping aligns points correspond landmarks together. element sets constructed extracting visual features. again kernel compute similarity matrices. denote tasks experiment house hotel rbf. since ground truth alignments datasets also reasonable local alignments pairs ﬁgures construct similarity matrices. hence also outputs pairwise alignment method similarity matrices. call corresponding tasks house alignment hotel alignment. evaluate performance compute average error rates pairs element sets. results shown ﬁrst four lines table experiment report performance algorithm though algorithm performs alwell. compare versions proposed algorithm permutation synchroniza reconstruction errors methods compared baseline methods. horizontal axis represents reduction dimensionality performance versions algorithm almost same clealy outperform previous approaches. reconstructed results image digit methods. ﬁgure show reconstructed images eigenvectors respectively. methods reconstruct image well even meanwhile methods require many eigenvectors reconstruct recognizable digit image. tion method. show results trials experiments since performance stochastic random re-ordering images pixels prior input algorithms. methods reliably solve problem accuracy setting. meanwhile baseline method behaves much worse. alignment setting baseline method’s behaves better since tends excel types inputs. nevertheless methods still outperform especially prim’s order version. notice initialization component algorithms important. without smart initialization technique coordinate updates behave unreliably. instance house task beyond stereo matching also interested matching images complicated geometric ambiguities. instance images frequent repetitive structures extremely hard handle high-dimensional features sift experiment building dataset kind structures. pachauri used dataset hand-annotated similar-looking landmark points scene across dataset. handannotated data select images evaluation. however image points always landfigure points alignment building dataset. green lines ground truth alignments lines computed alignments. less green lines exposed means better performance. explore setting alignment setting experiment. performance algorithm compared baseline permutation synchronization method shown table task much diﬃcult stereo matching expect high accuracy. nevertheless methods outperform baseline algorithm settings furthermore alignments setting algorithm shown figure groups alignments pair images. that even highly repetitive structures signiﬁcant noise datasets algorithm still stable gets satisfactory consistent matchings. work aligns multiple objects composed sets consistent parts. setting limited images computer vision tasks. example apply algorithms natural language processing datasets sentence dataset. data-set contains human-labeled sentences research papers. tried consistently align word frequency vectors label diﬀerent papers. table shows methods outperform baseline method leads believe methods could extend ﬁelds beyond computer vision. straightforward coordinate updates multi-way matching objective reliable produce poor performance. however seeded good initialization coordinate updates stuck local optima. combining traditional coordinate ascent algorithm iterative initializations along edges maximum spanning tree obtain stronger empirical results stronger theoretical guarantees. outperform leading baseline methods various problems computer vision well domains. addition theoretical analysis shows require noise parameters small ensure perfect alignment high probability. rather require spanning tree small bottleneck edge weight", "year": 2016}