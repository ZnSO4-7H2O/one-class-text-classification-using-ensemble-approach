{"title": "Adapting Heuristic Mastermind Strategies to Evolutionary Algorithms", "tag": ["cs.NE", "cs.AI"], "abstract": "The art of solving the Mastermind puzzle was initiated by Donald Knuth and is already more than 30 years old; despite that, it still receives much attention in operational research and computer games journals, not to mention the nature-inspired stochastic algorithm literature. In this paper we try to suggest a strategy that will allow nature-inspired algorithms to obtain results as good as those based on exhaustive search strategies; in order to do that, we first review, compare and improve current approaches to solving the puzzle; then we test one of these strategies with an estimation of distribution algorithm. Finally, we try to find a strategy that falls short of being exhaustive, and is then amenable for inclusion in nature inspired algorithms (such as evolutionary or particle swarm algorithms). This paper proves that by the incorporation of local entropy into the fitness function of the evolutionary algorithm it becomes a better player than a random one, and gives a rule of thumb on how to incorporate the best heuristic strategies to evolutionary algorithms without incurring in an excessive computational cost.", "text": "solving mastermind puzzle initiated donald knuth already years old; despite that still receives much attention operational research computer games journals mention natureinspired stochastic algorithm literature. paper suggest strategy allow nature-inspired algorithms obtain results good based exhaustive search strategies; order that ﬁrst review compare improve current approaches solving puzzle; test strategies estimation distribution algorithm. finally strategy falls short exhaustive amenable inclusion nature inspired algorithms paper proves incorporation local entropy ﬁtness function evolutionary algorithm becomes better player random gives rule thumb incorporate best heuristic strategies evolutionary algorithms without incurring excessive computational cost. mastermind current version board game introduced telecommunications expert mordecai merowitz sold company invicta plastics renamed actual name; fact mastermind version traditional puzzle called bulls cows dates back middle ages. case mastermind puzzle persons codemaker codebreaker outsmart following codemaker sets length combination symbols. classical version color pegs used symbols board rows holes; however paper uppercase letters starting instead colours. table progress mastermind game tries guess secret combination abbc. player particularly clueful playing third combination consistent ﬁrst coinciding positions color different variations game include giving information position guessed correctly avoiding repeated symbols secret combination allowing codemaker change code game case codebreaker allowed make maximum number combinations score corresponds number combinations needed secret code; repeating game number times codemaker codebreaker changing sides lower score wins. since mastermind asymmetric sense position players setting secret code almost completely passive limited give hints response guesses codebreaker rather puzzle game since codebreaker really matching skills codemaker facing problem must solved help hints implication playing mastermind similar solving sudoku game chess; thus solution mastermind unless particular situation search problem constraints. makes problem interesting relation other generally called oracle problems circuit program testing differential cryptanalysis puzzle games fact proved np-complete several open issues namely lowest average number guesses achieve minimize number evaluations needed obviously scales increasing paper concentrate ﬁrst issue. completeness implies difﬁcult algorithms solve problem reasonable amount time previous work introduced stochastic evolutionary simulated annealing algorithms solved mastermind puzzle general case ﬁnding solutions reasonable amount time scaled roughly logarithmically problem size. strategy followed play game optimal sense guaranteed solution ﬁnite number combinations; however additional selection combination played fact consistent responses given far. paper reviewing state solving puzzle evolved last years examine could improve code-breaking skills evolutionary algorithm using different techniques techniques optimized. order examine different ways scoring combinations search space choose combination combinations exactly score applied simple estimation distribution algorithm improve results standard one. paper presents ﬁrst time evolutionary algorithm biases search combinations played better chance reducing size remaining search space adapt stochastic environment deterministic techniques previously published; techniques unlike former papers tested whole code space instead random sample compared yield signiﬁcant results. rest paper organized follows next establish terminology examine state art; heuristic strategies mastermind examined section could adapted evolutionary algorithm presented section ﬁnally conclusions drawn closing section presenting state deﬁnitions needed. term response return code codemaker played combination cplayed. response therefore function combination cplayed secret combination csecret response denoted combination consistent cplayed combination many black white pins respect played combination played combination respect secret combination. furthermore combination consistent number combinations played far; consistent guesses made far. combination consistent candidate solution. concept consistent combination important characterizing different approaches game mastermind. earliest strategies knuth perhaps intuitive mastermind. strategy player selects guess reduces number remaining consistent guesses opponent return code leading maximum number guesses. using complete minimax search knuth shows maximum guesses needed solve game using strategy. type strategy still widely used today algorithms mastermind start searching consistent combination play. cases single consistent guess found immediately played case object consistent guess fast possible. example evolutionary algorithm described purpose. strategies fast need examine part space. playing consistent combinations eventually produces number guesses uniquely determine code. however maximum average number combinations needed usually high. hence bias must introduced combinations searched. guesses better purely random approach solutions found random sample space consistent guesses. alternative discovering single consistent guess collect consistent guesses select among best alternative. number heuristics developed years. typically heuristics require consistent guesses ﬁrst found. algorithms kind search space consistent combinations guess extracts information secret code issued else reduces much possible remaining consistent combinations. however obviously known advance. combination corresponds partition rest space according match consider ﬁrst combination combination considered aabb combinations whose response etc. partitions also empty contain single element exhaustive explanation combination thus characterized features partitions number non-empty ones average number combinations them maximum characteristics think path leading successful strategies date include using worst case expected case entropy parts strategies. entropy strategy selects guess highest entropy. entropy computed follows possible response particular consistent guess number remaining consistent guesses found. ratio reduction number guesses also priori probability secret code corresponding partition. entropy computed information partition used select next combination play mastermind worst case one-ply version knuth’s approach irving suggested using expected case rather worst case. kooi noted however size partitions irrelevant rather number empty partitions created important. strategy called parts. strategies require one-ply look-ahead either determining size resulting partitions and/or number them. computing number however faster determining size. reason parts strategy computational advantage. heuristic strategies described form look-ahead computationally expensive. look-ahead used guide search guess selected purely random. however possible discriminate using local information. possible could even dismiss searching consistent guesses search single consistent guess bias. section heuristic strategies compared. section using local information compared need examine consistent guessed order select best one. mentioned before number different strategies proposed years selecting among consistent guesses mastermind. heuristics consider exhaustive minimax search rather one-ply search. however clear research papers ties broken probably implies ﬁrst come ﬁrst served approach taken using ﬁrst combination lexicographical order tied combinations. reason propose perform comparison heuristic methods ties broken randomly. strategy therefore used possible secret combinations using independent runs. heuristics compared entropy parts worst case strategy performed bestavros belal worst case refers fact possible return code particular guess smallest reduction assumed i.e. worst case. actual consistent guess chosen maximizes worst case. finally expected size strategy also tested; strategy expected case used instead worst case. strategies compared random strategy. results experiments given table ﬁrst combination played always aabc proposed wilcoxon rank signiﬁcance level used determine results statistically different form another. horizontal lines used group together heuristics statistically different other. results gather statistical difference entropy parts strategies. however games played maximum number guesses needed entropy strategy parts strategies also better worst expected case statistically equivalent. worst case strategy used nevertheless maximum guesses unlike expected case worst performer random strategy also required maximum guesses. finally note table comparison mean number games played using colour combinations breaking ties randomly ranked best worst average number guesses needed. statistics given independent experiments. maximum number moves used games also presented ﬁnal column. horizontal separators given statistically independent results. common approach using evolutionary algorithms mastermind simply search single consistent guess immediately playing especially true generalized version game task ﬁnding consistent guess difﬁcult. result approach likely well random strategy discussed previous sections. steady state evolutionary algorithms however case consecutive consistent guesses found similar others played before. strategy play necessarily purely random. case highly likely evolutionary algorithms type better random strategy seen above since consistent combinations found random sample consistent combinations. section investigate performance strategies single consistent guess play immediately. case estimation distribution algorithm included algorithmevolutionary perl module whole eda-solving algorithm available algorithmmastermindeda cpan standard uses population individuals replacement rate generation half population generated previously generated distribution. ﬁrst combination played aabb since found signiﬁcantly different using aabc before. absolute difference number white black pegs needed make guess consistent. however approach likely perform well random strategy discussed previous section. ﬁnding single consistent guess cannot apply heuristic strategies previous section. reason introduce local entropy measure applied non-consistent guesses bias search. local entropy assumes fact combinations better others depends informational content turn depends entropy combination along rest combinations played far. compute local entropy combination concatenated combinations played shannon entropy computed result independent runs whole search space compared results previous section. results seen table experiments shown using ﬁtness function designed consistent guess ones using local entropy using local entropy statistically better playing pure random whereas not. order conﬁrm usefulness local entropy additional experiment performed. time previous sections consistent guesses found highest local entropy played. results labelled localentropy table results statistically different results using ﬁtness function local conclusion entropy method seemed perform best average estimation distribution algorithm statistically different exhaustive search strategies localentropy performs signiﬁcantly better random algorithm average. remark objective paper show strategy best runtime-wise offers best algorithmic performance/runtime trade-off; case note algorithm least number evaluations lowest runtime eda. however average performance player good rest improvement might obtained creating possible solutions. remains seen many solutions would needed investigated next section. table comparison mean number games played using colour combinations breaking ties randomly ranked best worse mean number combinations. statistics given independent experiments. maximum number moves used games also presented ﬁnal column. horizontal separators given statistically independent results. following former papers recently berghman proposed evolutionary algorithm ﬁnds number consistent guesses uses strategy select played. strategy apply unlike expected size strategy. however differs fundamental ways. approach consistent guess assumed secret turn guess played every different secret. return codes used compute size remaining consistent guesses set. average taken size sets. here difference expected size method subset possible consistent guesses used return codes considered considered frequently once might lead bias result. indeed remark approach computationally intensive leads reduce size subset further. note berghman present result single evolutionary results cannot compared here. approach however interesting lead consider case evolutionary algorithms designed maximum consistent guesses within ﬁnite time. assumed subset sampled uniformly randomly possible consistent guesses. question heuristic strategies discussed work randomly sampled subset consistent guesses? experiment performed previous sections repeated time using four best one-ply look-ahead heuristic strategies random subset guesses bounded size many guesses give number partitions similar entropy perhaps taking random subset would good representation guesses. implications respect application also common strategies discussed here. inﬂuence subset size. results experiments statistics presented table results presented expected better subset size gets bigger. noticeable fact entropy parts strategies perform best before however entropy strategy better. parts entropy expected size worst case entropy parts expected size worst case entropy parts expected size worst case entropy parts expected size worst case entropy parts expected size worst case table statistics average number guesses different maximum sizes subsets consistent guesses. horizontal lines used indicate statistical independent exception case expected size worst case independent. statistical difference different subset sizes? answer look best strategies detail entropy parts compare performances different subset sizes using complete case presented table results given table analysis concluded size sufﬁciently large statistically different using entire consistent guesses. actually quite large reduction size average implies that least case using subset combination pool around total size potentially yields result good using whole set; even algorithmically ﬁnding tentative solutions harder ﬁnding single using stochastic search algorithms mentioned evolutionary algorithm holds promise combining accuracy exhaustive search algorithms speed case spaces bigger option gives least rule thumb. proportion grows search space size still open question. paper tried study compare different heuristic strategies simplest version mastermind order come nature-inspired algorithm able beat terms running time scalability. main problem heuristic strategies need whole search space memory; even advanced ones become unwieldy soon paper improving heuristic deterministic algorithms random choice combination play incorporated simplest strategies estimation distribution algorithm results promising still fall short best heuristic strategies take account partition search space created combination. tried compute subset would able obtain results indistinguishable statistical sense obtained whole coming subset whose size around whole thus less computational intensive easily incorporated evolutionary algorithm. however incorporated within evolutionary algorithm remains seen future lines work. distance consistency entropy combined aggregative ﬁtness function; quality partitions induced also taken account; however several ways this putting consistent solutions archive fashion multiobjective optimization algorithms leave population take quality partitions another objective mention evolutionary parameter issues themselves population size operator rate. objective sense minimize number average/median games played also minimize proportion search space examined ﬁnal solution. tests algorithms implemented using matlab package available open source source software licence authors. evolutionary algorithm several mastermind strategies also available cpan; results conﬁguration ﬁles needed compute available group’s server. paper funded part spanish micyt projects nohnes tin--c- junta andaluc´ıa p-tic- p-tic-. authors also grateful trafﬁc jams granada allowed limitless moments discussion interaction problem.", "year": 2009}