{"title": "Towards a Job Title Classification System", "tag": ["cs.LG", "cs.AI"], "abstract": "Document classification for text, images and other applicable entities has long been a focus of research in academia and also finds application in many industrial settings. Amidst a plethora of approaches to solve such problems, machine-learning techniques have found success in a variety of scenarios. In this paper we discuss the design of a machine learning-based semi-supervised job title classification system for the online job recruitment domain currently in production at CareerBuilder.com and propose enhancements to it. The system leverages a varied collection of classification as well clustering algorithms. These algorithms are encompassed in an architecture that facilitates leveraging existing off-the-shelf machine learning tools and techniques while keeping into consideration the challenges of constructing a scalable classification system for a large taxonomy of categories. As a continuously evolving system that is still under development we first discuss the existing semi-supervised classification system which is composed of both clustering and classification components in a proximity-based classifier setup and results of which are already used across numerous products at CareerBuilder. We then elucidate our long-term goals for job title classification and propose enhancements to the existing system in the form of a two-stage coarse and fine level classifier augmentation to construct a cascade of hierarchical vertical classifiers. Preliminary results are presented using experimental evaluation on real world industrial data.", "text": "also finds many applications industrial settings. paper focus text classification titles predefined occupation categories. machine learning techniques successfully applied text classification learning approach document classification entails assigning documents label predefined class category create training data. training dataset used learn model utilized assign class documents. proliferation data e-commerce domains explosion amount data needs processed fast efficient scalable manner. large-scale e-commerce systems need classify millions items thousands categories facilitate item catalog categorization improve customer experience searching browsing leading purchases sales transactions. online recruitment domain face similar problem categorizing titles. careerbuilder.com hundreds millions postings resumes applications. classification large datasets predefined titles benefits classifications recommendation products making easier seekers employers find other. facilitates careerbuilder.com’s goal empowering employment helping keepers find jobs training need. secondly good classification enables data aggregated turn enables analysis. critical labor market analytics products give valuable insights employers design recruitment strategies. past classified content standardized hierarchy titles commonly used industry known o*net. o*net extension standard occupational classification system developed u.s. bureau labor statistics. o*net categorization system four level hierarchy major level groups minor groups second level broad occupations third level leaf level occupations. example software developers application leaf level occupation designated o*net code corresponds major group broad occupation group minor group final digit o*net code instance minor group found taxonomy specific enough needs updated frequently enough example codes represent software abstract document classification text images applicable entities long focus research academia also finds application many industrial settings. amidst plethora approaches solve problems machine-learning techniques found success variety scenarios. paper discuss design machine learning-based semi-supervised title classification system online recruitment domain currently production careerbuilder.com propose enhancements system leverages varied collection classification well clustering algorithms. algorithms encompassed architecture facilitates leveraging existing off-the-shelf machine learning tools techniques keeping consideration challenges constructing scalable classification system large taxonomy categories. continuously evolving system still development first discuss existing semi-supervised classification system composed clustering classification components proximity-based classifier setup results already used across numerous products careerbuilder. elucidate long-term goals title classification propose enhancements existing system form level classifier augmentation construct cascade hierarchical vertical classifiers. preliminary results presented using experimental evaluation real world industrial data. categories subject descriptors design methodology classifier design evaluation. applications text processing. general terms algorithms experimentation performance introduction document classification widely studied problem data mining information retrieval machine learning. document classification great academic research interest development. categories encompass general niche/emerging software engineering titles hadoop engineer .net developer machine learning engineer java developer amongst others. result search recommendation products able refine search results degree required provide best possible experience users. lack granularity primary motivation work area. several techniques used text classification decision trees naïve bayes k-nearest-neighbor support vector machines popular machine learning toolkits frameworks weka scikit liblinear incorporate algorithms practical use. large number data instances features along increased computational requirements complex learning models real-time inference constraints resulted efforts adapt machine-learning techniques scale out/distributed scale architectures examples large-scale distributed machine learning frameworks apache mahout jubatus graphlab mlbase paper describe semi-supervised title classification system pre-existing o*net-soc hierarchy target classes. existing classification approach flat classification system focus discovering classifying title labels. system composed clustering component discovers titles jobs dataset used instance based multi-label k-nn classifier classifies jobs cluster labels. note currently cluster labels o*net categories title strings. bang approach classification single classifier trained dataset represents entire target hierarchy. part work towards categorizing jobs o*net categories enhance system decomposing hierarchical coarse fine level classifiers fine level classifier created every major group resulting vertical classifier. long-term goal classification pipelines classifies titles o*net categories existing title label classification. share coarse-level classifier. since data text classification usually sparse high dimensional characteristics make svms ability generalize well high dimensional spaces speed classification especially good text classification problems. classifier coarse level current multi-label k-nn classifier fine level. show using approach treating classes separately alleviates processing time enhances scalability results accurate title classification finer granularity titles discovered. related work concept hierarchies taxonomies exist many diverse domains portals e-commerce library systems medical text. examples wikipedia amazon.com ebay.com u.s. library congress classification international classification diseases amongst others. extensive work done leveraging pre-existing hierarchies classification also making clustering techniques http//mahout.apache.org/ http//jubat.us/en/ overcome scarcity labeled data training classifiers. dumais chen demonstrated first svms classifying large heterogeneous collection content. svms first second level classifiers threshold score exceeded level comparison made second level. propose deep classification method consists stages first stage uses category search obtain candidates test document used prune hierarchy train classifier. main problem approach computational requirement training classifier every instance needs classified. ruiz srinivasan apply expert gates strategy concert hierarchical array neural networks text categorization problem medical records slonim tishby demonstrate power using word clusters improve text classification. apply information bottleneck principle create word-clusters reduce feature space dimensionality. malik kender introduce cphc semi-supervised classification algorithm utilizes pattern-based cluster hierarchy directly classify instances alleviates need train classifier. malik proposes two-stage hierarchical text classification system mitigates impact compounding errors inherent hierarchical svms using kth-level hierarchy flattening user-defined. crammer cascading system k-best online learning algorithm rule-based automatic coding policy multi-class multi-label system assign icd-cm clinical codes free text radiology reports. output rule-based system used features online learning algorithm improves classification accuracy overtime. lojo k-nn assign cie-mc codes medical reports. terms application domain approach taken work similar linkedin’s title classification system ebay’s work large-scale item categorization similar linkedin focus title classification hierarchical two-stage approach classification linkedin utilizes heavily manual phrase-based classification system dependent near-sufficiency property short-text heavy reliance crowd-sourced labeling training samples. similar ebay hierarchical approach cascading classifiers k-nn classification application domains differ. also unlike ebay coarse level classifier k-nn fine level classifier. next section explain design system. title classification proximity-based classification existing title classification system careerbuilder.com semi-supervised approach using multi-class multi-label proximity-based classifier. proximity-based classifiers observation documents belong class close another based distance metric cosine distance. classifiers find k-nearest neighbors test instance report majority class improve efficiency pre-process data clusters define metadocument cluster find k-nearest neighbors. first phase classification system uses clustering algorithm aggregate training dataset clusters. lingog proprietary clustering library based lingo clustering algorithm balance simplicity accuracy lingo features novel combination numerical phrase-based clustering methods identifying lexically meaningful semantically distinct cluster labels fulfilling cluster assignments. specifically algorithm first conducts singular value decomposition tf-idf term-document matrix. left-singular vectors employed identify cluster labels singular values used determine practical amount clusters. documents assigned clusters based cosine distance user-defined threshold quantify resemblance. lingo algorithm lower misclassification rate popular methods consumes memory relatively frequent high dimensional matrix operations especially large datasets. existing system careerbuilder.com crawled jobs title minimum frequency threshold four. jobs pre-processed removing extraneous markup characters stop-words noise. clustering process took around half hour dual core macbook resulting title clusters ranging nurse assistant hadoop engineer. note current o*net taxonomy entry emerging titles hadoop engineer approach relies constantly evolving jobs dataset allows capture niche titles. k-nn classifier uses clusters metadocuments classification. k-nn considered slow classifier instance time classification properties classifier uses lucene open-source industrial strength search engine library results classification response time less specifically lucene morelikethis class construct classification queries cosine similarity document vector similarity. used combination unigram bigram terms construct queries single word multi-word titles. fetch term vector every document indexed create term frequency according minimum frequency threshold compute inverse document frequency output list titles product tf-idf score. classifier currently deployed internal also used teams products. vertical classifiers drawbacks current system current architecture suitable achieving long-term goal automated o*net classification system scale training data need obtain wide ranging list titles beyond o*net taxonomy. discuss extension form incorporating classifier first phase pipeline. phase involves classifying jobs appropriate top-level twodigit groups used existing k-nn pipeline resulting vertical classifiers k-nn classifiers level codes. svms achieve state performance text classification data robust sparse high-dimensional data chose coarse level classifier cascade classifiers important top-level classification correct. svms usually binary classifiers partition data space linear non-linear delineations classes. liblinear supports one-vs-all strategy binary classification given instance labels function http//lucene.apache.org referred l-svm appropriate common loss function linear classifier liblinear. multi-class case liblinear implements method crammer singer. dataset level classifier jobs listed careerbuilder.com daunting task obtain labeled large datasets. crowdsourcing option expensive likely systematic consistency errors able circumvent tagging jobs dataset using rd-party o*net classification system. issue encountered class imbalance problem classes soc- little representation dataset compared jobs soc- category time resolved under-sampling classes base count class allowed training data almost categories included training set. reduced training dataset jobs still larger existing system trained chose features based frequency removed feature occurred fewer training instances. total number features soc-classifier trained m.xlarge instance compute units hours. resulting classifier exhibits fast classification performance. single-node classification instances extremely fast less. -node cluster hadoop-based distributed batch soc-classifier system classify million jobs dataset within minutes. multi-class text classifier soc-classifier appropriate performance metrics average precision average recall macro-average score k-fold cross validation test estimate accuracy model generated. general consensus machine learning community -fold validation provides best balance overlap test sets size test sets achieved average precision average recall average score coverage high since goals build automated o*net code classifier least comparable rd-party system compared results classifier system jobs dataset rd-party system gold standard soc-classifier achieved average classification accuracy toplevel two-digit code. created vertical classifiers healthcare soc--computer mathematical occupations categories. using two-stage approach resulted niche titles discovered enabled computationally intensive clustering step operate entirely datasets particular category. example soc- vertical contained titles cloud engineer salesforce developer exist current system. healthcare vertical classifier also conducted test careerbuilder.com website using live traffic compare performance existing classifier. main metric comparison conversion rate users defined expression interest /unique visitors register visitor clicks apply button job. test http//hadoop.apache.org three weeks experienced gain conversion rate. aware vertical classifier multi-label classifier conduct evaluation performance using metrics hamming loss zero-one loss. conclusion future work existing semi-supervised proximity-based multi-class multi-label title classification system currently operation careerbuilder.com. discussed limitations system proposed enhancement form coarse-level fine-level cascading architecture composed classifier k-nn classifier. enables make progress towards goal automated o*net title taxonomy classification system well enhancing parallel pipeline fine grained title labels. early tests indicate potential increased visitor engagement website better accurate detailed classifications jobs. future work involves building pipeline fine-level classification -digit o*net-soc code creating vertical classifiers title classifier pipeline conducting tests vertical classifiers eventually releasing classification external consumption.", "year": 2016}