{"title": "Fitness Uniform Deletion: A Simple Way to Preserve Diversity", "tag": ["cs.NE", "cs.AI", "I.2.M"], "abstract": "A commonly experienced problem with population based optimisation methods is the gradual decline in population diversity that tends to occur over time. This can slow a system's progress or even halt it completely if the population converges on a local optimum from which it cannot escape. In this paper we present the Fitness Uniform Deletion Scheme (FUDS), a simple but somewhat unconventional approach to this problem. Under FUDS the deletion operation is modified to only delete those individuals which are \"common\" in the sense that there exist many other individuals of similar fitness in the population. This makes it impossible for the population to collapse to a collection of highly related individuals with similar fitness. Our experimental results on a range of optimisation problems confirm this, in particular for deceptive optimisation problems the performance is significantly more robust to variation in the selection intensity.", "text": "abstract commonly experienced problem population based optimisation methods gradual decline population diversity tends occur time. slow system’s progress even halt completely population converges local optimum cannot escape. paper present fitness uniform deletion scheme simple somewhat unconventional approach problem. fuds deletion operation modiﬁed delete individuals common sense exist many individuals similar ﬁtness population. makes impossible population collapse collection highly related individuals similar ﬁtness. experimental results range optimisation problems conﬁrm this particular deceptive optimisation problems performance signiﬁcantly robust variation selection intensity. population based optimisation methods often suﬀer diversity problems especially many generations. worst case whole population become conﬁned local optimum cannot escape leaving optimiser stuck. situations population size must kept small resource constraints solution space deceptive many large local optima loss population diversity becomes especially signiﬁcant. permission make digital hard copies part work personal classroom granted without provided copies made distributed proﬁt commercial advantage copies bear notice full citation ﬁrst page. copy otherwise republish post servers redistribute lists requires prior speciﬁc permission and/or fee. gecco’ june washington usa. copyright ---// ..... numerous techniques devised help preserve population diversity. signiﬁcant contributions direction ﬁtness sharing crowding local mating niching many methods based kind distance measure solution space used ensure members population become similar other. unfortunately many interesting optimisation problems evolving neural networks genetic programming trying establish whether individuals eﬀectively diﬃcult totally diﬀerent neural networks programs identical behaviour general case solution space turing complete comparison impossible even theory. methods measure diversity directly genotype space alternative approach measure diversity phenotype space. example approach fitness uniform selection scheme theoretically analysed experimentally investigated fuss works focusing selection intensity individuals uncommon ﬁtness values rather highest ﬁtness usually done. broad range individuals many diﬀerent levels ﬁtness develop population including hopefully individuals high ﬁtness. fuss achieved interesting results particular highly deceptive problems also diﬃculties situations. focusing selection rare individuals within population tendency individuals population highly related oﬀspring take idea using ﬁtness roughly approximate similarity individuals apply diﬀerent way. rather using control selection reproduction fuss does instead control selection deletion hence name fitness uniform deletion scheme fuds. result easily implemented computationally eﬃcient problem independent approach population diversity control. section describe intuition behind fuds essential properties. section details test system tests performed. section compare fuds random deletion deceptive optimisation problem. section examines performance fuds random deletion random travelling salesman problems various selection intensities population sizes. section repeats comparison covering problem. section looks problems includes analysis population diversity using hamming distance. finally section contains brief summary possible future work. intuition behind fuds simple individual ﬁtness value rare population individual almost certainly contains unique information which deleted would decrease total population diversity. conversely large subset individuals population ﬁtness delete without losing much population diversity. presumably individuals common sense likely exist parts solution space easy reach. simple observation fuds immediately follows delete individuals commonly occurring ﬁtness. help preserve population diversity even deceptive problems. indeed simply impossible whole population collapse collection highly related individuals similar ﬁtness. technique simple understand easy implement computationally eﬃcient completely independent problem genotype representation used. implement fuds follows. fmin fmax minimum maximum ﬁtness values possible problem least reasonable upper lower bounds. divide interval collection subinels. individuals added population ﬁtness computed placed list individuals corresponding ﬁtness level belong thus number individuals ﬁtness level describes common ﬁtness values within interval current population. deletion required algorithm locates ﬁtness level largest number individuals randomly selects individual belongs level deletion. case multiple ﬁtness levels size lowest ﬁtness level chosen. number ﬁtness levels chosen relative population size example ﬁtness levels population resulting model distribution individuals across ﬁtness range coarse. alternatively large number ﬁtness levels used small population individuals become thinly spread across ﬁtness levels. extreme cases could eﬀect performance fuds practice found system particularly sensitive setting parameter. population size rule thumb. generally long population size range times number ﬁtness levels performance unaﬀected. theoretically better justiﬁed solution would model population distribution using ﬁnite bayesian trees fuds takeover highest ﬁtness level indeed ﬁtness level impossible. easy soon ﬁtness level starts dominate deletions become focused level longer populated ﬁtness level. by-product also means individuals relatively unpopulated ﬁtness levels preserved. allows steady creation individuals many diﬀerent ﬁtness levels makes relatively easy local optima keeps exploring evolutionary paths ﬁrst appear promising. figure illustrates density individuals ﬁtness landscape fuds. numbers represent ﬁtness diﬀerent regions shading represents density individuals space. ﬁtness function clearly fuds attempts uniformly distribute individuals according metric. however imply individuals uniformly distributed across genome space. typically areas high ﬁtness relatively small compared areas lower ﬁtness. case number individuals regions density individuals high ﬁtness region much higher smaller size. illustrate visually ﬁtness landscape figure numbers indicate ﬁtness individuals region density individuals given dark regions shaded. clearly then uniformity ﬁtness distance metric implications distribution individuals respect metric genome space. allows relate fuds methods diversity control require genome space metric. ﬁtness function smooth respect small. implies small also cannot small. thus limit number similar individuals fuds also limit number similar individuals done crowding niching methods. advantage fuds need know compute value something diﬃcult applications. indeed argument true metric genome space smooth respect hand ﬁtness function smooth respect argument cannot made. however case optimisation problem diﬃcult small mutations genome space respect produce unpredictable changes ﬁtness. fuds deletion scheme still need choose selection scheme require selection intensity parameter. fuds however performance system less sensitive correct setting parameter. selection intensity high normal problem population rushes local optima soon becomes stuck chance properly explore genotype space promising regions. however fuds total collapse population diversity impossible thus much higher levels selection intensity used. conversely selection intensity population tends explore higher areas ﬁtness landscape all. consider population contains individuals. random deletion individuals including highly ones chance deleted cycle expected life time individual deletion cycles. thus highly individual contribute child ﬁtness higher must reasonably quickly. however optimisation problems probability individual child selected fact likely deleted happens. result population becomes stuck unable individuals greater ﬁtness ﬁttest individuals killed fuds rare individuals deleted much lower selection intensity without population becoming stuck. order test fuds implemented simple population based optimiser java running linux. full source code along usage instructions example optimisation problems test data sets available from. also contains directions download full datasets used produce results presented paper. optimiser uses steady state population rather usual generational population. steady state population individuals selected acted upon time rather bulk generational approach. speciﬁcally following occurs individual ﬁrst selected according selection scheme according crossover probability second individual selected crossed form child. according mutate probability mutation operation applied child. crossover occur mutation always takes place order reduce probability clone existing individual added population. finally deletion scheme selects individual population child replace. selection scheme implemented commonly used tournament selection. tournament selection group individuals randomly chosen population individual highest ﬁtness returned. size group called tournament size clear larger group likely select highly individual population. tests used tournament sizes ranging order examine wide range selection intensities. consider tournament selection roughly representative standard selection schemes favour ﬁtter individuals population; indeed tournament size shown tournament selection equivalent linear ranking selection scheme standard selection schemes expect performance schemes best comparable tournament selection used correctly tuned selection intensity. good values crossover mutate probabilities depend problem must manually tuned based experience theoretical guidelines this. problems performance quite sensitive values others values make much diﬀerence. default values often provided reasonable performance. steady state optimisers standard deletion scheme used simply random deletion. rational neutral sense skew distribution population way. thus whether population tends toward high ﬁtness etc. solely function selection scheme parameters particular selection intensity. course random deletion makes effort preserve diversity population individuals equal chance removed. essentially objective paper investigate whether fuds might better alternative circumstances. reporting test results adopt following notation tour means tournament selection tournament size similarly tour tour graph shows performance tournament selection range tournament sizes simply write tourx. indicate deletion scheme used either suﬃx indicate random deletion fuds respectively. thus tour-r tournament selection tournament size used random deletion. problem system using tournament selection tournament sizes mutation crossover rates population size. diﬀerence deletion scheme used code. thus even parameters mutation operators etc. optimal given problem comparison deletion schemes still fair. indeed often deliberately setting optimisation parameters nonoptimal values order compare robustness system using diﬀerent deletion schemes. steady state optimiser operates individual time number cycles within given high perhaps more. order make results comparable generational optimiser divide number size population give approximate number generations. unfortunately theoretical understanding relationship steady state generation optimisers strong. shown assumption crossover eﬀective selection intensity using tournament selection size approximately twice strong steady state generational aware similar comparison systems crossover performed though would expect results signiﬁcantly diﬀerent. system stopped optimiser progress recorded generations. running system longer looking graphs seems generations suﬃcient identify system becomes stuck progress unlikely. order generate reliable statistics test multiple times; typically times. runs calculated average performance selection scheme. also computed sample standard deviation standard error estimate mean. value used generate conﬁdence intervals appear error bars graphs. figure switching random deletion fuds number generations required global optimum falls dramatically especially higher selection intensity used. figure tour-r converged slowly tour-r converged prematurely became stuck. tour-r appears correct tournament size problem. fuds selection schemes performed well. ﬁrst results selection schemes used random deletion appear left graph figure expected higher selection intensity signiﬁcant disadvantage problem. indeed even tournament size number generations required maximum became infeasible compute smaller values aware log-log scaled graph different slopes indicate signiﬁcantly diﬀerent orders scaling. second tests switch random deletion fuds. results appear right graph figure fuds deletion scheme scaling improves dramatically rand tour tour. although problem artiﬁcially constructed results clearly demonstrate deceptive problems much higher levels selection intensity applied using fuds. well known optimisation problem called travelling salesman problem task shortest hamiltonian cycle graph vertexes connected edges certain lengths. exist highly specialised population based optimisers advanced mutation crossover operators capable ﬁnding paths less percent longer optimal path cities goal study relative performance selection deletion schemes highly reﬁned implementation important. thus mutation crossover operators used quite simple mutation achieved switching position cities solution crossover used partial mapped crossover technique fitness computed taking reciprocal tour length. used randomly generated problems distance cities chosen uniformly unit interval chose known particularly deceptive form problem usual triangle inequality relation hold general. example distance cities might cities distance between might problem still structure though eﬃcient partial solutions tend useful building blocks eﬃcient complete tours. problem mutation operator randomly replace either position individual crossover take position individual position another produce oﬀspring. size domain function maximised small small values local maxima ﬁtness level covers space. clearly reach global maximum leaving local maxima exploring space individuals lower ﬁtness values thus respect mutation crossover operators deﬁned deceptive optimisation problem partitions mislead deﬁnition deceptive). test maximum population size made runs value. steady state usual start full population random individuals. however particular problem reduced initial population size order avoid eﬀect large random search created initial population thereby distorting scaling. usually might create diﬃculties poor genetic diversity initial population. however fact individual mutate steps problem situation. initial tests indicated reducing crossover probability improved performance slightly used latter value. test used random distance problems cities population size found changing crossover mutation probabilities improve performance left default values stopping criteria simply generations appeared adequate methods converge allowed easily graph performance versus generations consistent combination selection deletion scheme. ﬁrst graph figure shows selection schemes used random deletion. tour-r insuﬃcient selection intensity adequate convergence tour-r quickly converges local optimum becomes stuck. tour-r correct level selection intensity problem population size. second graph figure shows selection schemes using fuds deletion scheme. fuds performance tournament sizes either stayed improved. case tour improvement dramatic tour improvement also signiﬁcant. interesting shows fuds performance improve selection intensity either high making robust. tour-r selection intensity thus would expect population diversity remain relatively strong. thus fact tour-f much better tour-r shows fuds performance beneﬁts deleting rare individuals predicted earlier section investigating seems eﬀect fuds focuses deletion large mass individuals average level ﬁtness completely leaving less common individuals alone. helps system weak selection intensity move mass population ﬁtness space. higher selection intensity problem tends occur individuals central mass less likely selected thus reducing rate individuals average ﬁtness added population. order better understand stable fuds performance used diﬀerent selection intensities another tests random problems cities graphed performance varied tournament size. tests stop improvement occurred generations. also tested range population sizes results appear figure graphs clearly performance tourx-r varies signiﬁcantly tournament size. optimal tournament size performance declined quickly value also declined though slowly. interestingly population size optimal tournament size small populations value fell presumably partly smaller populations lower diversity thus cannot withstand much selection intensity. contrast every combination tournament size population size result fuds optimal. indeed even optimally tuned tournament size fuds still improved performance. tests exploring performance cities. although performance fuds remained much stronger random deletion selection intensity high selection intensity equal. believe reason following space potential solutions large ﬁnding anything close global optimum practically impossible; indeed diﬃcult even reasonable local optimum space many dimensions. situations important eﬀort simply climbing space rather spreading trying thoroughly explore. thus higher selection intensity advantage large problem spaces. rate large problems high selection intensity fuds hinder performance selection intensity continued signiﬁcantly improve system representation mutation operators crossover follow used beasley compute ﬁtness taking reciprocal cost. results presented based problem standard collection problems results obtained problems test similar. found increasing crossover probability reducing mutation probability improved performance especially selection intensity low. thus tested system crossover probability mutation probability performed test least times order minimise error bars. stopping criteria terminate progress occurred generations. results test appear figure similar graphs importance correctly tuning tournament size tourx-r. also optimal range performance tourx-r moving right population sizes increases. would expect greater diversity larger populations able support selection intensity. kind variability reasons selection intensity parameter usually determined experimentation. fuds results impressive. tests; combinations tournament size population size tested performance fuds superior corresponding performance random deletion. true even tournament size optimally. performance tourx-f vary diﬀerent tournament sizes results robust tourx-r especially larger populations. indeed larger populations situation worst performance tourx-f equal best performance tourx-r. maximum well known hard optimisation problem extensively studied. three literal conjunctive normal form logical equation boolean equation consists conjunction clauses clause contains disjunction three literals. goal maximum problem instantiation variables maximum number clauses evaluate true. thus equation clause evaluates true thus instantiation gets score one. achieving signiﬁcant results area would diﬃcult aim; simply using problem test compare deletion schemes. known satisﬁable. based test results crossover mutation probabilities left default values. mutation operator simply ﬂips boolean variable crossover operator forms individual randomly selecting variable parent’s state take. fitness simply taken number clauses satisﬁed. previous sections tested across range tournament sizes population sizes. results tests appear figure shown population sizes population sizes tested followed pattern. interestingly problem evidence better performance fuds higher selection intensities. matter decline performance tourx-r seen elsewhere. indeed random deletion selection intensity appeared impact performance all. hard optimisation problem lack dependence selection intensity parameter suggests deceptive structure fuds designed for. selection intensity fuds caused performance fall random deletion; something seen before. advantages fuds apparent populations test problems also tested system population size unfortunately interesting changes behaviour observed. suspected uniform nature population distribution occur fuds might blame expect beneﬁt deceptive problems sensitive tuning selection intensity parameter. thus population graphed population distribution across number clauses satisﬁed run. stopped made progress generations. results appear figure ﬁrst thing note tour-r population collapses narrow band ﬁtness levels expected. tour-f distribution uniform though practically none population satisﬁes fewer clauses. reason quite simple fuds levels population distribution tour tends select individuals thus pushes population right starting point. clauses much beneﬁt. total population diversity fuds might high perhaps kind diversity matters diversity among relatively individuals population. true deceptive problems. thinly spreading population across wide range ﬁtness levels actually individuals kind diversity matters. course depends nature problem trying solve ﬁtness function use. problems directly measure population diversity taking average hamming distance individuals’ genomes. means value ﬁtness based similarity metric questionable problem direct methods applied useful situation analysis allows directly measure eﬀective fuds preserving population diversity. hope course positive beneﬁts seen also carry problems directly measuring diversity much diﬃcult. diversity tests used population size again. comparison used tour tour random deletion fuds. calculated diﬀerent statistics average hamming distance individuals whole population average hamming distance individuals whose ﬁtness ﬁttest individual population time. measurements give total population diversity ﬁtness diversity graphs figure graphed measurements number clauses satisﬁed ﬁttest individual rather number generations. fair good solutions found quickly equally rapid decline diversity acceptable expected. indeed trivial come system always maintains high population diversity however long runs unlikely good solutions. results averaged problems test set. best solution found varied graphed curve point fewer runs able achieve level ﬁtness. thus terminal point right curve representative fairly typical runs rather exceptional ones perhaps found unusually good solutions chance. left graph figure shows total population diversity. expected diversity tour-r tour-r decline steadily ﬁnding better solutions becomes increasingly diﬃcult population tends collapse narrow band ﬁtness. also total population diversity tour-r higher tour-r would expect. importantly fuds signiﬁcantly improved total population diversity tour tour desired. however maximal solution found tour-f tour-f better tour-r tour-r indicates improved total population diversity signiﬁcant factor optimisation problem. right graph diversity among ﬁtter individuals population. tour signiﬁcantly greater diversity tour deletion schemes. expected tour tends search evolutionary paths tour rushes few. disappointingly fuds appear made much diﬀerence diversity among highly individuals though curves appear ﬂatten little diversity drops perhaps fuds slight impact. summary results show fuds successful maximising total population diversity problems suﬃcient. appears important maximises diversity among individuals reasonably high ﬁtness. used tournament selection test fuds random deletion several optimisation problems different population sizes mutation probabilities crossover probabilities. artiﬁcial deceptive problem random distance matrix problems problem fuds consistently superior returning better results random deletion every combination tournament size population size tested. particularly signiﬁcant given fuds trivial implement computational cheap largely problem independent. problems however results less impressive. performance fuds comparable random deletion medium high selection intensity inferior random deletion selection goldberg alleles. loci traveling salesman problem. proc. international conference genetic algorithms applications pages lawrence erlbaum associates goldberg richardson. genetic algorithms sharing multi-modal function optimization. proc. international conference genetic algorithms applications pages cambridge july lawrence erlbaum associates. salesman problem case study. aarts lenstra editors local search combinatorial optimization discrete mathematics optimization chapter pages wiley-interscience chichester england rogers pr¨ugel-bennett. modelling dynamics steady-state genetic algorithm. banzhaf reeves editors foundations genetic algorithms pages morgan kaufmann francisco intensities. investigating found total population diversity improved expected diversity among individuals not. however because performance tourx-r reduced high selection intensity indicates problems kind diversity problems fuds designed overcome. problems serious population diversity diﬃculties greedy exploration harshly punished.", "year": 2005}