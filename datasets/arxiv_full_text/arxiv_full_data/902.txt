{"title": "Genetic Algorithms for Mentor-Assisted Evaluation Function Optimization", "tag": ["cs.NE", "cs.LG", "stat.ML"], "abstract": "In this paper we demonstrate how genetic algorithms can be used to reverse engineer an evaluation function's parameters for computer chess. Our results show that using an appropriate mentor, we can evolve a program that is on par with top tournament-playing chess programs, outperforming a two-time World Computer Chess Champion. This performance gain is achieved by evolving a program with a smaller number of parameters in its evaluation function to mimic the behavior of a superior mentor which uses a more extensive evaluation function. In principle, our mentor-assisted approach could be used in a wide range of problems for which appropriate mentors are available.", "text": "paper demonstrate genetic algorithms used reverse engineer evaluation function’s parameters computer chess. results show using appropriate mentor evolve program tournament-playing chess programs outperforming two-time world computer chess champion. performance gain achieved evolving program smaller number parameters evaluation function mimic behavior superior mentor uses extensive evaluation function. principle mentor-assisted approach could used wide range problems appropriate mentors available. since dawn modern computer science game playing posed formidable challenge ﬁeld artiﬁcial intelligence. many founding ﬁgures computer science arguably longest ongoing performance evaluation programs computer science inspired well-known competitions robotics planning natural language understanding. computer chess researched ﬁelds within lent successful application conventional learning methods enormous complexity. hence current chess programs manually tuned parameters evaluation function critical component chess program. paper introduce novel mentor-assisted approach automatically evolving parameters chess program’s evaluation function genetic algorithms results show mentor-assisted approach application eﬃciently evolves parameters evaluation function randomly initialized values highly tuned ones yielding program outperforms original version wide margin. performance achieved evolved program whose evaluation function considerably compact mentor terms number parameters. section review past attempts applying evolutionary techniques computer chess also compare alternative learning methods evolutionary methods arguing latter appropriate task question. section provides mentor-assisted approach including detailed description chess programs used framework applied problem. section provides experimental results section contains concluding remarks suggestions future research. enormously complex game chess referred touchstone intellect goethe always main battlegrounds versus machine refers chess drosophila ai). chess-playing programs come long past several decades. ﬁrst chess programs could pose challenge even novice player current advanced chess programs strongest human chess players recent machine matches clearly indicate. improvement largely result deep searches possible nowadays thanks hardware speed improved search techniques. search depth early chess programs limited plies nowadays tournament-playing programs easily search dozen plies middlegame tens plies late endgame. despite groundbreaking achievements glaring deﬁciency chess programs today near total lack learning capability resulting criticism despite intelligent behavior chess programs underlying intelligence mere brute-force searchers. ﬁfty years research area computer games many learning methods reinforcement learning employed simpler games. temporal diﬀerence learning successfully applied backgammon checkers although temporal diﬀerence learning also applied chess results showed three days learning playing strength program merely rating chess program. wiering provided formal arguments failure methods complicated games chess. problem learning computer chess basically optimization problem. program plays conducting search current position root search tree applying static evaluation function leaf nodes. words sophisticated search algorithms knowledge program evaluation function. even though automatic tuning methods based mostly reinforcement learning successfully applied simpler games checkers none found state-of-the-art chess engines. currently tournament-playing chess programs hand tuned evaluation functions since conventional learning methods cannot cope enormous complexity. search space smooth unimodal. evaluation function’s parameters chess program highly co-dependent. example many cases increasing values three parameters result worse performance fourth parameter also increased improved overall performance would obtained. since search space unimodal i.e. consist single smooth hill gradient-ascent algorithm hill climbing perform poorly. problem well understood. discussed detail next section even though performing programs hand tuned programmers ﬁnding best value parameter mostly based educated guessing intuition. problem well understood domain-speciﬁc heuristic would outperformed general-purpose method require global optimum found. goal tuning evaluation function adjust parameters overall performance program enhanced. fact unique global optimum exist tuning problem. ﬁrst glance automatic tuning evaluation function appears like optimization task well suited many parameters evaluation function encoded bit-string. randomly initialize many chromosomes representing evaluation function. thereafter needs evolve population highly tuned evaluation functions emerge. however major obstacle hinders application namely ﬁtness function. given evaluation parameters ﬁtness value calculated? many years seemed solution individuals generation play series games subsequently take score individual ﬁtness value. main drawback approach unacceptably large amount time needed evolve generation. result severe limitations imposed length games played generation also size population involved. population size extreme limitation minute game side assuming individual plays least games would take minutes generation evolve. time constraints reaching generation would take less days. next section present mentor-assisted approach using state-of-the-art chess programs. before that brieﬂy review previous work applying evolutionary methods computer chess. despite abovementioned problems successful applications evolutionary techniques computer chess subject restrictions. genetic programming successfully employed hauptman sipper evolving programs solve mate-in-n problems play chess endgames. kendall whitwell used evolutionary algorithms tuning evaluation function parameters. approach limited success large number games required small number similarly aksenov used genetic algorithms evolving evaluation function parameters using games organisms determining ﬁtness. again since method required large amount games method evolved evaluation function parameters limited success. tunstall-pedoe also suggested similar approach without providing implementation. gross used hybrid genetic programming evolution strategies improve eﬃciency already existing search algorithm using distributed computing environment internet. following section present novel approach facilitates eﬃciently evolving evaluation function’s parameters. results demonstrate method fast evolved program world’s strongest chess programs. impediments already discussed establishing ﬁtness evaluation means playing numerous games practical. however exploit vast reservoir previously under-utilized information. evaluation functions existing chess programs carefully guarded secrets standard practice chess program reveal score given position encountered game. propose genetic algorithms essentially reverse engineer evaluation functions. reverse engineering carried rapidly successfully fact program based evaluation function learned particular mentor perform well mentor. speciﬁcally program evolves evaluation function mentor using steps appearing figure individual evaluate problems problem calculate average diﬀerence value given individual value issued mentor. ﬁtness individual inversely proportional average diﬀerence. case problem associated chess position mentor evaluation function stateof-the-art chess engine. words generate list random chess positions generation strong chess engine evaluate them. afterwards evaluation function individuals evaluate positions. closer evaluation individual evaluation mentor higher ﬁtness value work used maestro falcon chess programs. falcon rated grandmaster-level chess program successfully participated world computer chess championships. falcon uses negascout/pvs search null-move pruning internal iterative deepening dynamic move ordering multi-cut pruning selective extensions transposition table futility pruning near leaf nodes blockage detection endgames falcon extensive evaluation function consisting several thousand lines code using evaluation function parameters. maestro experimental program considerably weaker falcon employs identical search techniques diﬀers falcon evaluation function. maestro’s evaluation function much smaller consisting fewer parameters. since programs diﬀer evaluation function element solely responsible vastly diﬀerent performances. stronger program falcon mentor evolve evaluation function maestro mimic behavior mentor thereby improving strength. output falcon’s evaluation function otherwise assume know nothing methods falcon uses compute function. thus falcon’s scores optimize parameters maestro parameters falcon unknown simpler evaluation function falcon’s maestro’s evaluation function cover important aspects position. main features evaluation function material piece mobility centricity pawn structure king safety. show comparable performance achieved considerably smaller number parameters mentor’s evaluation function. order demonstrate eﬀectiveness mentorbased approach chose entirely ignore initial values evaluation function parameters instead assign random values them. words maestro weaker falcon initializing randomly evaluation function parameters play like novice knowledge game represent evaluation function parameters maestro binary bit-string initialized randomly. addition random initialization impose following restriction except parameters representing material values pieces parameters assigned ﬁxed length bits parameter. obviously many parameters bits suﬃce. however allocated ﬁxed length bits parameters priori knowledge would bias algorithm way. figure shows average error position best organism population average generations. evaluation unit chess programs commonly called centipawn i.e. value pawn. traditionally pawn value assigned value ﬁgures assigned relative values pawn. however value pawn need necessarily unit evaluation longer necessarily equal pawn. despite inconsistency term centipawn still used denote smallest evaluation unit. results figure show ﬁrst generations average error centipawns best organism’s error huge initial error surprising initialized values randomly lack initial knowledge results large initial errors correspond ﬁtness values organisms. results rapid extinction individuals highly erroneous parameter values. early generation best organism’s average error drops centipawns. stage large parameter values already well-tuned organisms remaining generations smaller values tuned. generation average error best organism centipawns average error population centipawns. figure provides evolved values best individual. completion learning phase used additional positions aside testing. best evolved organism evaluate positions compared evaluation mentor average error centipawns. indicates ﬁrst positions used training cover types positions arise average error simalready described goal evolve parameters maestro evaluation function would produce close score possible evaluation function falcon given position. experiments used database grandmaster games randomly chose position game. positions selected positions training testing. positions assumed white’s turn move ﬁrst falcon search positions depth plies stored evaluation position. then generation randomly selected positions designated positions learning phase. random selection positions generation introduces additional variety help prevent premature convergence suboptimal values. organism translate chromosome bit-string corresponding evaluation function apply evaluation function positions examined organism score position denoted sip. position deﬁne organism’s error apart special ﬁtness function described above used standard implementation proportional selection single point crossover. following parameters used results clearly demonstrate evolution converges quickly values close mentor. words within minutes evolved evaluation function random values values result behavior closely resembling mentor. subsection provide results series matches programs. matches consisted games time control minutes game side. interested comparing performance original maestro falcon performance evolved program mentor falcon. also compare evolved maestroga original maestro. table provides results games played. results match falcon maestro show falcon considerably stronger maestro. mentioned earlier programs diﬀer evaluation function falcon larger evaluation function. noted terms choice parameters respects values assigned parameter maestroga basically original maestro program. despite smaller evaluation function mentor-assisted evolves parameter values maestroga’s performance essentially identical mentor falcon. head head competition falcon proves falcon’s equal. moreover evolved maestroga resoundingly defeats original version scoring results clearly demonstrate importance eﬃcient automatic parameter tuning. despite fact evaluation function parameters original maestro manually tuned automatic tuning started random values managed produce much better results human-picked values resulting vast rating difference. finally three additional matches consisting games chess program crafty robert hyatt crafty successfully participated numerous world computer chess championships direct descendent cray blitz winner wccc. crafty frequently used literature standard reference. thus compared original maestro evolved maestroga mentor falcon crafty. table provides results. results show crafty stronger original maestro evolved version clearly superior crafty. interestingly maestroga’s performance crafty actually marginally better mentor. mentor. measuring tactical strength programs used encyclopedia chess middlegames test suite consisting positions. program given seconds position. table provides results. seen maestroga solved signiﬁcantly problems maestro even falcon. summary results show mentor-assisted approach application allows eﬃcient evolution parameters exhibit behavior similar mentor. even though evolved parameters scratch chromosome initialized randomly evolved values proved perform substantially better hand tuned values original version. results games played demonstrate marked performance superiority evolved version original version. paper presented novel mentor-assisted approach automatic tuning parameters. wherever already intelligent entity exists serve mentor evolve organisms mimic behavior mentor. words approach enables duplication another intelligent organism’s behavior merely looking behavior access underlying mechanism mentor. experimental results showed within minutes organisms evolved randomly initialized chromosome highly tuned parameters produced similar behavior mentor terms relative performance observed respect positions. results games played demonstrated signiﬁcant gain evolved version clearly outperformed original version. note successful duplication mentor’s behavior achieved despite fact considerably smaller number parameters used evaluation function evolved program. future research intend develop capabilities based presented mentor-assisted approach. paper showed another computer program serve mentor. however using human players mentors diﬃcult case access numerical evaluation position. believe though database containing hundreds games human player provide suﬃcient data learning take place. method intend experiment with extract several thousand positions games played human mentor position assign higher ﬁtness organism produces move played mentor. approach successful would basically enable program behave like mentor without access his/her brain. example might able develop program plays like kasparov learning games. work used single mentor. alternative implementation several mentors using wisdom crowds concept evolve individual wiser mentors. well-known chess program strengths weaknesses. using several mentor chess engines might possible combine strengths them outperform individual mentor. mentor-assisted approach could also applied problem player recognition. given list players simplest approach separately evolve organisms mimicking behavior respective player. then given game played players organisms would apply evaluation position player whose cloned organism agrees closely moves played game likely player game. finally believe method ga-based parameter tuning suggested could applied wide array problems output mentor’s evaluation function available training purposes. rating system developed prof. arpad oﬃcial system calculating relative skill levels players chess. following statistics january fide rating list provide general impression meaning ratings four players ever rating above. novice player generally associated rating values elo. given rating diﬀerence players following formula calculates expected winning rate player gross albrecht kantschik banzhaf. evolving chess playing programs. proceedings genetic evolutionary computation conference pages morgan kaufmann publishers york approach tuning chess evaluation function using population dynamics. proceedings congress evolutionary computation pages ieee press world trade center seoul korea schaeﬀer hlynka jussila. temporal diﬀerence learning applied high-performance game-playing program. proceedings international joint conference artiﬁcial intelligence pages seattle", "year": 2017}