{"title": "A step towards procedural terrain generation with GANs", "tag": ["stat.ML", "cs.CV"], "abstract": "Procedural terrain generation for video games has been traditionally been done with smartly designed but handcrafted algorithms that generate heightmaps. We propose a first step toward the learning and synthesis of these using recent advances in deep generative modelling with openly available satellite imagery from NASA.", "text": "paper leverage extremely high-resolution terrain heightmap data provided nasa ‘visible earth’ project conjunction generative adversarial networks create two-stage pipeline heightmaps randomly generated well texture inferred heightmap. concretely synthesise height texture maps using random crops original nasa images seen figure formulation suppose k-dimensional sample draw prior distribution heightmap generated texture generated corresponding heightmap. think process comprised gans ‘dcgan’ generates heightmap noise ‘pixpix’ refers conditional gans imageto-image translation. denote dcgan generator discriminator respectively formulate training objective gan-speciﬁc loss e.g. binary cross-entropy regular formulation squared error lsgan write similar equations pixpix instead instead respectively. note discriminator case actually takes arguments either real heightmap real texture pair real heightmap generated texture pair also note pixpix part network also employ form pixel-wise reconstruction loss prevent generator dropping procedural terrain generation video games traditionally done smartly designed handcrafted algorithms generate heightmaps. propose ﬁrst step toward learning synthesis using recent advances deep generative modelling openly available satellite imagery nasa. procedural generation video games algorithmic generation content intended increase replay value interleaving gameplay elements unpredictability. contrast traditional ‘handcrafty’ generation content generally higher quality added expense labour. prominent game whose premise almost entirely based procedural terrain generation minecraft game player explore vast open world whose terrain based entirely voxels allowing player manipulate terrain explore interesting landscapes terrains procedurally generated host algorithms designed mimic real-life terrain. prominent examples include perlin noise diamond square greyscale image generated noise source which rendered mesh produces terrain. methods quite fast generate terrains quite simple nature. software employ sophisticated algorithms user control kind terrain desire produce impressive terrains would still seem like exciting endeavour leverage power generative networks deep learning generated heightmap size experienced issues training stability able generate heightmaps somewhat faithful original images. generate illustrate linear interpolation shown figure interpolation shown purely illustrative purposes could imagine dcgan successfully learned representations different landscapes could latent representations bidirectional like bigan interpolate decode control resulting heightmap. apart aforementioned stability issues generated heightmaps sometimes exhibit small-scaled artifacts seen ﬁrst generated heightmap experimenting deeper architectures and/or skip connections could mitigate this easy trick apply slight blur ﬁnal images gaussian kernel convolution. serve smooth weird artifacts generated dcgan. textures pixpix pixpix created textures roughly ‘match’ corresponding heightmaps. example regions relatively higher elevation heightmap correspond different textures. interestingly parts textures completely white; appears side-effect training dcgan pixpix gans jointly. work achieved reasonable ﬁrst step toward procedural generation terrain based real-world data. obvious next step would jointly train dcgan pixpix gans. neat addition idea would addition segmentation pipeline classify different parts terrain e.g. biomes. effectively serves layer metadata leveraged interesting detail terrain. example segmentation identiﬁes certain region generated terrain ‘jungle’ game engine automatically populate region trees plants. two-stage framework described many applications procedural generation outside terrain modelling. example imagine scheme applied synthesise meshes textured kinds possibilities serve promote richer entertainment experiences also provide useful tools content producers work. figure heightmaps generated corresponding textures predicted texture seems think high elevations snow despite fact generating deserts madness? pretend salt ﬂats now. dumoulin vincent belghazi ishmael poole lamb alex arjovsky martin mastropietro olivier courville aaron. adversarially learned inference. arxiv preprint arxiv. goodfellow pouget-abadie jean mirza mehdi bing warde-farley david ozair sherjil courville aaron bengio yoshua. generative adversarial nets. advances neural information processing systems isola phillip jun-yan zhou tinghui efros alexei image-to-image translation conditional adversarial networks. corr abs/. http//arxiv.org/abs/.. radford alec metz luke chintala soumith. unsupervised representation learning deep concorr volutional generative adversarial networks. abs/. http//arxiv.org/ abs/.. dataset prepared follows. first downloaded high-res heightmap texture earth found here here. slide window images simultaneously retain pairs heightmap’s colour composition less black; feed data ‘trivial’ generate. note point textures collection correspond various biomes jungle desert arctic theory particular heightmap could correspond biomes address this choose ‘reference texture’ biome interest compute euclidean distance texture textures collection. this choose pairs smallest distances reference texture ﬁnal collection contains pairs whose biome interest desert.", "year": 2017}