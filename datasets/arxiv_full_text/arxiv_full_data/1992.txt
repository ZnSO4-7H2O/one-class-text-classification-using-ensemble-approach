{"title": "The Fundamental Learning Problem that Genetic Algorithms with Uniform  Crossover Solve Efficiently and Repeatedly As Evolution Proceeds", "tag": ["cs.NE", "cs.AI", "cs.CC", "cs.DM", "cs.LG", "I.2.8; I.2.6; F.2"], "abstract": "This paper establishes theoretical bonafides for implicit concurrent multivariate effect evaluation--implicit concurrency for short---a broad and versatile computational learning efficiency thought to underlie general-purpose, non-local, noise-tolerant optimization in genetic algorithms with uniform crossover (UGAs). We demonstrate that implicit concurrency is indeed a form of efficient learning by showing that it can be used to obtain close-to-optimal bounds on the time and queries required to approximately correctly solve a constrained version (k=7, \\eta=1/5) of a recognizable computational learning problem: learning parities with noisy membership queries. We argue that a UGA that treats the noisy membership query oracle as a fitness function can be straightforwardly used to approximately correctly learn the essential attributes in O(log^1.585 n) queries and O(n log^1.585 n) time, where n is the total number of attributes. Our proof relies on an accessible symmetry argument and the use of statistical hypothesis testing to reject a global null hypothesis at the 10^-100 level of significance. It is, to the best of our knowledge, the first relatively rigorous identification of efficient computational learning in an evolutionary algorithm on a non-trivial learning problem.", "text": "paper establishes theoretical bonaﬁdes implicit concurrent multivariate eﬀect evaluation—implicit concurrency short—a broad versatile computational learning eﬃciency thought underlie general-purpose non-local noise-tolerant optimization genetic algorithms uniform crossover demonstrate implicit concurrency indeed form eﬃcient learning showing used obtain close-to-optimal bounds time queries required approximately correctly solve constrained version recognizable computational learning problem learning parities noisy membership queries. argue treats noisy membership query oracle ﬁtness function straightforwardly used approximately correctly learn essential attributes queries time total number attributes. proof relies accessible symmetry argument statistical hypothesis testing reject global null hypothesis level signiﬁcance. best knowledge ﬁrst relatively rigorous identiﬁcation eﬃcient computational learning evolutionary algorithm non-trivial learning problem. recently hypothesized eﬃcient form computational learning underlies generalpurpose non-local noise-tolerant optimization genetic algorithms uniform crossover hypothesized computational eﬃciency implicit concurrent multivariate eﬀect evaluation— implicit concurrency short—is broad versatile carries signiﬁcant implications eﬃcient large-scale general-purpose global optimization presence noise turn large-scale machine learning. paper describe implicit concurrency explain power general-purpose non-local noise-tolerant optimization. establish implicit concurrency bonaﬁde form eﬃcient computational learning using obtain close optimal bounds query time complexity algorithm solves constrained version problem computational learning literature learning parities noisy membership query oracle first brief primer schemata schema partitions search space consisting binary strings length indices i.e. represents partition subsets called schemata following example suppose partitions symbol stands ’wildcard’. partitions type called schema partitions. we’ve already seen schemata expressed using templates example goes schema partitions. example denotes schema partition represented index shown above. symbol stands ’deﬁned bit’. ﬁneness order schema partition simply cardinality index deﬁnes partition equivalent number symbols schema partition’s template clearly schema partitions lower ﬁneness order coarser schema partitions higher ﬁneness order. leti denote schema partition represented index consider following large consider search space theni ﬁnest possible eﬀect remove elements easily seen eﬀect decreases secondly observe number schema partitions order thus eﬀects averaging. words coarse schema partitions numerous ones non-negligible eﬀects rare. implicit concurrent multivariate eﬀect evaluation capacity scaleably learning small numbers coarse schema partitions non-negligible eﬀects. amounts capacity eﬃciently performing vast numbers concurrent eﬀect/noeﬀect multivariate analyses identify small numbers interacting loci. assuming implicit concurrency possible used power eﬃcient general-purpose non-local noise-tolerant optimization? consider following heuristic implicit concurrency performing search remaining loci. words picking schema eﬀectively yields lower-dimensional search space. importantly coarse schema partitions search space negligible eﬀects search space detectable eﬀects space. implicit concurrency pick limit future search schema partition highest average sampling ﬁtness. recurse. heuristic non-local make neighborhood information sort. noise-tolerant sensitive average ﬁtness values coarse schemata. claim general-purpose ﬁrstly relies weak assumption distribution ﬁtness search space—the existence staggered conditional eﬀects secondly example decimation heuristic good company. decimation heuristics survey propagation belief propagation used concert local search heuristics state methods solving large instances number np-hard combinatorial optimization problems close solvability/unsolvability thresholds. hyperclimbing hypothesis posits large heuristic described abstract heuristic ugas implement—or case often misimplement diﬀerence recursive step capable identifying multiple coarse schema partitions non-negligible eﬀects; another diﬀerence coarse schema partition identiﬁed always pick schema highest average sampling ﬁtness. unfortunately several aspects description crisp. indeed formal statement above much less formal proof diﬃcult provide. evolutionary algorithms typically constructed biomimicry formal analyzability mind. makes diﬃcult formally state/prove complexity theoretic results without making simplifying assumptions eﬀectively neuter algorithm ﬁtness function used analysis. appropriate response hurdle. science rigorously practiced foundation many useful ﬁeld engineering. hallmark rigorous science ongoing making testing predictions. predictions found true lend credence hypotheses entail them. unexpected prediction greater credence owed hypothesis prediction validated work follows validates prediction straightforwardly entailed hyperclimbing hypothesis namely uses noisy membership query oracle ﬁtness function able eﬃciently solve learning parities problem small values number essential attributes non-trivial values probability oracle makes classiﬁcation error result completely unexpected absence hypothesis. given name description terms concepts schema theory implicit concurrency bears superﬁcial resemblance implicit parallelism hypothetical engine presumed beleaguered building block hypothesis power optimization genetic algorithms strong linkage genetic loci. hypothetical phenomena emphatically same. preface comparison observation strictly speaking implicit concurrency implicit parallelism pertain diﬀerent kinds genetic algorithms—ones tight linkage genetic loci ones linkage all. diﬀerence makes hypothetical engines optimization non-competing scientiﬁc perspective. nevertheless comparison instructive reveals power implicit concurrency. satisﬁes following adjacency constraint elements adjacent close evaluated characteristic greater evaluated characteristics schemata ini. elements unconstrained. evaluated characteristic eﬀect eﬀect negligible schema implicit concurrency derives superior power viz-a-viz implicit parallelism absence adjacency constraint. example chromosomes length number schema partitions number schema partition ﬁneness order contain constant number schemata thus ﬁneness order number units evaluation implicit parallelism whereas number units evaluation implicit concurrency positive integer denote binary string denote string }|k| smallest element essential attribute oracle random classiﬁcation error tuple positive integers boolean function random classiﬁcation error parameter obeys function random classiﬁcation error parameter learning problem approximately correctly solved exists algorithm oracle returns hypothesis target concept. denote parity function bits. give algorithm approximately correctly learns queries time. adjusted signiﬁcance level rejection global null hypothesis level signiﬁcance. result based conclusions chance false. approximately correct learning lends straightforward comparisons forms learning computational learning literature following weaker deﬁnition learning naturally captures computation performed implicit concurrency. boolean function random classiﬁcation error parameter learning problem attributewise \u0001-approximately correctly solved exists algorithm oracle returns hypothesis target concept. construction algorithm capable approximately correctly solving learning problem queries time. part argument entirely formal require knowledge genetic algorithms statistical hypothesis testing. oracle output boolean function invariant reordering inputs element xπ)) genetic algorithm described algorithm population size mutation rate uses ﬁtness function. appreciation algorithmic symmetries eﬀect yields following conclusions generation deﬁne essential nonessential probability distributions onefreq onefreq respectively. given conclusions reached above distributions well deﬁned. appreciation algorithmic symmetries eﬀect yields following conclusion algorithm pseudocode simple genetic algorithm uniform crossover. population stored array bits representing single chromosome. rand returns number drawn uniformly random interval rand denotes array bits probability variables drawn distribution nonessential lemma chance -frequency last locus generation runs seen figure less gives p-value less hypothesis nonessential p-values less bonferroni adjusted critical value reject global null hypotheses essential nonessential marginally higher known optimal bounds diﬃcult version problem oracle queried non-adaptively respectively tighter bounds query complexity obtained achieved using recursive majority voting higher branching factor however purposes bounds obtained suﬃce. ﬁnding genetic algorithm uniform crossover straightforwardly used obtain wholly unexpected lends support hypothesis implicit concurrent multivariate eﬀect evaluation powers general-purpose non-local noise-tolerant optimization genetic algorithms uniform crossover.", "year": 2013}