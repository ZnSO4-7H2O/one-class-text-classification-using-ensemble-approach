{"title": "(Blue) Taxi Destination and Trip Time Prediction from Partial  Trajectories", "tag": ["stat.ML", "cs.AI", "cs.CY", "cs.LG", "I.2.6; I.5.2"], "abstract": "Real-time estimation of destination and travel time for taxis is of great importance for existing electronic dispatch systems. We present an approach based on trip matching and ensemble learning, in which we leverage the patterns observed in a dataset of roughly 1.7 million taxi journeys to predict the corresponding final destination and travel time for ongoing taxi trips, as a solution for the ECML/PKDD Discovery Challenge 2015 competition. The results of our empirical evaluation show that our approach is effective and very robust, which led our team -- BlueTaxi -- to the 3rd and 7th position of the final rankings for the trip time and destination prediction tasks, respectively. Given the fact that the final rankings were computed using a very small test set (with only 320 trips) we believe that our approach is one of the most robust solutions for the challenge based on the consistency of our good results across the test sets.", "text": "abstract real-time estimation destination travel time taxis great importance existing electronic dispatch systems. present approach based trip matching ensemble learning leverage patterns observed dataset roughly million taxi journeys predict corresponding final destination travel time ongoing taxi trips solution ecml/pkdd discovery challenge competition. results empirical evaluation show approach effective robust team bluetaxi position final rankings trip time destination prediction tasks respectively. given fact final rankings computed using small test believe approach robust solutions challenge based consistency good results across test sets. taxi dispatch planning coordination challenging given traffic dynamics modern urban cities. improvement electronic dispatching taxis positive impact city reducing traffic congestion environmental impact also improving local economy e.g. mobilizing customers cities demand taxis high. current electronic dispatch systems capture localization taximeter state mobile data terminals installed gps-enabled taxis. collective traffic dynamics extracted taxis’ trajectories stream data collected real-time represent valuable source information understand predict behavior future trips. particular interested improving taxi electronic dispatch predicting final destination total trip time ongoing taxi rides based initial partial trajectories. solution challenge valuable given cases busy taxi drivers tasks namely taxi destination trip time prediction ones correspond discovery challenge part ecml/pkdd paper details data-driven solution challenge placed team bluetaxi position final ranking time destination prediction task respectively. particular given data roughly million taxi journeys taxis operating city porto portugal period year. besides polylines updates every taxi trip provided additional information includes taxi origin call taxi stand starting timestamp ride etc. competition hosted kaggle’s platform allows participants submit predictions given test whose ground-truth held competition organizers. submissions scored immediately summarized live public leaderboard competition held-out test i.e. participants receive feedback used compute final rankings also known private challenge details dataset characteristics found solution based simple intuition trips similar route likely nearby destinations. example figure shows complete trips extracted data. trips ended porto airport. although first parts trips different last parts trips same. therefore using destinations similar trips past predict destination test trip. simple intuition serves idea behind approach extract features similar trips build model ensemble based constructed features predict taxis’ destination travel time. next sections detail feature extraction process predictive models approach present experimental results show effectiveness solution. initial data exploration found dataset contains missing updates erroneous information. fact missing value column part dataset erroneous values column false even though records included missing information. detected missing points also found trip start timestamp information unreliable e.g. trips test starting timestamps hours cuttimestamps corresponding snapshot contain updates. moreover taxi trips unusual trajectories e.g. noted taxi drivers forgot turn meter completing trip instance back city center dropping passenger airport turning back trajectories difficult predict. considering issues preprocessed data accordingly extracted features detailed section serve input build predictive models destination trip time prediction. predicting destination given incomplete test trip method based trip matching uses destinations trips training data similar trajectories predict final destination given test trip. figure shows example trips different starting points going toward porto airport. final part trips similar trips took highways ending destination. captures pattern features described follows. final destination coordinates haversine distance nearest neighbors given test trip search trips training data closest similarly pair trips compute mean haversine distance corresponding points trajectories. ignored trips fewer updates ones kernel regression smooth version k-nn regression method. previous work arrival time prediction shows gives better results k-nn destinations calculated used features estimate final destination test trip. requires bandwidth parameter experiment obtain three different kr-based destination predictions corresponding values. aforementioned features sensitive metric used evaluating similarity trips. experimented dynamic time warping mean haversine distance latter metric chosen given efficiency computation. moreover trips different initial trajectory still share destination e.g. figure therefore besides computing predictions full trip also compute using pair trips also consider distance metric looks best match along trajectories without alignment. empirical results showed predictions best matching gives accurate results first aligning initial part trajectory b’s. features described consider contextual information taxi call taxi stand time week important consider example figure shows heatmap destinations trips origin call training data destination quite regular although overall trips major destinations identified. work exploit information using match test trip trips call taxi week hour taxi stand called models based features contextual contextual field test trip missing value corresponding contextual replaced prediction contextual information. empirical results showed contextual kr-based prediction call gave best results among contextual related features. observed many updates erroneous e.g. coordinates completely outside trajectory shape updates close together traffic taxi parked stays still location meter type noisy updates influence performance prediction especially using mean haversine distance metrics requires point point comparison across trips. therefore used algorithm simplify trips parameter equal directly partially observed trips euclidean distance traveled haversine distance first last update. direction define whether taxi moving outside city vice versa. compared distance city center first last point trips. former larger taxi considered moving toward city center moving away otherwise. time cut-off timestamps starting timestamps. observed feature reliable starting timestamps quite noisy. number updates week. observed prediction error higher days week random forest model used experiments rank feature high destination prediction first last location. features time prediction task similar features destination prediction difference travel time closest trips considered target variable instead destination. features extracted task follows. travel time haversine distance nearest neighbors. kernel regression features. related features destination prediction also extracted time prediction difference travel time closest trips considered target variable instead destination. addition features extracted partially observed trips described previous section also considered following additional particular features time prediction extracted directly incomplete trips observed average speed calculated last meters partial trajectory observed features convey up-to-date traffic condition moment making prediction. average speed calculated incomplete trips observed starting time hour apart cut-off time-stamp. features convey information traffic condition around snapshot timestamps. average acceleration calculated last meters incomplete trips shape complexity ratio traveled distance haversine distance first last location. trips higher complexity tend trips taxi drivers driving around city search passengers. zig-zag trips tend longer travel time reasonable identify trips beforehand. missing values trace identified calculating speed between pair consecutive updates. estimated speed speed limit km/h even pair consecutive updates partially observed trip trip labelled trip missing updates. order train predictive models first created local training dataset considering time snapshots weekdays resemble disclosed test fixed trained models. overall extracted trips snapshots training data small fraction million trips original training set. also considered roughly additional trips snapshots start timestamps hour specified test snapshots. however models trained combined sets yielded improvement locally public leaderboard. therefore decided ignore additional training trips although practice obtain robust results consider additional data training models well. observed feature extraction training efficient features extracted based nearest neighbor search. order speed process propose index structure based geohash first represent geohash search nearest trips range queries retrieve trips maximum distance threshold first point test trip. simple indexing technique speeds nearest neighbor search significantly since range queries efficient geohashes. important note technique heuristic solution guarantee exact nearest neighbors results. however observe significant differences prediction results exact approximated nearest neighbors used. given features regression model used predict latitude longitude independently. chose random forest given robustness predictions observed local validation public test set. besides models also experimented support vector regression results public differ much used final destination prediction. moreover model easily assess contribution feature final prediction. insight know whether features relevant every time added model. thanks could perform feature selection using rfcv function provided randomforest package feature selection obtained results differ public results robust fact needs fewer trees obtain similar prediction results. handle outliers first trained initial model trees removed training trips prediction error greater error quantile. subsequently model re-trained training became final model. trip time prediction training models removed outliers trip travel time exceeded median absolute deviation furthermore trained models using target variable delta time cut-off time point training snapshot timestamp associated last point trajectory. goal train models predict trip time remaining given ongoing trip. preprocessing strategy significantly better results. then used features described section train model ensemble robust prediction. individual members ensemble include following regression models gradient boosted regression trees random forest regressor extremely randomized trees regressor train models remaining training data model compute predictions validation validation corresponding true trip time known leads supervised learning problem using predictions input correct responses output train meta-regressor ensemble predictions. insert validation back training data train models using predict test obtain ensemble final prediction test using defined equation experimented regularized linear regression simple average meta-regressor produce final prediction. results approach presented section competition performance ground-truth test held organizers available test trips limited number submissions kaggle’s website. therefore order analyze predictions results locally split subset training data trips parts local training validation datasets. section reports experimental results public private test sets well local validation set. evaluation metric destination prediction mean haversine distance measures distances points sphere based latitude longitude. computed follows. table reports prediction error local test different snapshots. among snapshots trips early morning saturday easier predict trips sunday afternoon difficult predict significantly higher prediction error. sundays taxis tend commit longer trips irregular destinations early morning saturdays taxis usually popular destinations like airports train stations hospitals. figure shows four trips test prediction. predictions block away last location predictions away last location later cases usually concern trips took highway side city skipping city center airport motorway. table regression models trip time prediction corresponding performance local test dataset. models include gradient boosted regression trees random forest regressor extremely randomized trees regressor model ensemble trained using trips instances whose number updates reassemble distribution observed partial trajectories test set. final prediction computed using mean individual predictions. table present relevant results official test competition. table shows performance strategies public private leaderboards corresponds split hidden test available organizers. remember final ranking solely based private leaderboard participants receive feedback competition. using corresponds average model ensembles specified table result placed team place. private leaderboard also achieved top- final position using similar approach include average predictions corresponds models trained using subset trips number updates range points. note strategy achieved rmsle public private leaderboards respectively. rmsle entry leaderboard would achieved top- position final rankings. competion rules allowed select final sets predictions final evaluation. unfortunately given performance observed public leaderboard feedback select approach final candidate submissions. propose data-driven approach taxi destination trip time prediction based trip matching. experimental results show models exhibit good performance prediction tasks approach robust compared competitors’ solutions ecml/pkdd discovery challenge. future work plan generalize current approach automatically adapt contexts select particular features would improve predictive performance within given context.", "year": 2015}