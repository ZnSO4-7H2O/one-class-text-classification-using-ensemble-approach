{"title": "Heterogeneous Multi-task Learning for Human Pose Estimation with Deep  Convolutional Neural Network", "tag": ["cs.CV", "cs.LG", "cs.NE"], "abstract": "We propose an heterogeneous multi-task learning framework for human pose estimation from monocular image with deep convolutional neural network. In particular, we simultaneously learn a pose-joint regressor and a sliding-window body-part detector in a deep network architecture. We show that including the body-part detection task helps to regularize the network, directing it to converge to a good solution. We report competitive and state-of-art results on several data sets. We also empirically show that the learned neurons in the middle layer of our network are tuned to localized body parts.", "text": "propose heterogeneous multi-task learning framework human pose estimation monocular image deep convolutional neural network. particular simultaneously learn pose-joint regressor slidingwindow body-part detector deep network architecture. show including body-part detection task helps regularize network directing converge good solution. report competitive state-of-art results several data sets. also empirically show learned neurons middle layer network tuned localized body parts. human pose estimation popular research topic computer vision wide potential many applications video games gesture control action understanding pose retrieval. human pose estimation depth images much mature estimation image. algorithms based depth maps already used practice. however majority visual media format mobile devices equipped camera. therefore useful estimate human pose image. pose estimation images difﬁcult estimation depth maps ambiguities appearance self-occlusion. general human pose estimation approaches classiﬁed types methods based part-based graphical models methods based regression. ﬁrst approach using part-based graphical models human body structure embedded connections nodes graphical model pose estimated ﬁnding pose conﬁguration best matches observation measured score function distribution popular graphical model human pose estimation pictorial structure model uses pairwise connections parts form tree. exact inference possible solution guaranteed globally optimal inference still expensive real-time applications. general deﬁnitions parts namely using joints parts using limbs parts. using joint points parts avoids need predict orientation parts although appearances around joints ambiguous. deﬁnitions parts appearance model critical learning good simple appearance models using linear ﬁlters capable capturing parts’ appearances complicated features expensive evaluate sliding window. several methods proposed alleviate problem truncating pose space hand extends traditional allowing body part multiple modes. also multimodal models mixtures hierarchical proposed. computation complexity increases rapidly along number modes. second approach pose estimation viewed regression task methods train model learn mapping feature space pose space. good feature encodes pose information critical methods. currently approaches handle small amounts training data since calculating prediction requires solving expensive optimization problem. recent years deep neural network architectures achieved success many computer vision tasks convolutional neural networks popular architectures used computer vision problems because reduced number parameters compared fully connected models intuitive structure allows network learn translation invariant features. addition convolution cheap operation computed efﬁciently. however larger capacity deep neural network hard train network generalizes well limited data. framework human pose estimation using deep convolutional neural network. frame pose estimation regression task also deﬁning several accessory tasks guide network learn useful features pose estimation. particular accessory tasks sliding window detectors different body-parts. framework heterogeneous tasks trained simultaneously show regression network beneﬁts greatly accessory detection tasks converges much better local minima network trained regression tasks. also empirically show activation patterns neurons middle layers preserve location information selective localized body-part shapes. multi-task learning typically applied multiple tasks resemble training data task limited refer reader review. following brieﬂy compare previous multi-task approaches regression networks related work. heterogeneous multi-task model trained encouraging parameters regression task classiﬁcation task share sparsity pattern. found joint-training tends useful features input tasks. instead sharing sparsity pattern framework forces heterogeneous tasks share feature layers results learning shared feature representation good tasks. deep convolutional network trained scene labeling deﬁning multi-category classiﬁcation task pixel. instead deﬁne detection tasks sliding windows image. since allow window contain multiple body parts detection task essentially binary classiﬁcation task window. trains deep learn pose-sensitive embedding nonlinear regression predicts location head hands ﬁnding nearest neighbor learned embedding features. contrast introduce accessory tasks learning shared pose features output joint locations directly regression network. multi-stage system deep convolutional networks built predicting facial point locations. order embed structure prior face neural networks focus different regions input image. similarly trained cascaded convolutional networks human pose estimation. instead increasing number stages reﬁnement explore improve performance single regression network introducing accessory tasks. multi-task strategy could figure joint point body part annotation pose estimation corresponding indicator left-upper detection. left image green indicates joint point line body part. white boxes indicate detection windows contain left upper arm. semi-supervised learning used guide network learn internal representation reﬂects similarity training samples. authors propose unsupervised network either share layers supervised network serve input supervised network. contrast design multiple classiﬁcation tasks body parts detection different location tasks share learned feature space. finally order investigate feature representation learned neural network estimates optimal input maximizes activation selected neuron optimal input resembles human face. contrast visualize feature averaging image patches associated neurons maximum responses upper-layer obtain similar results. heterogeneous multi-task framework consists types tasks pose regression task predict locations human body joints image; body-part detection tasks goal classify whether window image contains speciﬁc body part. following assume bounding around human already provided e.g. using upper body detector coordinates respect bounding containing human. framework summarized figure joint point regression regression task predict location joint points human body part. coordinates joint point taken target values. normalize coordinates size bounding values range squared-error cost function regression task figure heterogeneous multi-task learning pose estimation. given image human body detector used bounding around human. next convolutional neural network extracts shared features cropped image shared features inputs joint point regression tasks body-part detection tasks. regression detection tasks learned simultaneously resulting shared feature representation good tasks. tasks regression tasks share learned feature representation. motivated following reasons. first features learned detection task also helpful identifying parts joints regression task. second feature sharing reduce number parameters encourage network generalize larger range samples. body part detection tasks goal determine whether given window image contains speciﬁc body part. total number body parts number overlapping windows inside bounding box. p-th body part train classiﬁers namely determine whether l-th window contains body part note train separate classiﬁer location allows part detector learn location-speciﬁc appearance part well location-speciﬁc contextual information parts. example lower upper corner bounding likely vertical diagonal. training annotated body parts represented sticks. hence train body-part detectors need ﬁrst identify windows training contain body part. window considered contain body part portion body part inside window least particular length relative total length part. speciﬁcally following formula convert stick annotation body part binary label indicating presence/absence l-th window stickp segment p-th body part windowl stickp portion stickp inside windowl. ﬁxed threshold empirically experiments. finally calculating binary indicator window results binary indicator part figure shows example converting upper-arm annotation indicator map. note figure network architecture pose estimation input layer image. shared consists convolutional layers followed max-pooling layer. ﬁnal pooling layer connected separate sub-networks joint point regression body part detection tasks. subnetwork contains three fully connected layers. speciﬁc body part regression task predict coordinates joint position. hence features extracted lower layers translation invariant i.e. positions features preserved feature map. difﬁcult distinguish different body parts looking bounding body parts. example wearing long-sleeves upper lower similar appearance hence hard distinguish looking windows containing parts. including context information neighboring parts help improve part detector. hence input local part detector whole bounding image network structure shown figure input image human. ﬁrst hidden layers shared regression detection tasks. shared layers convolutional layers pooling layers ensure activation neurons affected local patterns input. also choose small ﬁlter stride size keep location information. convolutional layer consists several maps. filter weights shared within means neurons within sensitive patterns different location previous layer. neurons position always contribute unit next layer. max-pooling layer added convolutional layer increase non-linearity integrate local information. value neuron convolutional layer regresfact activation function layer. neurons network rectiﬁed linear units fact max. showed relus good recognition tasks fast train. hyperbolic tangent activation function last layer regression task logistic function last layer detection tasks. training jointly train regression detection networks global cost function backpropagation update weights. given training image predictions tasks calculated corresponding gradients back-propagated network. layers several output layers gradient output layers summed together weight updating. dropout also used ﬁrst fully connected layers regression detection tasks prevent over-ﬁtting. dropout probability experiments. iteration neurons dropout layers randomly selected probability forward activation output units selected neurons participate back-propagation during iteration. testing stage neurons used prediction activation value multiplied normalization. strategy turns effective since without dropout network severely overﬁt. refer reader details training procedure. represent human body joints segments joints represent body parts. data sets stick labels nearest stick average nearest ends joint point. deﬁne joints body parts since buffy ethz provide upper-end lower-end head middle point nose position. illustrate parts joints deﬁnition figure bounding boxes training images generated according ground-truth labels. select bounding training image contains annotated body parts resize image inside bounding augment dataset randomly selecting bounding size inside extracted human image apply mirror transformation double training set. total training augmented factor hmlpe pose regression task predicts joint positions detection task body parts. detection task hmlpe local windows equal size uniformly distributed bounding box. window size experiments comparable size body parts found training set. pre-train network using training data discussed previous section order obtain initial network. then initial network starting point training network using training data speciﬁc dataset either buffy flic. initial network serves prior help regularize network. train evaluate network dell training network takes days evaluation images takes seconds. upper body detector order human bounding width height upper body detection windows scaled ﬁxed factor empirically according training set. scaled detection window used human bounding image cropped resized percentage correct part measure accuracy pose estimation. pointed previous evaluation measure compute correctly. evaluation tool provided calculate corrected estimated body part points considered correct table presents results lower upper arms whole buffy test hmlpe achieves better results difﬁcult parts lower arms gets slightly worse result upper arms evaluation whole buffy test includes errors mis-detection upper body. investigate pose estimation performance alone also present results subset buffy test upper body detector predicts correct bounding box. case hmlpe achieves slightly better results also code full training using different number components part default setting gets worse results model trained buffy training likely full training contains variance poses. increasing number components improves accuracy increased cost training e.g. days needed train model. using better lower arms compared hmlpe. hand hmlpe better upper arms. different values weights regression detection tasks. parameters except weights cost function kept same. show training testing error figure table firstly network regression task performs poorly training testing sets. even using tiny weights detection tasks help improve convergence leading signiﬁcant performance increase. within certain range increasing weights detection tasks leads lower errors test set. larger weights detection tasks performance decreases. reasonable since gradient dominated detection task case. results suggest regression task beneﬁts greatly feature representation induced detection tasks. gradients detection tasks guide network converge better minimum training also help enhance generalization. although network needs learn detectors limited training data sharing features among detection regression tasks seems effective learning useful features tasks. section investigate features learned network. since ﬁrst convolutional layer operates input image ﬁlter response reﬂect low-level patterns image neurons sensitive. learned ﬁlters fig. expected look like edge gradient detectors different orientations. layers different approach ﬁnds input maximizes speciﬁc neuron. instead property network locally connected ﬁrst layers. activation neurons middle layers affected sub-region input image. addition connection regular backtrack network region image neuron received input. present backtracking algorithm algorithm since ﬁlter weights shared within feature neurons expecting local patterns previous layer. based properties consider activainstead solving tion feature time. since compares methods several previous approaches show model performs best under criteria compare accuracy results shown figure hmlpe better accuracy looser criteria accuracy hlmpe wrists elbows higher modec. hand hlmpe worse accuracy strict criteria results suggest hlmpe robustly estimate general pose less accurate estimating exact location joint. also trained modec full training observe improvement. figure effect changing weights multi-task learning training test errors pose regression task detection tasks. test errors average costs regression detection tasks buffy flic test datasets. optimization problem select patches original image contribute maximum activation feature map. figure shows backtracked patches buffy test image different features convolutional layer. surprisingly feature maps work like body part detectors maximal activation maps occurs frequently neurons take inputs region body parts head shoulders arms. visualize feature average corresponding backtracked patches training images. average backtracked patches convolutional layers shown figure average backtracked patches show clear patterns body parts like head shoulder upper arms. particular visualizations mid-level features fig. look like body part detectors head neck arms shoulders similarly high-level features fig. look like localized body parts e.g. heads different positions left right shoulders arms also highlevel features correspond speciﬁc body parts. example feature fig. horizontal bands color appears respond horizontal background structures windows tops door frames feature could useful identifying context information location door relative head. network human pose estimation. framework consists tasks pose regression body-part detection sliding-window classiﬁers. empirically show jointly training pose regression detection tasks guides network learn meaningful features pose estimation makes network generalize well testing data. finally visualize midhigh-level features using average backtracked patches maximally responding neurons. found neurons selective shape patterns resembling localized human body parts. future work extend network learning poses occlusion combine framework unsupervised learning pre-training network. addition would like extend framework estimating human pose video sequences well structured objects. figure visualization low- mid- high-level features trained network shows ﬁlter weights ﬁrst convolutional layer; visualizations mid-level features second convolutional layer; high-level features third convolutional layer. figure examples backtracked patches original image. image patch backtracked patch caused maximum activation feature convolutional layer. order patches corresponds order features fig. references eichner ferrari. human pose co-estimation applications. ieee trans. pattern anal. mach. intell. eichner marin-jimenez zisserman ferrari. articulated human pose estimation retrieval unconstrained still images. ijcv shotton fitzgibbon cook sharp finocchio moore kipman blake. real-time human pose recognition parts single depth images. cvpr wang tang. deep convolutional network", "year": 2014}