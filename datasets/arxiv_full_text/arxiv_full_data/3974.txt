{"title": "On the Workings of Genetic Algorithms: The Genoclique Fixing Hypothesis", "tag": ["cs.NE", "cs.AI"], "abstract": "We recently reported that the simple genetic algorithm (SGA) is capable of performing a remarkable form of sublinear computation which has a straightforward connection with the general problem of interacting attributes in data-mining. In this paper we explain how the SGA can leverage this computational proficiency to perform efficient adaptation on a broad class of fitness functions. Based on the relative ease with which a practical fitness function might belong to this broad class, we submit a new hypothesis about the workings of genetic algorithms. We explain why our hypothesis is superior to the building block hypothesis, and, by way of empirical validation, we present the results of an experiment in which the use of a simple mechanism called clamping dramatically improved the performance of an SGA with uniform crossover on large, randomly generated instances of the MAX 3-SAT problem.", "text": "recently reported simple genetic algorithm capable performing remarkable form sublinear computation straightforward connection general problem interacting attributes data-mining. paper explain leverage computational proﬁciency perform efﬁcient adaptation broad class ﬁtness functions. based relative ease practical ﬁtness function might belong broad class submit hypothesis workings genetic algorithms. explain hypothesis superior building block hypothesis empirical validation present results experiment simple mechanism called clamping dramatically improved performance uniform crossover large randomly generated instances -sat problem. genetic algorithms search heuristics mimic natural evolution. applied wide range combinatorial optimization problems poorly understood known np-hard. solutions generated genetic algorithms often inferior yielded problem-speciﬁc search algorithms cases specialized search algorithms available. used situations genetic algorithms routinely generate usable solutions relatively quickly. unfortunately workings genetic algorithms well understood. several anomalies empirical literature cannot explained building block hypothesis —the comprehensive explanation adaptive capacity genetic algorithms proffered date. anomalies serious widely reported efﬁcacy uniform crossover unexpected behavior royal road functions response anomalies problems theoretical support building block hypothesis building block hypothesis today treated certain amount skepticism many theorists. distancing building block hypothesis several theorists also moved away search single comprehensive explanation adaptive capacity genetic algorithms practical problems adopted shall call many little theories approach. approach based belief single theory practical workings genetic algorithms infeasible genetic algorithms work fundamentally different ways depending amongst things operators classes practical optimization problems applied goal approach match classes practical optimization problems appropriate classes genetic algorithms. ﬁnding matches proponents approach hope eventually supply practitioners means determine right genetic algorithm practical problem. seems unlikely vision realized anytime soon. small number narrowly deﬁned classes ﬁtness functions researchers success deriving upper bounds expected number ﬁtness queries needed global optimum unaware however success turning theorems theories even little ones demonstrable practical applications. another dissatisfying feature approach it’s failure date identify computational efﬁciency genetic algorithm. i.e. computation sort genetic algorithm perform efﬁciently relative known algorithms. dissatisfying perhaps especially practitioners would-be inventors powerful genetic algorithms basic idea single comprehensive account practical workings genetic algorithms infeasible. large section genetic algorithmics community seems rejects idea. whether accepts idea rejects matter one’s metaphysics; currently know deﬁnitive reason deciding other. mention however viable comprehensive theory found preferable historically scientists quite successful ﬁnding viable comprehensive theories large internally diverse classes systems. reject idea continue subscribe version building block hypothesis—weak theoretical foundation outstanding anomalies notwithstanding. absence promising comprehensive alternative explains entrenchment hypothesis. presenting alternative paper. recent work reported simple genetic algorithm possesses remarkable computational proﬁciency—a capacity sublinear computation which though irrelevant problem global optimization straightforward connections currently intractable data-mining problem computational genetics. paper demonstrate applying computational proﬁciency recursively perform efﬁcient adaptation speciﬁc class ﬁtness functions. based result infer recursively applying computational proﬁciency sgas perform efﬁcient adaptation broad class ﬁtness functions. given relative ease practical ﬁtness function might belong class functions submit genoclique ﬁxing hypothesis—a comprehensive hypothesis practical workings simple genetic algorithm—and explain comprehensive hypotheses hypothesis promising building block hypothesis. genoclique ﬁxing hypothesis sound promises precipitate signiﬁcant improvements genetic algorithm’s capacity black-box combinatorial optimization. empirical support hypothesis describe consider ﬁrst improvements—a mechanism called clamping—and present results experiment simple mechanism dramatically improved performance simple genetic algorithm uniform crossover large randomly generated instances -sat problem word ‘gene’ refer genomic extent tends broken crossover. usage accords johansen’s original word refer unit inheritance deﬁnition gene strictly deﬁned entity fading-out quality dependent expected number crossover points points tend distributed genome. equivalent concept within genetic algorithmics. notion building block comes close since building blocks must deﬁnition average ﬁtness whereas gene need equivalent. important stress word gene differs word typical gets used genetic algorithmics. genetic algorithmicists tend think adjacent genomic bits separate genes regardless crossover operator used regard bits separate genes crossover uniform close uniform i.e. expected number crossover points approximately half value length genome. expected number crossover points signiﬁcantly lower bits tend inherited together. case regard bits adjacent nucleotides single gene. ensure clear comparison hypothesis building block hypothesis express latter using terminology adopted building block hypothesis assumes existence initial population large numbers genes statistically signiﬁcant ﬁtness advantages. according hypothesis adaptation genetic algorithms driven propagation genes frequent composition believe community’s inability identify computational efﬁciency consequence it’s strong focus global optimization. focus seems misplaced given genetic algorithms valued practitioners capacity efﬁcient global optimization capacity efﬁcient adaptation. offspring co-adapted sets individually advantageous genes co-present either parent. avoid confusion important clarify ‘co-adapted’ mean something existence superadditive super-multiplicative ﬁtness interactions genes concerned; rather mean simply expected ﬁtness genome carrying genes ‘co-adapted’ greater expected ﬁtness genome carrying individual gene set; whole words greater parts. previously reported capable efﬁciently driving co-adapted unlinked genes ﬁxation even though ﬁtness signal genes weak relative background noise. driving genes ﬁxation raised average ﬁtness population small amount. genes gets ﬁxed population representation problem space thought changed. crucially representation contain sets co-adapted genes detectable ﬁtness signal representation. subsequently driving sets ﬁxation change it’s representation create small sets coadapted genes. time small co-adapted genes gets ﬁxed average ﬁtness population increase amount tiny. ﬁxation small sets co-adapted genes continues however amounts begin based thought experiment hypothesize adaptation genetic algorithms driven iterated creative ﬁxation small sets co-adapted genes. hypothesis pertains class recombinative sgas. model class simple genetic algorithm uniform crossover adopt algorithm model reasons firstly uniform crossover notion unit inheritance i.e. gene crisply deﬁned—a gene corresponds exactly single bitstring. conceptual crispness greatly simpliﬁes exposition. secondly using suitably crafted classes ﬁtness functions absence positional bias uniform crossover exploited demonstrate computational efﬁciencies form basis hypothesis. positive integer denote bitstrings length denote schema partition tuple consisting indices deﬁning positions schema partition—e.g. order schema partition denoted number elements tuple denotes note tuple denotes schema partition ordered; therefore schema partitions order greater denoted ways. denote schema partitions. schema partitions orthogonal tuples elements common. genome denote positive integer denote genome length k-tuple distinct integers denote bitstring gxk. denotation schema dependent denotation schema-partition schema belongs given schema partition denoted tuple schemata partition denoted bitstrings length bits bitstring denotes schema consisting genomes {g|ξγ bo}. denotation relevant schema partition must always borne mind interpreting denoted schema. denote orthogonal schema partitions denote schemata respectively. concatenation denotes schema partition concatenation denotes schema treat denotation schema partition tuple sometimes represented schema partition others. likewise treat denotation schema bitstring sometimes represented schema others. sense denotations schemata schema partitions clear context. matrix denote n-tuple assume crossover uniform—is highly contingent upon ﬁxation bits. deﬁnition staircase function descriptor -tuple positive integers positive real numbers matrices rows columns values binary digits elements distinct integers rows sorted ascending order. denote normal distribution mean variance function described staircase function descriptor stochastic function bitstrings length given algorithm call height order increment noisiness span respectively staircase function. call schema denoted schema partition denoted stage staircase function given matrix staircase function descriptor schema partition stage canonical denotation. staircase function descriptor clear will interest concision assume schema partition stage denoted canonically. denote stage call schema denoted step steps staircase function essentially progression nested hyperplanes hyperplanes higher order higher expected ﬁtness nested within hyperplanes lower order lower expected ﬁtness. choosing appropriate scheme mapping high-dimensional hypercube onto dimensional plot becomes possible visualize progression hyperplanes dimensions. deﬁnition fractal addressing system tuple positive integers matrices rows columns elements distinct positive integers i.e. element occurs either once. fractal addressing system determines gets mapped onto plot. bitstring xy-address pixel representing given algorithm example descriptor basic pivotal function image generated querying every bitstring plotting resulting ﬁtness value genome greyscale pixel genome’s fractal address ﬁtness values returned scaled linearly span range possible greyscale shades. lighter shades signify greater ﬁtness. four steps easily discerned. perform thought experiment generate another fractal plot using addressing system different random number generator seed. stochastic greyscale value pixel resulting plot likely different homolog plot figure nevertheless ability discern steps would affected. vein note specifying speciﬁed values last rows easily seen values immaterial discernment staircase structure hand values ﬁrst rows highly relevant discernment structure. figure shows fractal plot obtained using fractal addressing system nothing remotely resembling staircase visible plot. algorithm algorithm determining -address genome fractal addressing system function binint returns integer value binary string. input genome length granularity mn/n lesson discernment ﬁtness staircase inherent within staircase function depends critically ‘looks’ function. determining ‘right’ look used information descriptor speciﬁcally values information available algorithm query access even knows right look staircase function discernment ﬁtness staircase inherent within function still made difﬁcult increment noisiness ratio. figure lets visualize decrease salience ﬁtness staircase accompanies decrease increment parameter staircase function. mentioned before ﬁtness values returned staircase functions scaled span range possible greyscale shades; therefore kept increment constant increased noisiness parameter instead would obtained general result shown figure general decrease increment noisiness ratio staircase function results decrease ‘contrast’ steps function. denote schema schema partition denoted given ﬁtness function genome deﬁne ﬁtness signal denoted expected ﬁtness genome drawn uniform distribution schemata orthogonal schema partitions deﬁne conditional ﬁtness signal given denoted sγ|γ difference ﬁtness signal ﬁtness signal i.e. sγ|γ given staircase function descriptor deﬁne signal noise ratio schema schema partition sγ/σ. likewise schemata orthogonal schema partitions deﬁne conditional signal noise ratio given sγ|γ/σ. lemma signal noise ratio step iδ/σ. corollary lemma states conditional signal noise ratio stage given step finally theorem signal noise ratio stage consider algorithm that given query access staircase function robustly detect ﬁtness signal ﬁrst step restrict future sampling step. observe conditional signal noise ratio second stage given ﬁrst step signal noise ratio ﬁrst step. therefore algorithm restricts ﬁtness queries genomes belonging ﬁrst step able detect conditional ﬁtness signal second stage given ﬁrst step should therefore able identify second step. indeed algorithm sufﬁciently robust it’s recursive application need identiﬁcation second step; higher steps identiﬁed indirectly identifying lower steps ﬁrst. given expression reasonable suspect direct identiﬁcation step staircase function rapidly becomes computationally infeasible increases. analogy physical staircases staircase functions transparent; hard climb higher steps staircase without climbing lower steps ﬁrst becomes computationally infeasible identify higher steps staircase function without identifying lower steps ﬁrst. algorithm restricts future queries step staircase function climbed step. idea climbing steps staircase function generalized describe behavior arbitrary search algorithms arbitrary ﬁtness functions sets strings. call progressive conﬁnement sampling hyperplanes increasing order increasing expected ﬁtness hyperclimbing search algorithm said climbed hyperplane belongs hyperplane partition amongst hyperplanes belong future sampling largely limited hyperplane hyperclimbing implemented efﬁciently seems like reasonable perform adaptation. consider practical ﬁtness function bitstrings seems reasonable assume hyper planes order exists partitions—for sake argument assume one—such partition contains hyperplanes whose average ﬁtness values statistically signiﬁcantly average uniform sampling. restricting future sampling hyperplanes hyperclimbing heuristic increase expected ﬁtness future samples. hyperclimbing heuristic concerned hyperplane would comprise entirety search space i.e. future search thought occur space b−o. argument recurses seems reasonable assume hyperplanes order exists partitions—for sake argument assume one—such partition contains hyperplanes whose average ﬁtness values statistically signiﬁcantly average uniform sampling. restricting future sampling hyperplanes hyperclimbing heuristic would again increase expected ﬁtness future samples. heuristic continue increase average ﬁtness samples generates long continues partitioning region search space inhabits low-order hyperplanes least hyperplane partition average ﬁtness value statistically signiﬁcantly average uniform sampling. hyperclimbing heuristic sensitive hyperplanar structure search space neighborhood structure idea landscape helpful thinking behavior heuristic. useful notion hyperscape. hyperscape like landscape spatial representation ﬁtness function. hyperscape however focus placed interplay ﬁtness function neighborhood structure individual points statistical ﬁtness properties individual hyperplanes spatial relationships hyperplanes—lower order hyperplanes contain higher order hyperplanes hyperplanes intersect other disjoint hyperplanes belong hyperplane partition regarded parallel. concept hyperscape genetic algorithmics literature traced back seminal work holland used concept reason dynamics recombinative genetic systems. disagree holland’s conclusions hyperscapes invaluable reasoning dynamics genetic algorithms—both recombinative reasons become clear section non-recombinative. recent work deﬁned class semi-parameterized ugas exploited symmetries algorithms class uncover consider ﬁrst computational efﬁciencies rigorously identiﬁed. symmetry analysis work sets stage symmetry analysis given below. show semi-parameterized efﬁciently climb ﬁrst steps staircase functions particular class staircase functions. remarkably number queries required semi-parameterized independent span functions class. staircase function descriptor function basic matrix ones. basic last three elements descriptor fully determinable ﬁrst four; therefore write descriptor given staircase function descriptor deﬁne basic form staircase function descriptor basic staircase function descriptor staircase functions basic form semi-parameterized uga. staircase function probability frequency stage generation probability frequency step generation probability average ﬁtness population generation appreciating symmetries unparameterized ugas deduce following equalities probability distributions generation staircase function descriptor denote semiparameterized described materials methods section appendix. order succinctly discuss results experiment applied introduce following shorthand given population genomes one-frequency locus frequency locus population. figure shows capable robust adaptation applied figure shows action ﬁrst seven stages tend ﬁxation ascending order. entails ﬁrst seven steps tend ﬁxation ascending order. step gets ﬁxed future sampling largely conﬁned step—in effect hyperplane associated step climbed. animation plots one-frequencies loci generations shows hyperclimbing behavior continues beyond ﬁrst seven steps. capacity implement hyperclimbing applied accounts it’s adaptive ability staircase function basic form conclusions reached previous section entail that applied instead regardless span would obtained essentially results shown figures realization highly remarkable computational standpoint. consider capacity climbing ﬁrst stage computational standpoint even ability quite remarkable achieved expected expenditure queries constant span infer highly speciﬁc capacity computational efﬁciency part general capacity efﬁciently performing call genoclique ﬁxing. previously identiﬁed highly speciﬁc nonetheless remarkable computational efﬁciencies instances general capacity fig. performance semi-parameterized semi-parameterized staircase function trials. mean average ﬁtness population shown black. mean best-of-population ﬁtness shown blue. error bars show standard error mean every generation efﬁcient genoclique ﬁxing results presented suggest sgas engender robust efﬁcient adaptation performing efﬁcient genoclique ﬁxing recursively. discussing genoclique ﬁxing contemplate curious aspect behavior figure shows growth rate average ﬁtness population decreases evolution proceeds. understand phenomenon consider genome belongs step; probability genome still belong step mutation per-bit mutation rate. entails that becomes less able hold population within step increases. light observation infer increases capacity sensitive conditional ﬁtness signal stage given step decreases. loss sensitivity explains decrease growth rate average ﬁtness call wastage ﬁtness queries described mutational drag. conceived following mechanism curbing mutational drag mechanism relies parameters flagfreq unflagfreq flagperiod. one-frequency locus beginning generation less flagfreq greater flagfreq locus ﬂagged. ﬂagged locus remains ﬂagged long one-frequency locus less unflagfreq greater unflagfreq beginning subsequent generation. ﬂagged locus generation remained constantly ﬂagged last flagperiod generations locus considered passed ﬁxation test mutated generation call mechanism clamping expect absence mutation locus passed ﬁxation test quickly strict ﬁxation i.e. one-frequency locus clamped zero remainder run. semi-parameterized used clamping mechanism described identical semi-parameterized every staircase function clamping mechanism used parameterized follows flagfreq unflagfreq flagperiod=. performance displayed ﬁgure figure shows number loci clamping mechanism fig. mean frequency dynamics trials ﬁrst seven steps staircase function action semi-parameterized semi-parameterized error bars show standard error mean every twentieth generation left unmutated generation. ﬁgures show clamping mechanism effectively allowed climb steps animation shows one-frequency dynamics single action clamping mechanism seen absence ‘jitter’ one-frequencies loci ﬁxed call small co-adaptive genes genoclique. important stress features deﬁnition. firstly term co-adaptive opposed conventionally used co-adapted meant indicate genocliques static entities dynamic ones arise fade away composition population genomes changes. secondly note made commitment kind linkage must exist genes genoclique. linkage genes weak even non-existent. performance trials semi-parameterized staircase function mean fig. average ﬁtness population shown black. mean best-of-population ﬁtness shown blue. mean number loci left unmutated clamping mechanism. errorbars show standard error mean every hundredth generation hypothesis rests assumptions distribution ﬁtness easily seen weaker underlying building block hypothesis —the genoclique ﬁxing hypothesis example require large numbers genes individually advantageous outset evolutionary run. note secondly genoclique ﬁxing intuitively viable explanation building block hypothesis ability recombination disrupt genoclique declines rapidly genoclique goes ﬁxation easy ﬁxing genocliques robust vehicle adaptation recombinative genetic systems; comparison much difﬁcult grasp synergistic composition robust vehicle adaptation. though recombination occasion synergistic composition genes also occasion destruction compositions. thirdly note unlike building block hypothesis proof concept provided three decades genoclique ﬁxing hypothesis accompanied proof concept start. present results experiment clamping dramatically improved performance large randomly generated instances -sat problem. difference performance strongly supports hypothesis. semi-parameterized ugas—one clamping without randomly generated instances -sat problem binary variables clauses. ugas used straightforward encoding genome represents value single maxsat variable. ﬁtness genome simply number clauses satisﬁed variable assignment represented genome. clamping mechanism used parameterized follows flagfreq unflagfreq flagperiod=. figure shows number loci mechanism left unmutated generation. four thousandth generation clamping mechanism left average loci unmutated. given loci absence clamping chance loci unmutated genome drag resulting continued mutation long-ﬁxed loci explains outperformed difference mean best-of-population ﬁtness performance trials randomly generated instances fig. -sat problem variables clauses. used clamping whereas not. mean average ﬁtness population shown black. mean best-of-population ﬁtness shown blue. mean number loci left unmutated clamping mechanism errorbars show standard error mean every hundredth generation ﬁnal generation mean best-of-population ﬁtness ﬁnal generation clauses. indications difference would larger allowed trials continue past generations. building block hypothesis function recombination clear—to drive adaptation effecting synergistic composition advantageous genes co-adapted sets advantageous genes. genoclique ﬁxing synergistic composition vehicle adaptation function recombination less transparent. genoclique ﬁxing hypothesis widely reported efﬁcacy recombination especially strong forms recombination like uniform crossover actually seems anomalous. expected number crossover points increases size genes genoclique decreases number genes genoclique therefore tends decrease. since genocliques fewer genes less likely disrupted recombination since disruption genocliques hampers ﬁxation seems like fewer expected number crossover points crossover operation better. phenomenon hitchhiking seems offer easy explanatory escape anomaly. simple size genes genoclique increases situated become part genocliques even though contribute co-adaptivity genocliques. genocliques ﬁxation suppose happens complement implicated co-adaptivity genocliques later evolutionary run. seems reasonable suspect prior spurious ﬁxation prevent genocliques containing complement going ﬁxation. since prevalence hitchhiking increases inverse relation expected number crossover points seems plausible relative absence hitchhiking ugas account widely reported efﬁcacy uniform crossover. prevalence hitchhiking extreme recombination entirely absent. test hunch utility recombination therefore switched crossover semi-parameterized applied resulting semi-parameterized mutation-only simple genetic algorithm denoted staircase function comparison animations conﬁrms prevalence hitchhiking it’s relative absence remarkably despite prevalence hitchhiking outperforms figure animation show that like performs adaptation implementing hyperclimbing. difference performance seen comparing figure figure turns representative systematic difference performance ugas mgas basic staircase functions. informal empirical comparison performance sgas broad parametric regime found switching recombination typically improves performance. implications results genoclique ﬁxing hypothesis mixed. hand easy explanatory escape hitchhiking seemed offer turns quite easy. anything widely observed efﬁcacy recombination puzzling before. hand observed hyperclimbing behavior mgas staircase functions reveals centrality ﬁxing adaptation sgas. observe conclusions reached exploiting symmetries unparameterized ugas staircase ﬁtness functions hold even uniform crossover switched off. realization entails mgas like ugas capable efﬁcient hyperclimbing. terms expected number crossover points crossover operation mgas ugas occur opposite ends continuum. since sgas capable efﬁcient hyperclimbing hyperclimbing seems well positioned serve organizing idea study adaptation sgas. returning task explaining function recombination conjecture staircase functions illuminative fail capture feature commonly present ﬁtness distributions induced representational choices practitioners. conjecture furthermore hitchhiking interferes mga’s ability exploit feature. observe applied staircase function genocliques tend become salient sequentially. need true recombinative sgas applied real-world problems. might hitchhiking pose problem genocliques become salient concurrently? test hunch conceived class multi-staircase functions—a straightforward generalization class staircase functions. deﬁnition multi-staircase function descriptor tuple positive integers positive real numbers matrices rows columns elements distinct integers unless matrices sorted ascending order elements binary digits. function described multi-staircase function descriptor stochastic function bitstrings length given algorithm call cardinality multi-staircase function like staircase functions call height order increment noisiness span respectively. analogy ladders staircase functions extended apply multi-staircase functions. cardinality multi-staircase function single staircase induced; cardinality more multiple ladders induced. latter case loci belonging steps particular staircase scattered amongst loci belonging steps ladders. however since locus belongs staircase since ﬁtness beneﬁts climbing separate ladders combine additively staircase climbed independently; words next step several ladders become salient concurrently. degree concurrency determined cardinality multi-staircase function. multi-staircase function descriptor i.e. matrix integers function basic laid row-wise matrix ones. basic ﬁrst elements descriptor determines remaining elements; therefore write descriptor given multi-staircase function descriptor deﬁne basic form basic multi-staircase function basic staircase function descriptor staircase functions basic form semi-parameterized semi-parameterized mga. staircase function probability average ﬁtness population generation fig. performance semi-parameterized semi-parameterized multi-staircase function trials. mean average ﬁtness population shown black. mean best-of-population ﬁtness shown blue. error bars show standard error mean every generation appreciating symmetries unparameterized ugas deduce following equalities probability distributions generation thus generation monte-carlo sampling equivalent monte-carlo sampling denote multi-staircase ﬁtness function descriptor figure shows applied function average semi-parameterized outperforms semiparameterized animations show one-frequency dynamics single each. animations qualitatively show better climbing ladders parallel. prevalence hitchhiking it’s relative absence seems least qualitatively account difference ability. emphasize semi-parameterized sgas mentioned semi-parameterized sgas used previous experiments. recall average outperformed applied basic staircase function function thought basic multi-staircase function cardinality one. regarded such difference amounts solely difference cardinality. based observations results mentioned above submit function recombination genetic algorithms reduce hitchhiking; reducing hitchhiking recombination allows ﬁxing genocliques proceed concurrently. population size recombinative sga’s capacity efﬁcient genoclique ﬁxing merits attention. presenting complete account workings recombinative sgas however aim. rather sought present general account workings support account ways make compelling precise compelling building block hypothesis—to date general account practical workings recombinative sgas. perhaps best understand difference building block hypothesis genoclique ﬁxing hypothesis focusing part played ﬁxation account. downplaying role ﬁxation building block hypothesis departs rather radically accounts adaptation biological populations ﬁnds population genetics. building block hypothesis holds genetic algorithms work maintaining store partial solutions—advantageous genes coadapted sets individually advantageous genes—and hierarchically assembling partial solutions evolution proceeds. crucially building block hypothesis opposed idea advantageous gene it’s advantageous bitwise complement persist evolving population. indeed watson’s work hierarchical functions indicates persistence alleles expected. building block hypothesis dispenses ﬁxation needs look weakness recombination vehicle locking adaptive gains. hypothesis cannot therefore explain widely observed adaptive capacity sgas strong forms recombination contrast genoclique ﬁxing hypothesis holds ﬁxation vehicle adaptive gains locked genoclique ﬁxing hypothesis based realization selection drive small unlinked coadapted genes ﬁxation even genes repeatedly separated recombination whenever co-occur genes—what call genoclique—has gone ﬁxation recombination looses it’s power disrupt ﬁtness advantage genoclique confers even small increase expected ﬁtness gets locked since recombination required protect genocliques ﬁxation genoclique ﬁxing hypothesis problem accounting adaptive capacity ugas. building block hypothesis account adaptive capacity sgas small numbers crossover points genoclique ﬁxing hypothesis account adaptive capacity recombinative sga. genoclique ﬁxing hypothesis thought particular instantiation general uniﬁed theory practical workings sgas including ones uses crossover. section ii-c introduced idea hyperclimbing heuristic. heuristic sensitive local features search space ﬁtness properties hyperplanes space. hyperclimbing heuristic therefore susceptible typical problems affecting local search algorithms hyperclimbing seems like reasonable perform adaptive search moment factors appears high cost terms time ﬁtness queries implementing heuristic quickly looses it’s shine. exciting discovery—the crux paper—is simple genetic algorithms implement hyperclimbing efﬁciently. problems studied found uniform crossover without crossover perform efﬁcient hyperclimbing. uniform crossover crossover terms expected number crossover points opposite ends crossover continuum sga. therefore infer capacity efﬁcient hyperclimbing underlies adaptive capacity sgas. submit idea—the hyperclimbing thesis—as platform uniﬁed study adaptation genetic algorithms. keki burjorjee. fundamental problem building block hypothesis. corr abs/. keki burjorjee. remarkable computational competencies simple genetic algorithm. corr abs/. l.j. eshelman r.a. caruana j.d. schaffer. biases crossover landscape. proceedings third international conference david fogel. evolutionary computation toward philosophy machine intelligence. ieee press stephanie forrest melanie mitchell. relative building-block ﬁtness building-block hypothesis. darrell whitley editor david goldberg. genetic algorithms search optimization machine learning. addison-wesley reading john holland. adaptation natural artiﬁcial systems introductory analysis applications biology control holger hoos thomas sttzle. stochastic local search foundations applications. morgan kaufmann thomas jansen ingo wegener. real royal road functions–where crossover provably essential. discrete applied mathematics johansen. elemente exakten erblichkeitslehre. jena gustav fisher s.a. kauffman. origins order self-organization selection evolution. biophysical ernst mayr. growth biological thought. belknap press harvard university press melanie mitchell. introduction genetic algorithms. press cambridge melanie mitchell stephanie forrest john holland. royal road genetic algorithms fitness landscapes varela bourgine editors proc. first european conference artiﬁcial life pages generation right evaluating ﬁtness individuals used sigma scaling adjust ﬁtness individual used adjusted ﬁtness selecting parents generation. suppose ﬁtness individual generation suppose average ﬁtness standard deviation ﬁtness individuals generation given respectively adjusted ﬁtness generation given otherwise population size semi-parameterized ugas used clamping whereas not. population size clamping every semi-parameterized used implement semi-parameterized sgas described written matlab available download. lemma staircase function descriptor integer ﬁtness signal step proof proof induction base case easily seen true. assume hypothesis holds prove holds denote stage canonical denotation schema partition containing ﬁtness signal step given theorem staircase function descriptor integer ﬁtness signal stage δ/i−. proof denote stage canonical denotation partition containing ﬁrst prove following claim claim", "year": 2009}