{"title": "Caffe: Convolutional Architecture for Fast Feature Embedding", "tag": ["cs.CV", "cs.LG", "cs.NE"], "abstract": "Caffe provides multimedia scientists and practitioners with a clean and modifiable framework for state-of-the-art deep learning algorithms and a collection of reference models. The framework is a BSD-licensed C++ library with Python and MATLAB bindings for training and deploying general-purpose convolutional neural networks and other deep models efficiently on commodity architectures. Caffe fits industry and internet-scale media needs by CUDA GPU computation, processing over 40 million images a day on a single K40 or Titan GPU ($\\approx$ 2.5 ms per image). By separating model representation from actual implementation, Caffe allows experimentation and seamless switching among platforms for ease of development and deployment from prototyping machines to cloud environments. Caffe is maintained and developed by the Berkeley Vision and Learning Center (BVLC) with the help of an active community of contributors on GitHub. It powers ongoing research projects, large-scale industrial applications, and startup prototypes in vision, speech, and multimedia.", "text": "problem multimedia data analysis discovery eﬀective representations sensory inputs—images soundwaves haptics etc. performance conventional handcrafted features plateaued recent years developments deep compositional architectures kept performance levels rising deep models outperformed hand-engineered feature representations many domains made learning possible domains engineered features lacking entirely. particularly motivated large-scale visual recognition speciﬁc type deep architecture achieved commanding lead state-of-the-art. convolutional neural networks cnns discriminatively trained back-propagation layers convolutional ﬁlters operations rectiﬁcation pooling. following early success digit classiﬁcation models recently surpassed known methods large-scale visual recognition adopted industry heavyweights google facebook baidu image understanding search. deep neural networks attracted enthusiastic interest within computer vision beyond replication published results involve months work researcher engineer. sometimes researchers deem worthwhile release trained models along paper advertising performance. trained models alone suﬃcient rapid research progress emerging commercial applications toolboxes oﬀer truly oﬀ-the-shelf deployment state-of-the-art models—and often computationally eﬃcient thus unsuitable commercial deployment. address problems present caﬀe fully opensource framework aﬀords clear access deep architectures. code written clean eﬃcient cuda used computation nearly complete well-supported bindings python/numpy matlab. caﬀe adheres software engineering best practices providing unit tests correctness experimental rigor speed deployment. also well-suited research careful modularity code clean separation network deﬁnition actual implementation. caﬀe multimedia scientists practitioners orderly extensible toolkit state-of-the-art deep learning algorithms reference models provided box. fast cuda code computation industry needs achieving processing speeds milcaﬀe provides multimedia scientists practitioners clean modiﬁable framework state-of-the-art deep learning algorithms collection reference models. framework bsd-licensed library python matlab bindings training deploying generalpurpose convolutional neural networks deep models eﬃciently commodity architectures. caﬀe industry internet-scale media needs cuda computation processing million images single representation actual implementation caﬀe allows experimentation seamless switching among platforms ease development deployment prototyping machines cloud environments. caﬀe maintained developed berkeley vision learning center help active community contributors github. powers ongoing research projects large-scale industrial applications startup prototypes vision speech multimedia. table comparison popular deep learning frameworks. core language main library language bindings oﬃcially supported library interface feature extraction training etc. indicates availability host-only computation usage indicates computation capability essential training modern cnns. lion images single titan gpu. models mode variety hardware caﬀe separates representation actual implementation seamless switching heterogeneous platforms furthers development deployment— caﬀe even cloud. caﬀe maintained developed bvlc active eﬀorts several graduate students welcomes open-source contributions http//github.com/bvlc/caffe. thank contributors work caﬀe provides complete toolkit training testing ﬁnetuning deploying models well-documented examples tasks. such it’s ideal starting point researchers developers looking jump state-of-the-art machine learning. time it’s likely fastest available implementation algorithms making immediately useful industrial deployment. modularity. software designed beginning modular possible allowing easy extension data formats network layers loss functions. lots layers loss functions already implemented plentiful examples show composed trainable recognition systems various tasks. separation representation implementation. caﬀe model deﬁnitions written conﬁg ﬁles using protocol buﬀer language. caﬀe supports network architectures form arbitrary directed acyclic graphs. upon instantiation caﬀe reserves exactly much memory needed network abstracts underlying location host gpu. switching implementation exactly function call. test coverage. every single module caﬀe test code accepted project without corresponding tests. allows rapid improvements refactoring codebase imparts welcome feeling peacefulness researchers using code. pre-trained reference models. caﬀe provides reference models visual tasks including landmark alexnet imagenet model variations r-cnn detection model scheduled release. strong proponents reproducible research hope common software substrate foster quick progress search network architectures applications. summarize landscape convolutional neural network software used recent publications table list incomplete included toolkits notable best knowledge. caﬀe diﬀers contemporary frameworks major ways implementation completely based eases integration existing systems interfaces common industry. mode removes barrier specialized hardware deployment experiments model trained. reference models provided oﬀ-the-shelf quick experimentation state-of-the-art results without need costly re-learning. ﬁnetuning related tasks explored models provide warmstart research applications. crucially publish trained models also recipes code reproduce them. blobs provide uniﬁed memory interface holding batches images parameters parameter updates. blobs conceal computational mental overhead mixed cpu/gpu operation synchronizing host device needed. practice loads data disk blob code calls cuda kernel computation ferries blob next layer ignoring low-level details maintaining high level performance. memory host device allocated demand eﬃcient memory usage. models saved disk google protocol buﬀers several important features minimal-size binary strings serialized eﬃcient serialization human-readable text format compatible binary version eﬃcient interface implementations multiple languages notably python. test program leveldb protocol buﬀers provide throughput mb/s commodity machines minimal impact. thanks layer-wise design code modularity recently added support data sources including contributed open source community. caﬀe layer essence neural network layer takes blobs input yields blobs output. layers responsibilities operation network whole forward pass takes inputs produces outputs backward pass takes gradient respect output computes gradients respect parameters inputs turn back-propagated earlier layers. caﬀe provides complete layer types including convolution pooling inner products nonlinearities like rectiﬁed linear logistic local response normalization elementwise operations losses like softmax hinge. types needed state-of-the-art visual tasks. coding custom layers requires minimal eﬀort compositional construction networks. caﬀe bookkeeping directed acyclic graph layers ensuring correctness forward backward passes. caﬀe models end-to-end machine learning systems. typical network begins data layer loads disk ends loss layer computes objective task classiﬁcation reconstruction. network setting single switch. layers come corresponding routines produce identical results cpu/gpu switch seamless independent model deﬁnition. caﬀe trains models fast standard stochastic gradient descent algorithm. figure shows typical example caﬀe network training data layer fetches images labels disk passes multiple layers convolution pooling rectiﬁed linear transforms feeds ﬁnal prediction classiﬁcation loss layer produces loss gradients train whole network. example found caﬀe source code examples/lenet/lenet_train.prototxt. data processed mini-batches pass network sequentially. vital training learning rate decay schedules momentum snapshots stopping resuming implemented documented. finetuning adaptation existing model architectures data standard method caﬀe. snapshot existing network model deﬁnition network caﬀe ﬁnetunes model weights task initializes weights needed. capability essential tasks knowledge transfer object detection object retrieval ﬁrst months since public release caﬀe already used large number research projects berkeley universities achieving state-of-theart performance number tasks. members berkeley eecs also collaborated several industry partners facebook adobe using caﬀe direct precursor obtain state-of-the-art results. object classiﬁcation caﬀe online demo showing state-of-the-art object classiﬁcation images provided users including mobile phone. demo takes image tries categorize imagenet categories. typical classiﬁcation result shown figure furthermore successfully trained model categories full imagenet dataset ﬁnetuning network. resulting network applied open vocabulary object retrieval learning semantic features addition end-to-end training caﬀe also used extract semantic features images using pre-trained network. features used downstream vision tasks great success figure shows two-dimensional embedding imagenet validation images colored coarse category come from. nice separation testiﬁes successful semantic embedding. intriguingly learned feature useful object categories. example karayev shown promising results ﬁnding images diﬀerent styles vintage romantic using caﬀe features object detection notably caﬀe enabled obtain best performance object detection evaluated hardest academic datasets pascal imagenet detection challenge girshick combined caﬀe together techniques selective search eﬀectively perform simultaneous localization recognition natural images. figure shows sketch approach. beginners’ guides help users started installing using modifying caﬀe provided instructions tutorials caﬀe webpage. tutorials range small demos serious deployments although tutorials serve eﬀective documentation functionality caﬀe caﬀe source code additionally provides detailed inline documentation modules. details step-wise tutorials pre-trained models homepage. development done linux users reported windows builds. public caﬀe amazon instance coming soon.", "year": 2014}