{"title": "Correlation Manipulating Circuits for Stochastic Computing", "tag": "eess", "abstract": " Stochastic computing (SC) is an emerging computing technique that promises high density, low power, and error tolerant solutions. In SC, values are encoded as unary bitstreams and SC arithmetic circuits operate on one or more bitstreams. In many cases, the input bitstreams must be correlated or uncorrelated for SC arithmetic to produce accurate results. As a result, a key challenge for designing SC accelerators is manipulating the impact of correlation across SC operations. This paper presents and evaluates a set of novel correlation manipulating circuits to manage correlation in SC computation: a synchronizer, desynchronizer, and decorrelator. We then use these circuits to propose improved SC maximum, minimum, and saturating adder designs. Compared to existing correlation manipulation techniques, our circuits are more accurate and up to 3x more energy efficient. In the context of an image processing pipeline, these circuits can reduce the total energy consumption by up to 24%. ", "text": "excessive correlation input operand bitstreams. input output precision arithmetic operations same; result arithmetic operation requires higher output precision input precision results quantization errors contrast errors correlation arise over-correlated insufﬁciently correlated input operands; many circuits require correlated uncorrelated inputs operate correctly. table shows implementable functions using -input gate input operands value different correlation levels. notice uncorrelated input bitstreams correctly calculate multiplication cases positively/negatively correlated input bitstreams realize different functions. manipulating managing impact correlation focus paper. paper presents correlation manipulating circuits synchronizer desynchronizer increasing positive negative correlation respectively decorrelator reducing correlation. existing correlation manipulation techniques rely correlated uncorrelated random number generators bitstreams generated prohibitively expensive since converting bitstreams domain requires signiﬁcant power area overheads. instead correlation manipulating circuits proposed work inserted appropriate points computation energy efﬁcient converting domain also propose improved maximum minimum circuits using synchronizer improved saturating adder using decorrelator; also demonstrate utility correlation manipulating circuits context image processing pipeline. contributions follows novel synchronizer desynchronizer circuit increasing positive negative correlation respectively bitstreams. novel decorrelator circuit reducing correlation abstract—stochastic computing emerging computing technique promises high density power error tolerant solutions. values encoded unary bitstreams arithmetic circuits operate bitstreams. many cases input bitstreams must correlated uncorrelated arithmetic produce accurate results. result challenge designing accelerators manipulating impact correlation across operations. paper presents evaluates novel correlation manipulating circuits manage correlation computation synchronizer desynchronizer decorrelator. circuits propose improved maximum minimum saturating adder designs. compared existing correlation manipulation techniques circuits accurate energy efﬁcient. context image processing pipeline circuits reduce total energy consumption search high density power solutions accelerated interest towards wide variety alternative computing techniques technologies. stochastic computing emerging computing technique recently enjoyed renewed interest compact size power improved error tolerance. unlike binaryencoded computation uses unary-encoded bitstreams encode values value bitstream encoded number constituent precision bitstream governed bitstream length. instance bitstream encodes value since bitstream length encoding allows area efﬁcient power implementations arithmetic primitives multiplication. instance given bitstreams compute product calculating bitwise notice multiplication accurate inputs generated independently hence uncorrelated. also notice circuits gain power area lose performance time proportional length bitstream. paper organized follows section provides background section presents correlation manipulating circuits improved circuits. section evaluates correlation manipulating circuits context image processing pipeline. section presents related work. stochastic computing basics stochastic computing alternative computing technique introduced uses unary bitstreams represent values. value bitstream encoded number precision determined bitstream length. bitstreams often referred stochastic numbers either unipolar bipolar encodings. unipolar-encoded weight weight encoded value position divided length limited range instance value since three alternatively bipolar-encoded weight allowing encode negative positive values range example value bipolar encodings. strength circuits extremely dense power error tolerant. instance multiplication implemented single gate since given values respectively bitstream value notice assumed uncorrelated otherwise ﬁdelity multiplication breaks down. addition implemented using multiplexor input operands data inputs uncorrelated auxiliary value select signal. adder effectively samples input equal probability resulting scaled example addition shown fig. input output arithmetic operations must precision. highlights source error quantization errors precision reduction. instance consider addition scale factor resulting sum; forces output precision input precision byproduct drops least signiﬁcant true sum. however fatal levels precision reduction often avoided increasing bitstream length using higher precision conversion circuits accumulative parallel counters generate uses digital-to-stochastic converters takes integer value random integer value produced random number generator value compared produce desired value x/n. choice vitally important since correlated uncorrelated rngs used generate correlated uncorrelated respectively. convert back domain stochastic-to-digital converter realized counter sums converters converters rngs overheads unique operating domain individually much larger consume power arithmetic circuits. however overheads amortized many operations judiciously exploiting application data reuse composing multiple operations together. correlation sensitivity managing manipulating correlation computation critical producing accurate results. fig. shows known arithmetic correlation sensitive circuits; note operations accurate input correlated. three ways mitigate detrimental impact correlation correlated uncorrelated rngs generate correlation agnostic circuits correlation manipulating circuits reduce enhance correlation sns. correlation quantiﬁed using correlation deﬁned deﬁnition number positions number positions zero number positions number positions means perfectly uncorrelated indicates maximal positive negative correlation respectively. mentioned before choice generating important since generated uncorrelated rngs also uncorrelated. similarly produced positively correlated. previous work uses linear feedback shift registers simple compact; however lfsr combinations generate completely uncorrelated sns. result often necessary rotated lfsr outputs different lfsr seeds minimize correlation. recent work shown sufﬁcient low-discrepancy sequences corput halton sobol sequences unfortunately impractical distinct uncorrelated rngs generate since rngs signiﬁcantly larger higher power individual operations; result computation amortizes cost rngs generating many rng. limitation technique correlation induced conversion used affect correlation intermediate sns. exist handful correlation agnostic operations always compute accurate result regardless correlation input sns. unfortunately correlation agnostic variants exist operations. known correlation agnostic circuits also larger consume power equivalent correlation sensitive counterparts. instance experiments correlation agnostic adder introduced larger requires power adder fig. correlation also introduced operations across successive computations. unfortunately quantitative impact arithmetic operation changes correlation respect well-understood. result sometimes difﬁcult impractical completely guarantee correlated uncorrelated input across many operations. correct correlation levels intermediary stages computation correlation manipulating circuits. mitigate impact computation-induced correlation convert back domain using converters re-encode using converters technique known regeneration since regenerates reset correlation existed exist sns. however regeneration expensive execute since converters converters consume orders magnitude power area arithmetic circuits. smaller lower power alternative regeneration inserting isolators however isolators modify order bits limited impact work introduce correlation manipulating circuits make synchronizer desynchronizer novel synchronizer desynchronizer increases positive negative correlation respectively sns. given input synchronizer produces positively correlated value input respectively. idea dynamically pair input streams often possible input sns. inputs same synchronizer simply passes outputs. different synchronizer saves unpaired paired complement later index. pairing bits often possible effectively induces positive correlation sns. desynchronizer relies similar principle increase negative correlation input instead trying dynamically pair bits desynchronizer deliberately tries unpair bits emit many unpaired bits possible. this inputs desynchronizer saves bits passes other. inputs zero takes saved available overrides zeros. finally input bits different synchronizer simply passes since already unpaired. unpairing many bits possible resulting become negatively correlated. quantify efﬁcacy measure average design average bias. bias deﬁned deviation output values input values. ideally bias zero since circuits alter correlation value. table shows initial resulting sccs average bias result several conﬁgurations averaged possible input values. measure induced correlation deliberately chose rngs initialize input minimally correlated synchronizer desynchronizer. also provide conﬁguration inputs initially positively correlated test desynchronizer. general synchronizer desynchronizer designs work well across conﬁgurations. also observe stronger induced correlation input discrepancy results also show average slight negative bias resulting sns. saved bits getting stuck computation. synchronizer desynchronizer designs generalized composed improve strength induced correlation. generalize designs idea extend fsms save additional bits. synchronizer equivalent adding equal number states left right track many bits saved. desynchronizer additional states transitions cycle represent possible saved conﬁgurations. refer number bits synchronizer desynchronizer save save depth idea larger save depth designs resilient runs reduce efﬁcacy. extensions present challenges designs large possible saved bits stuck paired unpaired. adversarial cases result larger biases original value saved bits emitted mitigate issue could optional ﬂush functionality requires keeping track current offset bitstream number remaining saved bits greater equal forces emit saved bits regardless saved state. however modiﬁcations require additional overheads become tremendously expensive large save depth alternative enhance correlation strength compose multiple synchronizers desynchronizers minimal depth together series. synchronizer desynchronizer improve correlation albeit diminishing returns. limit output eventually become maximally correlated. however like extensions still possible residual bits remain resulting compounding bias errors. address issue fsms modiﬁed start saved adjusting initial state. decorrelator introduce decorrelator designed take emit less correlated sns. decorrelator composed shufﬂe buffers shufﬂe buffer small memory randomly replaces emits bits. cycle shufﬂe buffer either pass current input store current input emit previously stored input. depth memory parametrized; intuitively deeper memory allows shufﬂe buffer scramble bits across longer segments determine store emit given cycle decorrelator requires auxiliary input. decorrelate different shufﬂe buffers different rngs. efﬁcacy decorrelator design shown table several correlated conﬁgurations. average decorrelator signiﬁcantly reduces correlation operands. reduce bias errors initialize half buffer design others average fewer input stuck buffer. like synchronizer desynchronizer decorrelator designs composed series reduce correlation. also evaluate isolators tracking forecast memories decorrelating less effective proposed decorrelator. show improve operations using correlation manipulating circuits maximum minimum saturating originally proposed improved maximum combines synchronizer design gate minimum combines synchronizers gate maximum insight input maximal positive correlation larger exactly mask smaller taking sns; gate also propagate extra larger input positively correlated resulting less accurate value strictly greater equal larger input thus synchronizer design induce positive correlation input feeding gate. similar idea used calculate minimum sns. instead gate gate pass maximum number masked sns; results minimum value. finally prepend desynchronizer gate improve saturating adder requires negatively correlated inputs evaluate accuracy exhaustively generate possible inputs using uncorrelated rngs sequence halton sequence base report average absolute error. also evaluate design power area energy accuracy across several maximum designs single gate improved synchronizer-based maximum correlation agnostic maximum table compares improved synchronizer-based maximum minimum prior work shows designs accurate simply using gate without correlation manipulation. compared maximum synchronizer-based design smaller energy efﬁcient minimal accuracy loss. using deeper save depth improve accuracy also increases power area energy relative designs. many aspects illustrates design trade accurate functional units larger consume power. also observe similar results synchronizer-based minimum design. evaluate power area accuracy energy gaussian blur followed roberts cross edge detector accelerator several conﬁgurations. image processing pipeline illustrates role correlation manipulation since gaussian blur requires inputs uncorrelated edge detector requires positively correlated inputs. accelerator architecture expects input image tiled processes tile individually time. outputs within tile computed parallel moving next tile. evaluation input tile size. evaluate several accelerator variants accelerator correlation manipulating circuits accelerator uses regeneration accelerator uses synchronizers manipulate correlation design synthesize place route accelerator using tsmc library synopsys design compiler compiler primetime. power measurements post-placement route simulation using random traces make measurements data agnostic. model quality cycle-level simulator uses models veriﬁed simulation traces. report accuracy terms average absolute error result compared ﬂoating point baseline image. table shows quality energy area results combined accelerator. image quality average absolute error markedly better using regeneration synchronizers image processing kernels results generated design without correlation manipulating circuits. terms energy synchronizerbased design improves total accelerator energy consumption design using regeneration. also average absolute error difference design using regeneration versus design negligible. also compare overheads synchronizer circuits regeneration. this tabulate power break converters converters compute kernels rngs synchronizers. aggregate costs associated correlation manipulation. designs require different numbers converters synchronizers accomplish task; case synchronizerbased design requires synchronizers number converters used regeneration. synchronizers induce correlation using regeneration induces correlation sns. fortunately many applications like kernel sufﬁcient induce correlation pairs sns. result overhead correlation manipulation using synchronizers energy efﬁcient using regeneration. ﬁrst exploit correlation manipulating circuits improve ﬁdelity computation. ting hayes introduce algorithm placing isolator circuits decorrelate sns. however isolators limited shift bits ﬁxed offset scramble relative order; decorrelator scramble order across larger segments tehrani propose edge memories tracking forecast memories improving correlation low-density parity-check decoding. since tfms designed speciﬁcally ldpc decoding generalize well decorrelator design; tfms also larger since portions require binary-encoded arithmetic. finally parhi propose technique paper presents correlation manipulating circuits synchronizer desynchronizer decorrelator managing correlation sns. propose improved maximum minimum saturating adder designs based correlation manipulating circuits show smaller accurate lower power previous designs. finally show using correlation manipulating circuits improve accuracy computations energy efﬁcient using existing correlation manipulation techniques context image processing pipeline. alaghi energy-efﬁcient hybrid stochastic-binary neural networks near-sensor computing design automation test europe conference exhibition march ting hayes isolation-based decorrelation stochastic circuits ieee international conference computer design sc-dcnn highly-scalable deep convolutional neural network using stochastic computing proceedings twenty-second international conference architectural support programming languages operating systems ser. asplos york tehrani gross stochastic decoding ldpc codes ieee communications letters vol. parhi riedel effect bit-level correlation stochastic computing ieee international conference digital signal processing july", "year": "2018"}