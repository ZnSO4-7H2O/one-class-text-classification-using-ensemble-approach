{"title": "Sensor and Sink Placement, Scheduling and Routing Algorithms for  Connected Coverage of Wireless Sensor Networks", "tag": "eess", "abstract": " A sensor is a small electronic device which has the ability to sense, compute and communicate either with other sensors or directly with a base station (sink). In a wireless sensor network (WSN), the sensors monitor a region and transmit the collected data packets through routes to the sinks. In this study, we propose a mixed--integer linear programming (MILP) model to maximize the number of time periods that a WSN carries out the desired tasks with limited energy and budget. Our sink and sensor placement, scheduling, routing with connected coverage ($SPSRC$) model is the first in the literature that combines the decisions for the locations of sinks and sensors, activity schedules of the deployed sensors, and data flow routes from each active sensor to its assigned sink for connected coverage of the network over a finite planning horizon. The problem is NP--hard and difficult to solve even for small instances. Assuming that the sink locations are known, we develop heuristics which construct a feasible solution of the problem by gradually satisfying the constraints. Then, we introduce search heuristics to determine the locations of the sinks to maximize the network lifetime. Computational experiments reveal that our heuristic methods can find near optimal solutions in an acceptable amount of time compared to the commercial solver CPLEX 12.7.0. ", "text": "region deﬁned nodes i.e. deploy activate sensors time period cover node least fi−many sensors. cost placing sensor i.e. type-k sensor location given cjk. total budget s−sinks. scan percentage neighborhood determine improving solution relocate sinks compute network lifetime remaining budget heuristic continue search complete iterlim−many iterations cannot update current lifetime nimpr−many consecutive iterations. revisit recent tabut enure−many solutions solution space sink locations similar locate sinks cheapest nodes initially. swap s−sinks randomly using tabut enure−many solutions. solution tabulist remove oldest solution tabulist. algorithm stops iterlim−many iterations nimpr−many consecutive three initial battery energy levels i.e. medium high. high energy level battery type−k sensor full. medium energy level full battery energy full", "year": "2018"}