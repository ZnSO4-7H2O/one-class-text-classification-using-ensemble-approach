{"title": "Automatic Music Accompanist", "tag": "eess", "abstract": " Automatic musical accompaniment is where a human musician is accompanied by a computer musician. The computer musician is able to produce musical accompaniment that relates musically to the human performance. The accompaniment should follow the performance using observations of the notes they are playing. This paper describes a complete and detailed construction of a score following and accompanying system using Hidden Markov Models (HMMs). It details how to train a score HMM, how to deal with polyphonic input, how this HMM work when following score, how to build up a musical accompanist. It proposes a new parallel hidden Markov model for score following and a fast decoding algorithm to deal with performance errors. ", "text": "automatic musical accompaniment human musician accompanied computer musician. computer musician able produce musical accompaniment relates musically human performance. accompaniment follow performance using observations notes playing. paper describes complete detailed construction score following accompanying system using hidden markov models details train score deal polyphonic input work following score build musical accompanist. proposes parallel hidden markov model score following fast decoding algorithm deal performance errors. accompanists always available needed available accompanists sufﬁcient technical ability provide adequate accompaniment. solution many musicians make recorded computer-generated accompaniment accompaniment static i.e. never changing performance another. forces musician adapt playing synchronize accompaniment. natural musician though accompaniment adapts performer particularly musicians playing tends ’free’. dynamically synchronize accompaniment performance musician accompanist track performers progress score piece play. score following process whereby musician follows another musicians playing musical piece tracking progress score piece. term commonly used context computergenerated accompaniment musicians involved artiﬁcial rather human. purpose research outlined paper construct automatic accompaniment. time i.e. producing accompaniment time soloists playing. places extra challenges score follower. system limited amount information available analysis notes played opposed whole performance several reasons musician perform piece exactly written. changes added mistake wrong note played; extra notes added; scored notes missed out; musician loses place music starts playing wrong point score. tempo speeds slows unintentionally. also changes added deliberately musician adds interpretations music musician adds embellishments trills decorate notes; tempo speeds slows deliberately musical effect; piece played rubato free/improvised sections musician free vary tempo notes played according choice. performance context project performance deﬁned speciﬁcally situation solo musician ﬂute player singer performs piece music. solo musician would accompanied another musician instrument piano. concert similar scenario performing audience condition mandatory. important soloist making attempt play piece linear fashion start ﬁnish. accompaniment music played accompanist performance soloist. accompaniment thought background music designed enhance soloist playing support soloists performance. score follower uses hidden markov model represent musical events uses decoding algorithm estimate state performer likely time i.e. musical event score performer currently playing. deﬁne observation states notes western musical chromatic scale. ignores octave differences between notes merely consider possible observations shown figure hidden states base beat encode information relates beat detailed section paraments contains three parts denoted below. music pieces become complex longer realistic model note state instead pertinent aspect model state beat fraction beat. cases necessary consider timing information within score modelled forward procedure compute based backward procedure compute based compute according equation table compute according equation table update parameters probable hidden state sequence could generate observations sequence produced hearing soloists playing. score followers developed project revised viterbi algorithm used state soloist likely implemented traditional fashion algorithm ﬁnds globally optimum path hidden markov model states probable current state using history observations seen. causes huge computational complexity system cannot used practice although might consider pruning techniques reduce computational complexity pruning valid within context handling arbitrary skips since skips rarely occur compared state transitions. therefore seems necessary introduce constraints performance hmm. {j|j denotes neighbouring states since factor maxjµ] last equation independent calculated complexity decoding algorithm expression computation complexity compared previous complexity. therefore fast viterbi algorithm used efﬁciently part hmms transits outputs observed symbol time. state space parallel given triplet hand information indicate hmms works indicate current states part hmms. human accompanist would wait every note played soloist playing accompaniment. instead anticipate soloist move onto next note score play appropriate accompaniment incoming information soloist update belief soloist score adjust accompaniment necessary. similar fashion system uses hidden markov model representation work next sequential state playing accompaniment state time expects next state occur. receives processes soloists actual input locates state soloist actually reached adjusts accompaniment necessary. implement beat tracking monitor performance’s tempo provide reference accompaniment speed. system incorporates simple version beat tracking. allows small tempo ﬂuctuations tracked soloists output anticipated timely fashion. modelling score temporal units assisted greatly including beat tracking accompanist. implementation simpler effective. accompanist used internal tempo measure continually adjusted match soloists estimated current tempo using local window notes recently played soloist measuring time notes soloist currently judged ghost state last input considered valid updating tempo. though soloist currently judged normal state score follower works long previous note compares actual length last note. current tempo based average recent tempo observations. largest smallest tempo observations ignored mean taken remaining tempo observations generate estimate current tempo. system track volume soloists playing using midi information replicate volume dynamic level accompaniment output playing accompaniment slightly lower volume soloist. system allows soloist line prominent also matches dynamic markings playing. felt important responsive soloists dynamic interpretations allow accompanist play dynamic marking independent soloists dynamics. human accompanist hears soloist deviate slightly score takes time accompanist relocate soloist adjust playing expected accompaniment accompaniment matching soloist. would reasonable computer accompanist respond deviation next state deviation score identiﬁed replicating slight delay human accompanist would also have. assumption states modelled close enough together timing delay noticeable. co¨uasnon camillerapp using grammars segment recognize music scores international association pattern recognition workshop document analysis systems nakamura nakamura sagayama realtime audio-to-score alignment music performances containing errors arbitrary repeats skips ieee/acm transactions audio speech language processing vol. nakamura saito sagayama merged-output hidden markov model score following midi performance ornaments desynrepeats skips algorithms chronized voices vol.", "year": "2018"}