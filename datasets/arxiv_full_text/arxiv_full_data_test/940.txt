{"title": "Using rxncon to develop rule based models", "tag": "q-bio", "abstract": " We present a protocol for building, validating and simulating models of signal transduction networks. These networks are challenging modelling targets due to the combinatorial complexity and sparse data, which have made it a major challenge even to formalise the current knowledge. To address this, the community has developed methods to model biomolecular reaction networks based on site dynamics. The strength of this approach is that reactions and states can be defined at variable resolution, which makes it possible to adapt the model resolution to the empirical data. This improves both scalability and accuracy, making it possible to formalise large models of signal transduction networks. Here, we present a method to build and validate large models of signal transduction networks. The workflow is based on rxncon, the reaction-contingency language. In a five-step process, we create a mechanistic network model, convert it into an executable Boolean model, use the Boolean model to evaluate and improve the network, and finally export the rxncon model into a rule based format. We provide an introduction to the rxncon language and an annotated, step-by-step protocol for the workflow. Finally, we create a small model of the insulin signalling pathway to illustrate the protocol, together with some of the challenges - and some of their solutions - in modelling signal transduction. ", "text": "present protocol building validating simulating models signal transduction networks. networks challenging modelling targets combinatorial complexity sparse data made major challenge even formalise current knowledge. address this community developed methods model biomolecular reaction networks based site dynamics. strength approach reactions states defined variable resolution makes possible adapt model resolution empirical data. improves scalability accuracy making possible formalise large models signal transduction networks. here present method build validate large models signal transduction networks. workflow based rxncon reaction-contingency language. five-step process create mechanistic network model convert executable boolean model boolean model evaluate improve network finally export rxncon model rule based format. provide introduction rxncon language annotated step-by-step protocol workflow. finally create small model insulin signalling pathway illustrate protocol together challenges solutions modelling signal transduction. here present rxncon reaction-contingency language tool develop rule based models. rule based modelling established powerful approach modelling signal transduction networks main strength rule based approach adaptive resolution rules define reactions arbitrary resolution features reactants specified left undefined particularly useful modelling notoriously complex signal transduction networks networks typically transfer information covalent modification complexation components. single component many state variables combines combinatorially large number possible specific configurations microstates contrast empirical measurements typically level elemental macroscopic states defined single state variable hence correspond non-disjunct sets microstates representing network terms non-disjunct sets reactions states rule based approach avoids enumerating possible microstates system. gives powerful advantages comparison microstate based models rule based models scale efficiently accurately represent underlying empirical knowledge rxncon language takes even fully adapting network definition empirical data. network definition separated elemental reactions i.e. biochemical transitions change elemental states contingencies i.e. dependencies transitions elemental states elemental reactions contingencies correspond closely empirical data microstate even rule based models however rxncon language closely related rule based languages rxncon network model fully defines rule based model compiled automatically bionetgen language preparation). addition rxncon offers number advantages compared working directly rules first rxncon language closely relates empirical knowledge making easier write maintain rxncon model. second supported iterative model building validation finding filling workflow helps developing debugging network model third supports automatic model visualisation compact graphical formats fourth rxncon network constitutes annotated knowledge-base human machine readable hence easily reusable model construction merging analysis however rxncon network must compiled executable model simulated. chapter present workflow develop rule based models using rxncon. core manual protocol covering five stages create seed network defines model scope turn seed mechanistic rxncon network convert rxncon network executable boolean model boolean model qualitative network validation debugging export final rxncon network rule based model. protocol based second generation rxncon improved expressiveness model generation semantics preparation). briefly introduce language syntax semantics highlight network definition model generation differ first version. finally illustrate language workflow using rxncon develop rule based model small part insulin signalling pathway. rxncon language defines biochemical reactions terms components elemental states elemental reactions contingencies components independent agents network proteins second messengers etc. correspond molecules rule based models. elemental states fully defined indivisible state properties components specific covalent modification specific site interaction specified domains proteins absence modification interaction specific residue domain respectively. terms rule based models elemental state corresponds state specific site. elemental states actual information carriers define mechanistic changes signalling network transfer information. elemental reactions indivisible reaction events produce consume elemental states elemental reactions defined fully decontextualized skeleton rules meaning catalyst reaction centre defined words core components elemental states change reaction defined. finally contingencies define prerequisite states required reaction. terms rule based models contingencies correspond reaction context i.e. elemental states required change through reaction. rxncon elemental reactions contingencies defined terms elemental states. contingency definition made arbitrarily complex using boolean combinations elemental states used define structured complexes necessary. hence rxncon used build model complex necessary complex. strategies simulate rxncon networks. first bipartite network definition compiled bipartite boolean model simulated without parametrisation case elemental reactions elemental states appear distinct sets nodes sets update rules state node updates determined elemental reactions reaction nodes contingencies. based standard assumptions rxncon network defines unique boolean model fully specified update rules. below validate network structure generating rule based model. second reaction contingency information compiled rule based model preparation). elemental reactions provide skeleton rules define reaction centre. skeleton rules refined applying contingencies define reaction context. complete model creation process implemented rxncon compiler. modelling strategies differ detail perspective rule base model creates reaction rules level molecules boolean simulates reaction network level system. consequently states mutually exclusive level individual molecules coexist boolean model. addition rule based model requires rate assignments parametrisation contrast bipartite boolean model simulated without quantitative information. hence second used validate debug network structure generation parametrisation rule based model. protocol based rxncon described detail elsewhere updated rxncon language improve expressiveness model generation semantics. particular rxncon supports definition structured complexes distinguish e.g. cistrans-phosphorylation across homodimers possible rxncon furthermore reaction definition syntax refined explicitly includes neutral elemental states unmodified residues unbound binding domains together flexible definition elemental reactions skeleton rules changes make possible define essentially reaction rule level biomolecular site dynamics using rxncon language. however certain limitations rxncon. first rxncon network defines qualitative network model network indeed converted ready-to-run rule based model model trivial parameters initial conditions quantitative information must added directly rule based model code. second rule based modelling languages encode processes possible express elemental reactions contingencies e.g. functions bionetgen language finally rxncon language reaction focused molecular level. difficult impossible meaningfully model higher level mechanisms e.g. actin polymerisation vesicle transport. nevertheless within scope biomolecular site dynamics rxncon provides powerful approach model development. here present detailed workflow developing rule based models rxncon. workflow inspired analogous workflow metabolic network reconstruction uses methods tailored different properties signal transduction networks reviewed workflow broken five steps scope definition network seed creation refinement seed mechanistic conversion executable bipartite boolean model evaluation hence functionality conversion rule based model. steps typically performed iteratively reproduces expected vivo functions silico. objective workflow create well annotated knowledge base qualitatively reproduces system level function convert knowledge base rule based model. clarity present sequential workflow. however would practice iterative process literature used refine scope mechanistic model simultaneously. process starts biological question topic interest. process easier function pathways defined functions terms inputs outputs knowledge inputs outputs help defining scope interpret literature validate final model. case know macroscopic input-output behaviour expect knowledge evaluate completeness accuracy microscopic biochemical reaction network defined. rxncon language also suitable true bottom model building elemental reactions independent elemental reactions contingencies independent contingencies. hence language highly composable greatly facilitates network reconstruction fragmented information. however current strategy validation relies comparison known macroscopic input/output behaviours. therefore assume model built context pathway process defined inputs outputs. scope defined terms inputs outputs helpful collect information components needed convey information input output. information typically available genetic data studies shown certain signals processes require certain components. studies also used derive epistatic information i.e. order components pathway used compose draft network scope terms inputs/outputs components typically collected review papers. practice reading step getting topic formal creation network seed optional. second step create mechanistic model. turn network model mechanistic layers information required first actual biochemical transitions network? second causal relationships transitions? practically easiest start pairs components thought directly connected search biochemical reactions connect components. define elemental reactions states three parts information needed; components involved type reaction them state reactions result typically state observed reaction type needs inferred. isolate indirect direct effects reactions typically monitored vitro. reliable data building reaction layer vitro biochemical data. causal layer elusive. contingencies defined effect elemental states elemental reaction. infer causal effects previous state modification e.g. role phosphorylation activation protein complex data needed. ideally information based combination genetic biochemical vitro experiments mutant forms proteins isolated analysed. example candidate phosphorylation residues substituted mimic prevent phosphorylation activity mutant protein compared wild type protein. states needed infer reaction layer measured highthroughput information required contingency layer date generated dedicated throughput experiments. recommend using primary literature build qlm. review articles excellent define scope create network seed. also used build mechanistic model example insulin pathway. however objective detailed mechanistic model based highly specific statements. level detail often missing review papers text original papers find invaluable return actual empirical data. experience high quality curation often involves reinterpretation underlying experimental evidence. output second step rxncon language. defined table elemental reactions defines reaction layer table contingencies defines causal layer together reactions. model visually inspected levels detail. reaction layer visualised rxncon reaction graph edge corresponds reaction chain reactions required sufficient allow information transfer. full visualised rxncon regulatory graph. bipartite graph visualises elemental reactions states nodes connected reaction contingency edges. paths inputs outputs required sufficient information transfer meaningful proceed model generation evaluation paths inputs outputs rrg. third step model generation. step rxncon converted based network. bipartite network node types; elemental reactions elemental states follow distinct update rules described detail elsewhere fully defined given standard assumptions model generation performed automatically. fourth step model evaluation. step used simulate network response changing inputs simulation results compared known vivo behaviour. input/output pair process tests output responsive input signal transmitted pathway. discrepancy used targeted model improvement process returns step even extend refine qlm. tests pass considered qualitatively functional ready conversion rule based model. fifth step convert rule based model. rxncon framework code compile rxncon statements rule-based model formulated bngl described detail elsewhere here briefly touch upon several elements constitute rulebased model relation rxncon model. determine molecule types elemental states appearing rxncon model grouped component. modification states grouped residue determine molecule’s sites possible modifications. interaction states’ domains also mapped molecular sites. elemental reaction combined contingencies translated rules. reaction’s skeleton rule provides rule’s centre whereas every solution contingency’s boolean equation provides possible context rule. example straightforward elemental state requirement provide context. hand boolean statement three phosphorylation sites lead seven contexts combinatorics. translate boolean statements complementary values molecular site taken connected rxncon framework distributed varieties full framework including web-based front-end python library inclusion existing pipeline. varieties require preinstalled python rxncon software developed open source distributed lgpl license. code available github standalone python library graphical user interface installed python package index tool. necessary dependencies automatically resolved installed. build rxncon network user needs fill lists reaction contingency lists described detail section below. reaction definition supported additional sheets reactiontypedefinition lists valid reaction types modificationtypedefinition lists valid modification types. lists extendable enabling easy extension customisation rxncon langague. reaction list elemental reactions defined specs reaction type details). spec corresponds component possibly domain and/or residue definition. spec definition separated three columns exemplified component comment comment reaction necessary. note advisable clearly distinguish hypothetical reactions added debug model high confidence reactions based empirical data make sure actual knowledge-base separated pragmatic model improvements. uidreaction column concatenation information component reaction columns unique reaction filled automatically excel. make sure copy functions rows above edit them. target elemental reaction output regulated. target column also used define boolean states outputs defined text strings within hard brackets e.g. boolean states defined text strings within pointy brackets <booleanstate> elemental reactions defined unique reaction list spread sheet editors like excel convenient link cell reaction reaction sheet. contingency updated soon reaction updated. necessary makes editing convenient. contingency contingency required reaction target. valid contingency types absolute requirement; absolute inhibition; positive influence negative influence effect; known effect. boolean definitions take boolean operators instead; not. modifier elemental state boolean state input target depends inputs defined text strings within hard brackets e.g. boolean states defined text strings within pointy brackets <booleanstate> elemental states defined elemental state string. create reaction types suffices entry list long modification type declared modificationtypedefinition sheet. modification type must added list make sure unique type resolution definitions consistent skeleton rule. details rule-based models generated rxncon framework require either bionetgen nfsim simulate. recommend nfsim contains bionetgen also supports agent based simulation necessary larger networks. nfsim downloaded http//michaelsneddon.net/nfsim/download/. define activator pathway expected behaviour define components connect input output. information typically available review papers paper introductions. define sequential order components possible. refinement helps narrow search mechanistic connections. possible determine components directly connected. optional create conceptual network sketch important events pathway. events correspond phenomenological observations thus need molecular level. conceptual network might help alongside keep overview. exempli gratia insulin signalling pathway part build rule based model initial events insulin signalling pathway. naturally chose insulin input. choosing outputs less obvious decide interested initial signalling events. hence chose activation phosphoinositide -kinase ras. base choices single review paper identify important components connect input output insulin receptor homodimeric form insulin receptor substrate protein; growth factor receptor-bound protein sevenless homolog pik. added phospholipids model plasma membrane binding components. finally sort components order include direct connections gathered review. scope seed summarised figure mechanistic model built layers reaction list defines possible events network decontextualised reactions pairs components contingency list defines contextual constraints reactions. example model built well available download https//github.com/rxncon/models/. presumed component pair search literature reactions connect pairs. determine reaction type best describes event reaction type matches event define reaction type. enter reaction type column reaction. specify component taking part reaction. name components specified columns \"componentaname \"componentbname\". name interaction domains specified \"componentadomain\" \"componentbdomain\". name target residues specified \"componentaresidue\" \"componentbresidue\". annotate reaction entry optional column \"quality\" specify type experiment and/or confidence evidence. optional column \"literatureidentifierspubmed\" annotate source. optional comment \"comments\" desired. repeat steps reactions found considered reaction list. often necessary extend search beyond initial scope. next visualise reaction layer rxncon reaction graph. graph visualises components domains residues nodes reactions edges. information pass component another path reactions connecting two. create graph command line call rxnconreactiongraph script excel file argument. create graph load project. navigation choose „visualisation „reaction graph. iii. provide comment. reuse previous layout. note domains residues intended laid adjacent component node. work well automatic layouts. inspect connectivity components. objective determine mechanistic path input output responds input. determine this look connections upstream downstream component information path inputs outputs connected connections defined contingencies network connected extend network reactions either gathering additional empirical information stating hypothetical reactions obtain connected graph. proceed path upstream downstream components. xempli gratia insulin signalling pathway part using review identify elemental reactions connect components other. searching references direct mechanistic connections like interactions insulin studied greatest detail interpret direct binding insulin insulin receptor reaction list rxncon sheet \"componenta\" reaction type interaction insulin \"componentb\". make reactions states elemental want assign domain name component. found information insulin binds called domain \"lig\" entered \"componenta\". next find information proteins substrates igfr… identifies phosphorylation enter \"ir\" \"componenta\" abbreviation \"p+\" phosphorylation reaction type \"shc\" \"componentb\". case review mentions distinct target residues amino acid phosphorylated three isoforms tyrosine phosphorylated distinct sites hence need distinct reactions differ target residues. case review less specific refers tyrosine phosphorylation. without information enter single site suspect review refers multiple sites overlapping functions. also find residues form core binding domains assign domain names proceed review build reaction list presented table consider reaction list complete proceed visualise create reaction graph network check literature look data identifies active form components. define active form terms elemental state boolean combination several elemental states e.g. modification bonds components. determine part requirement already defined reaction defined contingencies. reaction requires contingency column \"target\". define type contingency column \"contingency\". \"modifier\" place elemental state boolean state input regulates reaction. reaction many contingencies needed. combinations contingencies boolean states used code complex requirements. inputs define regulation system external factors. structure indexes necessary. circumstances component names sufficient define contingencies. particular case component name unique i.e. case complexes containing subunit kind. cases position label must added contingencies enter boolean state name target column. enter boolean operator contingency column. valid operators not. enter either elemental state another boolean state input modifier. structured complexes define equivalences necessary. create regulatory graph. process analogous creation reaction graph above). visualise graph cytoscape. inspect graph determine directed path input output. network connected extend network reactions and/or contingencies either gathering additional empirical information stating hypothetical reactions obtain connected graph repeat steps section. proceed model generation path input output. xempli gratia insulin signalling pathway part causal layer return literature search information reactions regulated. example learn binds phosphorylated residue domain binds phosphotyrosine position shc. already defined reaction domain binds domain contains residue. however residue must phosphorylated. consequently specify contingency protein-protein interaction phosphorylation contingency sheet ppi-reactions \"target\" column. specify phosphorylation residue requirement state \"shc_]-{p}\" \"modifier\" column enter absolute requirement \"contingency\" column. based review paper cannot identify contextual constraints bonds though requirements might appear literature considered empirical data becomes available. insulin binding difficult define. insulin binding requires receptor dimerisation insulin molecule bind receptor. rxncon cannot define interaction complex reaction ir__i_insulin adding requirement dimerisation would easy _i_insulin ir--ir) need complex statement account fact dimer binds single insulin molecule. settle boolean state <ir-empty> ir--ir ir_-- make structured complexes identity subunit labelled followed unique number. reactants index define contingency reaction equivalent position boolean state <ir-empty>ir=ir details). finally example output contingency define requirements activation. possible outputs network. review gather least conditions must fulfilled must bound sos; must bound shc. situation convenient nested boolean expressions describe conditions contingency list. first define statement either complex needed. next define complexes. based review continue define contingencies consider list complete stage visualise reaction-contingency network regulatory graph objective determine every input connected every output. model define external input instead using neutral state insulin consequently check directed path node outputs. case proceed next step. next step create executable model exporting rxncon network bipartite boolean model model generation uses algorithm described detail elsewhere save network files script single directory. start rstudio. open project create directory saved files. make sure model files located project folder. open script. fileprefix script execute entire script selecting text pressing ctrl+enter. script generates five files .pdf _trajectory_first.csv _.pdf _trajectory_second.csv second simulation trajectory values _new_attractor.csv file name rxncon model. save file names rerunning script. files overwritten. repeat simulation steady state rename _new_attractor.csv file _initial_vals.csv. adapt input states perturb model. repeat above. xempli gratia insulin signalling pathway part export using rxncon framework model generation creates three files containing model initial values model reaction state names. initial values file already default initial conditions neutral states true states reactions inputs false would like insulin input also neutral state insulin false default starting point allows system reach steady state absence signal reacts perturbation. simulate network steady state save steady state expected output signals remains off. second round simulation process neutral state insulin true simulation output signals true. round three turn insulin expected attractor round outputs remain reach steady state seen before proceed fourth round simulation. change insulin back true expected outputs still inputs outputs steady state proceed compare attractors. identical proceed evaluation step eager figure network cannot turn initial activation. create bipartite boolean model first simulation without editing _intitial_vals.csv file. remove rename initial_vals file replace _new_attractor.csv file renaming _initial_vals.csv. turn input interest setting value true move rename previous output files save overwritten. rerun simulation determine output changes. remove rename initial_vals file replace _new_attractor.csv file renaming _initial_vals.csv. turn input interest setting value false move rename previous output files save overwritten. rerun simulation determine output changes. compare steady state first simulation steady states same done particular input. continue. remove rename initial_vals file replace _new_attractor.csv file renaming _initial_vals.csv. turn input interest setting value true move rename previous output files save overwritten. rerun simulation determine output changes. compare steady state second simulation steady states same done particular input. continue simulating iterative input states attractor reached seen before. evaluate response effect input across outputs simulations determine outputs regulated input compare known macroscopic input-output behaviour network. reproduced network model? model considered functional proceed generate rule based model. simulation results identify signal blocked. often helps work directions signal reach input? reactions/states responded order affect output? search upstream reaction state node respond. models easily done sorting heatmap transitions inspecting visually upstream node state reaction either missing off. check valid reaction included network blocked contingencies. re-examine contingencies. reaction targeting state. candidate reaction targeted literature search. nothing found consider experimental validation enter hypothetical reaction needs verified. upstream node reaction problem contingencies. re-examine contingencies make reaction responsive directions contingencies targeted literature search experimental validation enter hypothetical mechanisms need experimental verification reactions above. repeat model generation analysis. analyse attractors; repeat update model generation model evaluation functional. iterate input-output paths work expected. case model appears correct complete fails predict expected input/output behaviour consider export assumptions appropriate particular state reaction create complete file simulation results merge _trajectory_first_simulation.csv files single table. spread sheet programs format cells depending values generate heat maps figure xempli gratia insulin signalling pathway part initial model insulin pathway turned off. find signal interrupted direction inspect simulation results detail. first visualise simulation results heatmap states sorted order activation particularly interested difference steady state steady state extract states reactions differ steady states visualise separate panel attractor round phosphorylation states reactions well reactions depending states off. attractor round three states reactions including output signal interesting round simulated model without input signal insulin output signal change round simulated insulin could observe output response input signal turn switching input signal again. closer look list states reactions different phosphorylated states reactions depending states first round third round. indicates de-phosphorylation reactions required antagonise signal missing. added hypothetical de-phosphorylation reactions system problem resolved attractor round round three same phosphorylated states well downstream states reactions turn insulin removed. model reproduces qualitatively expected vivo behaviour proceed final step generating rule based model. load respective project. navigation choose „model export „rule based model. iii. provide comment. create bngl file clicking create model. retrieve file clicking „show button respective detail view model generation automated resulting model trivial parameters initial amounts simulate model bng.pl perl script generated bngl file input. default assumed network-free simulator nfsim used. bionetgen’s standard simulation statement simulate_nf changed simulate_ode. details refer bionetgen documentation. note simple systems simulations give best result. however require full network generated. xempli gratia insulin signalling pathway part creation rule based model. translated rxncon model insulin pathway rule based model bionetgen language. model available electronic supplement residues domains elemental states grouped component name within component name locus take example following elemental reaction state ir_]-{} produces state ir_]-{p}. states describe property residue translated different internal states living single site molecule bngl. molecule type declaration insulin receptor molecule looks follows rxncon modifications always happen residue level bindings domain level. therefore ambiguity arises name clash appended bngl site name. output signals insulin-receptor model pikand signals. first single bound state second interesting. signal contributions shc--grb--sos complex irs--grb--sos complex. correspond different patterns. since bngl allow algebraic expressions observables section solved appending numbers contributions contingencies containing explicit or-statements implicit ones require attention don’t write don’t tell principle bngl. reaction requires phosphorylation site site reaction context first rule derived reaction phosphorylation site context second rule state explicitly site unphosphorylated. developed procedure closely related gram-schmidt orthogonalisation procedure make sure rules derived elemental reaction disjunct contexts rules generated rxncon framework automatically disjunct reaction contexts. imulation rule based model. parametrisation simulation rule based models fall outside scope chapter since interested response system insulin simulate following explaned detail text below xempli gratia insulin signalling pathway part simulation rule based model. studying boolean model conclusion require extra dephosphorylation reactions make sure output signals turn insulin goes away. however first study response without dephosphorylation reactions works rule-based model. bionetgen setconcentration command adjust species concentrations mid-simulation however complete state species specified. step adding insulin convenient. step removal degradation rule insulin controlled rate ins_deg_ whose initial value changed setparameter command. large value parameter compared rate constants make sure insulin disappears almost instantaneously. iterations applying rules species created reactions them. network generation took handful minutes modest laptop. integrating system took roughly fifteen minutes. rule-based simulation plotted figure shows behaviour boolean simulation figure removal insulin output signal stays stuck state. therefore dephosphorylation reactions rule-based model. simulation again happens bionetgen version reading file insulin_dephos.bngl read parameters. read molecule types. read species. read observable. read reaction rule. action generate_network iteration species rxns iteration species rxns iteration species rxns iteration species rxns iteration species rxns iteration species rxns iteration species rxns iteration species rxns iteration species rxns iteration species rxns iteration species rxns iteration species rxns iteration species rxns reaction rates insulin_prod insulin_deg function calls define below. furthermore state produced insulin unbound state degradation rule matches insulin state. deletemolecules keyword necessary desired behaviour says degrade insulin molecule connected complex remove entire complex system insulin molecule possibly breaking complex subunits along way. using functional form reaction rates allows control production degradation insulin controlling values parameters ins_prod_ ins_deg_ setting ins_prod_ high number production active number insulin molecules smaller numinsulin reaches numinsulin production turned again. setting ins_deg_ high number degradation insulin active long insulin present system. figure network reconstruction process levels information depth. conceptual network seed defines scope components. input output network need identified together components shown three kinases connect inoutput. ideally pair wise connection components determined reaction layer connects components. next step network seed refined defining actual reactions network. step type reactions component pairs well states produce consume need identified. reaction layer lacks causal information. here information used display elemental states consumed produced reaction. note network falls apart isolated motifs. causal layer connects reactions states. contingencies define reactions depend states reaction contingency layers required create connected network level information transfer. graphs visualised sbgn-af format figure syntax elemental reactions states. elemental reactions defined components reaction type separated underscores written strings. components specified domain and/or residues depending reaction type resulting states defined resolution. locus flanked hard brackets separated component underscore. residue additionally flanked normal brackets. interactions components resolution becomes elemental level domains. covalent modifications resolution becomes elemental level residues. elemental states resolution reactions. dimerisation indicated double dash phosphorylation appending -{p}. elemental states domain residue mutually exclusive elemental states domain residue. contingencies defined reaction combination elemental states inputs. combinations elemental states expressed boolean states make possible define structured complexes. example binding insulin requires dimerisation receptor also insulin bound already express rxncon reaction ir__i_insulin requires boolean state <ir-empty>. <ir-empty> turn defined complex monomers position first equivalent reaction reaction defines binding insulin must unbound schematic representation insulin signalling pathway. extracellular insulin binds dimerised insulin receptor autophosphorylates recruits phosphorylates insulin receptor substrate turn phosphorylated binds grb/sos phosphoinositide--kinase figure adapted rxncon reaction graph visualises reaction layer mechanistic model. major light green nodes components. minor light green nodes domains. minor dark blue nodes residues. arrows phosphorylations. grey edges interactions. network connected component bottom-most components figure reaction-contingency model. rxncon model visualised regulatory graph shows elemental reactions elemental states reaction edges define elemental reactions produce consume elemental states. contingency edges define elemental states activate inhibit elemental reactions. certain contingencies cannot defined individual elemental states; defined boolean contingencies graph follow path upstream reaction _i_insulin_through pathway reaches outputs hence graph appears complete. figure boolean simulation results. initial model activate deactivate insulin signal. heatmap shows state evolution elemental reaction state time colours indicate state dark grey true white false. simulation initiated insulin states false neutral states components true reactions outputs false. model simulated first steady state reached expected outputs remain neutral state insulin true simulation repeated next steady state reached pathway turns insulin false insulin states well reactions produce them false. insulin false simulation repeated next steady state surprisingly signal turn despite insulin also means steady state seen before. hence simulation repeated time insulin fourth steady state reached expected outputs closer inspection reveals steady state four identical steady state hence explored possibilities model determine model failed shut down inspect reactions states differed steady state first entries list residues lock phosphorylated states. closer inspection reveals seven residues dephosphorylation reactions repeat simulation updated model. seven reactions placed bottom. output responds expected insulin steady state equal steady state consequently perform three simulations. closer inspection problematic states reactions reveals return state updated model. figure simulation rule based model. simulation insulin response system absence extra dephosphorylation reactions. nfsim simulation insulin response system absence extra dephosphorylation reactions. behaviour similar solution except stochastic noise. nfsim simulation insulin response system presence seven extra dephosphorylation reactions. obtain signal decent signal noise ratio parameters related dephosphorylation reactions chosen follows phosphatases molecule counts dephosphorylation reactions rate constant insulin switches responses switch off. steady-state response lower requires fully phosphorylated complexes less numerous presence dephosphorylation reactions. table reaction type definition. table defines constitute well-formed reaction statements statements translate rule rule-based model skeleton rule. entry tables provides definition certain type reactions. table gives constraints component specifications appearing reaction statement adhere order statement well-formed. first moltype defines type reaction operates second resolution specification defines level resolution example definition phosphorylation stated subject protein specification component resolution object protein specification residue resolution. means a_p+_b_] valid statement whereas a_p+_b since stated component resolution. however user also provide reaction lower resolution required. case generic locus name generated make resolution elemental. skeletonrule defines translation rxncon statement reaction rule subsequently compiled bngl. discuss details elsewhere highlight features reactions consume produce elemental states live either molecules bonds molecules allow method calls specification objects return specification objects standard reactions come rxncon framework defined precisely table user definitions reactiontypedefinition sheet parsed together model. note modification types also need defined modificationtypedefinition sheet. table reaction list insulin model. reaction layer insulin model defined elemental reactions fall classes complexation interaction) covalent modification rxncon autophosphoryaltion always within single molecule autophosphorylation trans translate normal phosphorylation reaction. table contingency list insulin model. contingency layer insulin model defined contingencies spread lines definition boolean states. model definition used absolute requirements define contingencies boolean operators define boolean states. table dephosphorylation reactions added insulin model filling process. model evaluation showed phosphorylated states need reversible network responsive insulin directions. however identities phosphatase unknown hence seven unknown phosphatases identical across reactions. work supported german federal ministry education research ebio cellemental chapter written 'modeling biomolecular site dynamics' series methods molecular biology. blinov m.l. bionetgen software rule-based modeling signal transduction based interactions molecular domains. bioinformatics danos rule-based modelling cellular signalling concur concurrency theory international conference concur lisbon portugal september proceedings caires v.t. vasconcelos editors. springer berlin heidelberg berlin heidelberg. harris l.a. bionetgen advances rule-based modeling. bioinformatics hlavacek w.s. complexity complexes signal transduction. biotechnol bioeng koschorreck reduced modeling signal transduction modular approach. bioinformatics borisov n.m. domain-oriented reduction rule-based network models. syst biol conzelmann e.d. gilles exact model reduction combinatorial reaction networks. syst biol münzner towards genome-scale models signal transduction networks systems biology nielsen hohmann editors. wiley. romers j.c. krantz rxncon language executable molecular systems biology. biorxiv tiger c.f. framework mapping visualisation automatic model creation signal-transduction networks. syst biol lubitz network reconstruction validation snf/ampk pathway baker’s yeast based comprehensive literature review. systems biology applications thieme bipartite boolean modelling method mechanistic simulation validation large-scale signal transduction networks. biorxiv rother information content scalability signal transduction network reconstruction formats. biosyst faeder j.r. m.l. blinov w.s. hlavacek rule-based modeling biochemical systems bionetgen. methods biol flottmann reaction-contingency based bipartite boolean modelling. syst biol mori stochastic simulation boolean rxncon models towards quantitative analysis large signaling networks. syst biol thiele b.o. palsson protocol generating high-quality genome-scale metabolic reconstruction. protoc mussel hopfensitz h.a. kestler boolnet--an package generation reconstruction analysis boolean networks. bioinformatics hlavacek w.s. j.r. faeder complexity cell signaling need mechanics. signal siddle molecular basis signaling specificity insulin receptors neglected corners recent advances. front endocrinol systems biology graphical notation activity flow language level version integr bioinform anaconda provides easy install recent python well rstudio used bipartite boolean model analysis. downloaded from https//www.continuum.io/downloads python installation. python install though anaconda rxncon folder appears /anaconda/lib/site-packages. files need call appear /anaconda/scripts. elemental states defined specs state. five slightly different ways states look iii. componenta’s name componentb’s name doma domb domain names residue name modification type. bidirectional reaction internally converted forward reverse reaction. unique names concatenating uidreactionkey therefore names must also reserved. scope network depends objective study. think parts network important include part interest. scope often changes model building helpful clear idea functions components included even moving target. input output pathway define border detailed mechanistic model surrounding cell. think input/output behaviour macroscopic function pathway detailed molecular mechanisms explain hlavacek w.s. j.r. faeder complexity cell signaling need mechanics. signal pe.. typical examples inputs signals cellular states examples outputs include transcriptional activation cellular decisions. technically input behave like elemental state i.e. acts activator inhibitor reaction. correspondingly outputs behave like reactions i.e. respond elemental state. good practice. quality model generally improves number different sources strongly recommend multiple sources even stage definitely mechanistic model building. however settle single paper model demonstration purposes only. presumed connections good starting point find relevant network information used narrow literature searches. however sufficient network draft complete unlikely. important keep mind probably components reactions components needed connect model input output. reaction types defined adding lines reactiontypedefinition sheet. different columns described briefly materials section above detail elsewhere romers j.c. krantz rxncon language executable molecular systems biology. biorxiv extend list essential make sure unique molecule type resolution consistent skeleton rule. addition modification type must defined modificationtypedefinition sheet. helpful reaction types existing ones. resolution depend state change covalent modifications live residues bonds live domains. catalysts components synthesised degraded defined component level. intramolecular reactions autophosphorylation intramolecular bond formation defined entering component name componentaname componentbname. note domains and/or residues differ though. catalytic transport reactions active component specified component reciprocal non-directional reactions order arbitrary. however order must consistent entries software realise bound bound complexes. hence recommend alphabetic order cases. domains required bonds. bonds targeting domain molecule mutually exclusive; hence domain names impact model generation. domains required specified assigned unique names parsing step. domains defined residue information required. case residue live domain. affects partially undefined contingencies contingency specified phosphorylation domain resolution only correspond statement phosphorylation sites within domain. residues required covalent modifications. covalent modifications targeting residue molecule mutually exclusive; hence residue names impact model generation. residues required specified assigned unique names parsing step. transfer layout already existing graph graph .xgmml format. species information files compared known coordinates certain species template graph transferred graph. species mentioned template graph visualised centred cytoscape. elemental reactions states needed define contingencies causal layer. hence reaction layer prerequisite causal layer however practice model building goes back forth reactions contingencies. contextual information always easy find takes dedicated experiments identify requirements. depending number modification sites interaction partners experiments time resource demanding. consequently expect many important contingencies remain unknown. existence component itself. however components typically regulated information transfer networks meaning state component determines activity. keep mind functional pathway active forms components need reversed signal present anymore. this reverse reactions needed reset components. implicit interaction reactions covalent modification synthesis/degradation reactions. contingency symbols. absolute required; inhibitory. quantitative stimulation inhibition. effect known effect known effect. last equivalent interpretation model. boolean contingencies defined format convenience. target boolean state modifier elemental states boolean states inputs; contingency symbol type booelan not. note single boolean state take boolean expression nested booleans create mixed statements. input outputs defined borders mechanistic rxncon model surrounding. note also used borders internal processes well known. assigning name input output made equivalent essentially forming feedback pathway. effect varies modelling formalism. components listed reaction always indices imperative indices contingencies consistent these other. note boolean namespace equivalences must declared boolean used. examples contingency list insulin example regulatory graph simplified view regulatory structure rxncon model. alternatively full states reactions visualised species-reaction graph. graph created command line python \\rxnconsrgraph.py console. species-reaction graph button selected. purposes reaction graph creation. created evaluated using boolean model. modelling approach assume node model states either true//on false//off. node defined specific update function describing dependency nodes system. time step rule certain component evaluated substituting components within rule states. result state component here create update rules state reactions rather components nice advantages first derive unique model rxncon network. second distinguish different active states. different options boolean model generation listed calling program --help\" option. selected calling command line program certain flags. currently options exit control smoothing availability source states time express knockouts overexpressions choose whether interpret positive influences negative influences strict requirements strict inhibitions ignore them select output filename. typically models large exhaustive scan initial configurations number possible starting states equals number nodes. instead start generic start position components without states neutral states thieme bipartite boolean modelling nodes off. method mechanistic simulation validation large-scale signal transduction networks. biorxiv details. starting point typically perform simulation system find natural initial state starting change input configuration. here r-studio using boolnetsim.r script downloaded github r-script contains comments convenience. also commands line line. change rscript adapt needs. script executes second simulation first attractor test whether point cyclic attractor. first case second simulation results consist identical columns second case simulation results consist columns change. important check directions. easy create model responds direction once. therefore input needs varied model returns previous steady state output still responsive. seen insulin example necessarily case even regulatory graph appears connected output responds first time. heatmap regulatory graph powerful tools help search. heatmap used track first reactions states change expected regulatory graph summarise complete regulatory information graphical level. type error detected likely appear elsewhere too. hence makes sense visually inspect regulatory graph possible sources similar problems repeating complete cycle. case needed fifty hypothetical dephosphorylation reactions cases default assumptions generation inappropriate. could prevent model passing validation step. appears case adapt manual appropriate update rules. y.to_protein_component_spec% y.to_mrna_component_spec% x%x%‐‐ y%y%‐‐ x%y%x%‐‐y% x%x%‐‐ y%y%‐‐ x%y%x%‐‐y% x%x%‐‐y%‐‐ x%x%‐‐ x%x%‐‐ y%y%‐‐ x%y%x%‐‐y% y%y%‐{} y%y%‐{truncated} y%y%‐{} y%y%‐{ub} y%y%‐{gtp} y%y%‐{} y%y%‐{} y%y%‐{gtp} x%x%‐{p} y%y%‐{} x%x%‐{} y%y%‐{p} y%y%‐{} y%y%‐{p} y%y%‐{p} y%y%‐{} y%y%‐{} y%y%‐{p} component component componentmrna componentgene domain gene domain protein domain protein domain protein component protein component protein component protein component protein residue protein component protein component protein component degrada\u0000on synthesis transla\u0000on transcrip\u0000on protein‐gene‐interac\u0000on interac\u0000on intra‐protein‐interac\u0000on protein‐protein‐interac\u0000on trunca\u0000on ubiqui\u0000na\u0000on gtpase‐ac\u0000va\u0000on guanine‐nucleo\u0000de‐exchange phosphotransfer auto‐phosphoryla\u0000on dephosphoryla\u0000on phosphoryla\u0000on uidreac\u0000on target ir__i_insulin <ir‐empty> <ir‐empty> ir_p+_ir_] <ir‐ins> <ir‐ins> <ir‐ins> <ir‐ins> ir_p+_ir_] ir_p+_ir_] ir_ap+_ir_] <irac\u0000ve> <irac\u0000ve> <ir‐phos> <ir‐phos> <ir‐phos> ir__ppi_irs_ ir__ppi_irs_ ir_p+_irs_] ir_p+_irs_] grb__ppi_irs_ ir__ppi_shc_ ir_p+_shc_] ir_p+_shc_] ir_p+_shc_] ir_p+_shc_] grb__ppi_shc_ grb__ppi_shc_ irs__ppi_pik_ <grb‐sos> <grb‐sos> <gs> <gs> <ir‐empty>ir=ir ir‐‐ir ir_‐‐ <ir‐ins>ir=irir=ir ir‐‐ir <ir‐ins>ir=irir=ir ir_‐‐insulin ir_‐‐insulin <ir‐ins>ir=irir=ir <ir‐ins>ir=irir=ir <irac\u0000ve>ir=ir <ir‐phos>ir=ir <ir‐ins>ir=ir ir_]‐{p} ir_]‐{p} ir_]‐{p} ir_]‐{p} irs‐‐phospholipids ir_‐‐irs_ <irac\u0000ve>ir=ir irs_]‐{p} ir_]‐{p} ir_‐‐shc_ <irac\u0000ve>ir=ir ir_‐‐shc_ <irac\u0000ve>ir=ir shc_]‐{p} shc_]‐{p} irs_]‐{p} grb‐‐sos <gs> grb_‐‐shc_ grb_‐‐irs_ <grb‐sos> irs_‐‐pik_", "year": "2018"}