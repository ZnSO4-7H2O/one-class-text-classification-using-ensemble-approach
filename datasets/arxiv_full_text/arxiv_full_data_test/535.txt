{"title": "An implicit boundary integral method for computing electric potential of  macromolecules in solvent", "tag": "q-bio", "abstract": " A numerical method using implicit surface representations is proposed to solve the linearized Poisson-Boltzmann equations that arise in mathematical models for the electrostatics of molecules in solvent. The proposed method used an implicit boundary integral formulation to derived a linear system defined on Cartesian nodes in a narrowband surrounding the closed surface that separate the molecule and the solvent. The needed implicit surfaces is constructed from the given atomic description of the molecules, by a sequence of standard level set algorithms. A fast multipole method is applied to accelerate the solution of the linear system. A few numerical studies involving some standard test cases are presented and compared to other existing results. ", "text": "numerical method using implicit surface representations proposed solve linearized poisson-boltzmann equation arises mathematical models electrostatics molecules solvent. proposed method uses implicit boundary integral formulation derive linear system deﬁned cartesian nodes narrowband surrounding closed surface separates molecule solvent. needed implicit surface constructed given atomic description molecules sequence standard level algorithms. fast multipole method applied accelerate solution linear system. numerical studies involving standard test cases presented compared existing results. words. poisson-boltzmann equation implicit boundary integral method level method fast multipole method electrostatics implicit solvent model. mathematical modeling numerical simulation electrostatics charged macromoleculesolvent systems extensively studied recent years importance many branches electrochemistry; instance references therein recent overviews developments subject. roughly classes mathematical models macromolecule-solvent systems depending eﬀect solvent modeled explicit solvent models solvent molecules treated explicitly implicit solvent models ∗department mathematics university texas austin yzhongmath.utexas.edu †department mathematics ices university texas austin renmath.utexas.edu ‡department mathematics ices university texas austin royal institute solvent represented continuous medium. explicit solvent models believed accurate computationally intractable modeling large systems. implicit models therefore often alternative large simulations references therein recent advances. poisson-boltzmann model popular implicit solvent models solvent treated continuous high-dielectric medium model many variants important applications instance studying biomolecule dynamics large proteins many eﬃcient accurate computational schemes numerical solution model developed introduce poisson-boltzmann model assume macromolecule respectively. closed surface separates region occupied macromolecule rest space. typical choice so-called solvent excluded surface deﬁned boundary region outside macromolecule accessible probe sphere small radius figure illustration. denote region surrounded includes macromolecule. denotes dielectric constant outside solvent excludes interface solves poisson’s equation continuous distribution charges models eﬀect solvent nonlinear term poisson-boltzmann system poses signiﬁcant chalmany practical applications replaced linear function called debye-huckel screening parameter boltzmann constant unit charge ionic strength respectively. leads linearized poisson-boltzmann outward normal direction usual continuity conditions continuity potential across assumed radiation condition requires decay zero away macromolecule needed ensure uniqueness solutions linearized poisson-boltzmann equation. e.g. computational solution linearized poisson-boltzmann equation practically relevant conﬁgurations turns quite challenging. diﬀerent types numerical methods including instance ﬁnite diﬀerence methods ﬁnite element methods boundary element methods many hybrid specialized methods developed; recent survey subject. method advantages disadvantages. finite diﬀerence methods easy implement. methods used many existing software packages finite diﬀerence methods except ones based adaptive oct-tree structures uniform cartesian grids require special care implementing interface conditions high order maintaining stability. finite element methods provide ﬂexibility geometry. however like ﬁnite diﬀerence methods often suﬀer issues large memory storage requirement solution speed dealing large problems. moreover ﬁnite diﬀerence ﬁnite element methods need truncate domain therefore radiation condition satisﬁed exactly. boundary element methods based integral formulations poisson-boltzmann equation. require discretization solvent excluded surface i.e. macromolecule solvent domains. radiation condition usually exactly although implicitly integrated integral form solved. however matrix systems resulting boundary element formulations often dense. eﬃcient acceleration instance preconditioning techniques needed accelerate solution dense systems. work propose fast numerical method solving interface/boundary value problem linearized poisson-boltzmann equation method derived implicit boundary integral formulation relies classical level algorithms computing implicit interfaces needed geometrical information. involved computational procedures deﬁned underlying uniform cartesian grid. thus proposed method inherits ﬂexibilities level algorithm. hand since method derived boundary integral formulation treats interface conditions ﬁeld conditions less involved fashion compared standard level algorithms similar problems. types implicit boundary integral approaches relatively describe detail linear system fast multipole method used acceleration common matrix-vector multiplications resulting linear system. demonstrate simulations involving non-trivial molecules deﬁned tens thousands atoms standard kernel-independent fast multipole methods used easily eﬀectively standard boundary integral method. conclude introduction following remarks. linearized poissonboltzmann model provides suﬃciently accurate approximation many cases particular solution’s ionic strength relatively low; references therein. cases linearized model accurate enough solving nonlinear poisson-boltzmann necessary. appropriate ﬁeld conditions ﬁnite diﬀerence ﬁnite element methods provide compute solutions case; references therein. computational method develop work potentially combined iterative scheme nonlinear equations methods newton’s type solve nonlinear poisson-boltzmann equation. iteration nonlinear solver proposed method adapted solve linearized problem long coeﬃcients involved mainly dielectric coeﬃcients constants currently assumed algorithm. rest paper organized follows. ﬁrst introduce section implicit boundary integral formulation linearized poisson-boltzmann system present details implementation method section section present numerical simulation results demonstrate performance algorithm. concluding remarks oﬀered section throughout rest paper coeﬃcients involved equations assumed introduce constant i.e. independent spatial variable. deﬁne fundamental solutions ﬁrst equation formulation simply linear combination equations second equation formulation nothing linear combination derivatives equations shown potentially hypersingular integral involving second derivatives actually integrable thanks fact main beneﬁt formulation typically leads discretization linear systems smaller condition numbers formulation typical boundary element methods system require careful triangulation interface e.g. next subsection describe method discretize boundary integral system subset uniform cartesian grid nodes narrowband surrounding without need parameterize interface closed surface distance function diﬀerentiable neighborhood around denote signed distance function takes negative sign points inside region enclosed denote points whose distance smaller implicit boundary integral formulation surface integral deﬁned derived projecting points onto closest points distance function projection operator evaluated necessarily constant along surface normals approximated second order shown weight function vanishing moments replace jacobian keeping equality valid even numerically approximate implicit boundary integral embedding computational domain rectangle subdivide uniform grid grid size along coordinate direction formulation provides convenient computational approach computing boundary integrals boundary naturally deﬁned implicitly level continuous function diﬃcult parameterize. geometrical information boundary restricted computation jacobian closest point extension integrand approximated easily simple ﬁnite diﬀerencing applied distance function grid point within furthermore smoothness weight function along smoothness integrand allow higher order approximation simple riemann example discussion kernels appear formally integrable additional treatment singularities needed numerical computation close. typically additional treatment corresponds either local change variables variables singularities exist mesh reﬁnement control numerical error ampliﬁcation proposed simple discretization implicit boundary integral formulation uniform cartesian grid viewed extreme case nystr¨om method mesh reﬁnement involved therefore need regularize kernels analytically locally suﬃciently close respect grid spacing. includes deﬁnition initial level function followed inward eikonal level function eikonal apply step removes implicit surface interior cavities accessible solvent figure illustration process various surfaces involved finally apply reinitialization procedure level function obtained cavity removal. stage shall obtain signed distance function solvent excluded surface linearized poisson-boltzmann boundary integral equation solved. constructed signed distance function sign function deﬁned used deﬁned waals surface prescribed molecule centers. computations performed functions deﬁned inward eikonal reinitialization stage computed commonly used routines i.e. third order total variation diminishing runge-kutta scheme time quick remark order regarding algorithms used generate implicit representation solvent excluded surface. course approaches generate surfaces level framework. general ideas appear similar diﬀerent many details could potentially inﬂuence performance algorithm uses prepared surfaces. point procedure described diﬀerent proposed section particular method applies reinitialization removing cavities need additional numerical solution dirichlet problem laplace equation irregular domain reinitialization cavity removal essential proposed approach requires distance function narrowband surrounding surface. cavity procure require reinitialization step. refer extensive review related algorithms. figure construction solvent excluded surface ﬁctitious molecule deﬁned atoms. ﬁnal shown solid curve right plot. waals surface corresponding molecule shown blue curve. green curve solvent accessible surface inward eikonal shrink distance arrive pink curves dashed pink curve right plot shows boundary cavity enclosed molecules. removed computation. waals surface shall deﬁne so-called solvent excluded surface zero level continuous function φses. φses computed simple inward eikonal starting initial condition involving followed iterations standard level reinitialization steps. figure illustration procedure dimensions. details described following subsections. zero level ˜φsas contain pieces surfaces isolate cavities believed void solvent. figure provides example cavities protein used computation. cavity removal step uses simple sweep remove regions create level function φses describes exterior closed connected surface solvent excluded surface identify region contains cavities. superset cavities containing points outside cavities within distance cavity surface. done peeling process moving markers initially placed boundary computational domain inwards using breadth-ﬁrst search algorithm. ﬁrst layer surfaces deﬁned zero level ˜φsas deﬁned solvent excluded surface. could therefore remove remaining portion ˜φsas’s zero level sets regarded corresponding cavities. process easily compute characteristic function supported figure cavity protein gray surface solvent excluded surface used computing electric potential protein right subﬁgure rendering gray surface made semi-transparent order reveal enclosed cavity surfaces regions enclosed surfaces cavities removed. kinks solvent accessible surface lower accuracy computation φses. addition cavity removal step introduce small jump discontinuities near removed cavity. perform several iterations standard level reinitialization improve equivalence computed φses signed distance function reinitialization equation ﬁrst appeared deﬁned standard ﬁfth order weno space third order tvd-rk scheme time compute reinitialization. general lower order schemes result larger perturbation zero level surface supposed moved. deﬁned suﬃces solve amount time neighborhood close zero level set. constant number time steps reinitialization independent since ﬁfth order weno approximation uses central diﬀerencing seven grid nodes along grid lines minimal number time steps needed create signed distance refer readers detailed discussion reinitialization level functions extension functions alternative higher order algorithm. general smooth nonlinear integrands weight function provides second order convergence. since chosen even function distance surface vanishing moment. therefore zeroth order approximation jacobian lead zero order error. depth analysis properties diﬀerent choices simulations reported paper solve system standard gmres algorithm. gmres algorithm black-box fast multipole method accelerate multiplication operator vector. particular solution diagonal part used preconditioner. means gmres algorithm starts particular initial condition denotes regularization parameter used tolerance gmres algorithm order chebyshev polynomials bbfmm preconditioner achieve tolerance there. general smaller results accurate approximations resulting linear systems solved successfully. however cannot small respect grid spacing otherwise resulting linear system becomes badly conditioned current regularization approach becomes ineﬀective. numerical experiments performed desktop quad-core .ghz ram. computations involving million unknowns performed older linux computer similar cache memory suﬃcient ram; convenience comparison timings presented tables simulations performed computer scaled according clock speed processor diﬀerences computers. think scaling timing reasonable size computations machines involved. sign next scaled timings tables. section ﬁrst compare surface areas computed method ones computed published algorithm. later subsections present simulations algorithms molecules diﬀerent sizes. certain examples compare computational results available published data. particularly perform simulations realistic benchmark macromolecules taken rcsb protein data bank missing heavy atoms software pdbpqr atom charges radius parameters using simulations generated force ﬁeld charmm number atoms reported subsection corresponds number respective molecule. tables presented section columns titled d.o.f. show total number unknowns discrete systems provides basis observe rate convergence computed solutions surface areas polarization energies. ﬁgures presented section electrostatics computed diﬀerent grid resolutions painted respective computed solvent excluded surfaces. practice important information would like extract computations locations extrema; e.g. ﬁgures show extrema potentials computed coarser grid resolutions already correct locations surfaces. shall numerical accuracy study section foremost bottleneck proposed algorithm order regularization singular integrals. however regularization essential smaller amount leads systems require gmres iterations unless grid spacing suﬃciently small. instance simulations presented tables despite regularization issue boundary integrals computed accurately wider full expression jacobian used. however wider implies larger dense linear system needs solved. reported computation times spent evaluation matrix-vector multiplications. thus simulations presented below choose regime narrow suﬃcient practice adopted simple quadrature resolve surface geometry. finally regarding small given molecule probe size compare performance algorithm calculating surface areas diﬀerent proteins msms algorithm developed msms algorithm probe radius density parameter mesh generation. online implementation highperformance computing group produce data msms. table compare results method msms seven diﬀerent proteins grid size observe surface areas computed algorithm quite close msms’s approximate values general. since msms results approximations true values attempt tune algorithmic parameters method obtain results even closer msms results. start single model developed benchmark solution accuracy numerical algorithm. three diﬀerent relative errors exact numerically represented quantities measure quality numerical solutions. deﬁned numerical example compute polarization energy protein e.coli factor protein data bank. protein atoms diﬀerent radii. information locations radii atoms available figure plot potential constructed solvent excluded surface computed diﬀerent grids computational results tabulated table computed values polarization energy gpol compared existing estimations gtabi kcal/mol treecode-based boundary kcal/mol ﬁnite diﬀerence solver integral solver tabi gapbs compute polarization energy protein non-peptide inhibitor complexed hiv- protease. protein atoms. figure plot potential constructed solvent excluded surface protein computed diﬀerent grids. computational results tabulated table example compute polarization energy protein cucumber mosaic virus. protein atoms. figure plot potential constructed solvent excluded surface computed diﬀerent grids. computational results tabulated table figure electrostatic potential molecular surface proteasome thermoplasma acidophilum left potential computed grid. right potential computed grid. present paper numerical method solving boundary value problem linearized poisson-boltzmann equation widely used model electric potential macromolecules solvent. method relies standard level method preparing distance function molecular surface. contrary typical level method partial diﬀerential equations discretized suitable boundary conditions involves solution integral equation derived implicit boundary integral formulation similar typical level methods contrary typical boundary integral methods proposed method involves computation functions deﬁned uniform cartesian grids. numerical simulations show addition ﬂexibility comes level methods proposed method computationally eﬃcient boundary integral based algorithms. show numerical simulations solutions resulting linear systems accelerated easily existing fast multipole methods. furthermore eikonal reinitialization stage proposed algorithm rely widely available explicit solvers trivially parallelized. several possible improvements could investigated future. first quadrature implicit boundary integral formulation improved increase order accuracy. includes improvement regularization kernel singularities full expression jacobian also consider diﬀerent grid geometries underlying mathematical formulation require uniform cartesian grids. example adaptive oct-tree structure used radial basis functions considered. presented simulations computed moderate desktop computers reported results show potential proposed method molecular dynamics simulations involving large molecules. zhong partially supported national science foundation grants dms- dms-. tsai partially supported national science foundation grants dms- dms- army research oﬃce grant wnf---. would like thank professor chandrajit bajaj motivating conversations topics related paper.", "year": "2017"}