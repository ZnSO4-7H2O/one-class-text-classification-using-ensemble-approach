{"title": "EBIC: an evolutionary-based parallel biclustering algorithm for pattern  discover", "tag": "q-bio", "abstract": " In this paper a novel biclustering algorithm based on artificial intelligence (AI) is introduced. The method called EBIC aims to detect biologically meaningful, order-preserving patterns in complex data. The proposed algorithm is probably the first one capable of discovering with accuracy exceeding 50% multiple complex patterns in real gene expression datasets. It is also one of the very few biclustering methods designed for parallel environments with multiple graphics processing units (GPUs). We demonstrate that EBIC outperforms state-of-the-art biclustering methods, in terms of recovery and relevance, on both synthetic and genetic datasets. EBIC also yields results over 12 times faster than the most accurate reference algorithms. The proposed algorithm is anticipated to be added to the repertoire of unsupervised machine learning algorithms for the analysis of datasets, including those from large-scale genomic studies. ", "text": "institute biomedical informatics university pennsylvania philadelphia department automatics biomedical engineering university science technology mickiewicza krakow poland department computer science ben-gurion university beer sheva israeland department computer science arkansas state university jonesboro motivation biclustering algorithms commonly used gene expression data analysis. however accurate identiﬁcation meaningful structures challenging state-of-the-art methods incapable discovering high accuracy different patterns high biological relevance. results paper novel biclustering algorithm based evolutionary computation subﬁeld artiﬁcial intelligence introduced. method called ebic aims detect order-preserving patterns complex data. ebic capable discovering multiple complex patterns unprecedented accuracy real gene expression datasets. also biclustering methods designed parallel environments multiple graphics processing units demonstrate ebic greatly outperforms state-of-the-art biclustering methods terms recovery relevance synthetic genetic datasets. ebic also yields results times faster accurate reference algorithms. availability ebic source code available github https//github.com/epistasislab/ebic contact correspondence requests materials addressed p.o. j.h.m. supplementary information supplementary data results analyses additional information method available bioinformatics online. discovering meaningful patterns complex noisy data especially biological challenge. traditional clustering approaches k-means hierarchical clustering expected group similar objects together separate dissimilar objects distinctive groups. methods assume object features contribute classiﬁcation result renders clustering valuable technique global similarity detection. clustering however succeed subset features important speciﬁc cluster. inability capture local patterns main reasons advent biclustering techniques biclusters subsets rows columns sought. rows columns subsets contain elements necessarily adjacent other thus differentiating biclustering problems pattern matching simultaneously clustering rows columns matrix later called biclustering last decades biclustering applied multiple domains including biomedicine genomics text-mining marketing dimensionality reduction others designing biclustering algorithms involves many challenges. first although ﬁfty biclustering algorithms proposed method proven capable detecting sufﬁcient accuracy major types gene expression data. patterns commonly present biclustering algorithms patterns column-constant rowconstant scale shift scale orderpreserving. detection order-preserving patterns especially important considered generalization patterns second many biclustering algorithms unable detect negative correlations capture approximate patterns. moreover biclustering algorithms fail properly separate partially overlapping biclusters. performance algorithms overlapping problems usually drops dramatically increasing levels overlap third drawback current biclustering methods limited success assessing biclusters relevant. multiple measures assessing quality biclusters used algorithms yield single bicluster time rendering application cumbersome methods output high number biclusters pbba usually produces many overlaps degrades overall performance algorithm providing proper balance local global context within data also difﬁcult. methods model global relations typically able deliver limited number results fabia tend exhibit decreased accuracy result hand algorithms focus local similarities susceptible losing global reference example unibic sorts pairs values column indices order identify longest common subsequences able detect longest order-preserving pattern pair rows irrespective order columns fails capture narrow biclusters containing rows multiple columns. biclustering problem np-hard designing efﬁcient accurate parallel biclustering algorithm remains challenge. reference biclustering algorithms purely sequential. reason methods either require intensive computations limit application datasets smaller size fast cost lower accuracy. paper novel biclustering algorithm called ebic introduced overcomes shortcomings. algorithm based evolutionary computation subﬁeld artiﬁcial intelligence likely ﬁrst biclustering algorithm capable detecting aforementioned types meaningful patterns high accuracy. ebic also parallel biclustering methods. show proposed algorithm outperforms established methods ﬁeld respect accuracy relevance synthetic real genomic datasets. open-source multi-gpu parallel implementation algorithm also provided. design algorithm motivated following observation. given input matrix {aij stands rows columns consider counting number rows property value column smaller value column i.e. akq}. values dataset generated randomly univariate distribution half rows average expected property half not. addition another column series values columns larger values column i.e. akr} result another reduction number rows half. thus data without signal addition column series reduces number concordant rows half. hand distribution data uniform exists monotonic relationships rows subset conditions addition pattern-speciﬁc column won’t eliminate rows belonging pattern. thus algorithm attempts intelligently manipulate multiple series columns assigns higher scores series column additions result total reduction rows. quality bicluster determined function takes consideration number columns exponentially number rows follow monotonically increasing trend represented series columns. design ﬁtness function promotes incorporation columns biclusters provided sufﬁcient number rows matching trend representation compared evolutionary-based biclustering methods instead modeling bicluster tuple rows columns biclusters ebic represented series column indices. quality given series calculated based number rows match monotonous rules present within series columns. modiﬁcation column series performed using ai-based technique known genetic programming series columns expanded rule impose matched sufﬁcient number rows. ebic belongs family hybrid biclustering approaches features several techniques commonly used evolutionary algorithms. development biclusters driven simple genetic operations four different types mutations insertion column series deletion columns series swap columns within series substitution column within series crossover individuals undergo genetic operations determined using tournament selection. obtain diverse solutions variant technique called crowding used limits probability selecting individuals share columns already added generation speciﬁcally ﬁtness individuals take part tournament decreased homogeneous penalty corresponds average penalty using columns separately. explanation value parameter provided supplementary data. described penalty enhances additions population individuals underrepresented columns highly increases diversity population. individuals whose overall ﬁtness highest stored toprank list updated newly found individual substantially overlap individual list. construction population variant tabu list used forbids calculation previous biclusters elitism used clone step initialization. gpus divide dataset proportionally rows depending number gpus distribute data across multiple gpus. generate initial population calculate ﬁtness gpus. initialize top-rank list sequentially adding unique series columns highest ﬁtness according step prepare population biclusters. population reaches required size haven’t previously analyzed). select individual using tournament selection. thus select solution randomly previous population adjust quality applying penalty similarity previously accepted solutions. penalty vartheta calculated averaging penalties incurred selecting column separately number columns within series. ﬁnal penalty calculated using value selecting individuals perform genetic operations solution novel population tabu list update penalties using solution’s columns. store population compressed biclusters format solution previously analyzed increase number tabu-list hits. number greater size population ﬁnish calculations step order report previously found best patterns. step calculate quality biclusters parallel. dispatch population gpus. determine many rows match series columns. collect results multiple gpus determine ﬁtness bicluster according step update top-rank list. sort population according ﬁtness. individuals top-rank list checking substantially overlap records higher ﬁtness. bicluster added remove top-rank list records lower ﬁtness substantially overlap bicluster. individuals population checked remove top-rank list records lowest ﬁtness required size top-rank list reached. maximal number iterations accomplished back step performance ebic evaluated benchmark synthetic datasets compared biclustering methods unibic opsm qubic fabia bicspam well newly published gpuaccelerated biclustering algorithm called condition-dependent correlation subgroup latter hasn’t benchmarked established collection datasets neither synthetic genomic. test suite used benchmark algorithms contains three popular biclustering problems pattern discovery biclusters overlap narrow biclusters detection. recovery relevance scores group best individuals found population still able search around local minima limit communication overhead compressed biclusters format proposed storing biclusters format motivated compressed storage popular representation sparse matrices. fig. compressed bicluster format uses arrays. ﬁrst array determines starting positions biclusters second holds indexes columns biclusters. example population consists three biclusters start indices respectively. basic concept ebic parallel biclustering algorithm based artiﬁcial intelligence presented figure dataset split equal chunks data distributed across multiple gpus. population different series columns generated stored format broadcast multiple gpus. counts number rows match given series. results summarized sent back order calculate ﬁtness used later assess bicluster quality. fig. overview ebic. dispatching chunks input data multiple gpus biclusters represented multiple series columns stored format broadcast gpus. calculates number many rows chunk match series imposed columns. used determine ﬁtness bicluster generate biclusters. large-scale analysis human transcriptome multiple normal tissue gene expression across strains brain regions various inbred strains toxicants effect liver pooled individual sample comparison neural tissue proﬁling head neck squamous cell carcinoma insulin effect skeletal muscle breast cancer histologically normal breast epithelium performance ebic tested synthetic well real gene expression datasets. synthetic benchmark wang available https//sourceforge.net/projects/unibic/files/data_result.zip. biological validation well-established benchmark eren used eight genetic datasets. collection datasets results ebic synthetic genetic datasets could found supplementary data. ﬁrst problems veriﬁes ability algorithm identify different data patterns including trend-preserving column-constant row-constant shift scale shift-scale. tests assess accurately biclustering algorithm detects three biclusters size implanted within matrix size four biclusters size implanted within matrix size biclusters size implanted within matrix size problem consists different datasets patterns constitute unit tests total. tests overlapping patterns measure ability algorithms detect biclusters size implanted within matrix size overlapped elements tests total narrow biclusters biclusters rows columns implanted within large matrix size tests total. tests determine whether biclustering methods capable discovering patterns feature multiple rows small number columns show independence results method times problems. time different seed served initialize pseudo-random number generator used initialize population ﬁrst iteration. effectiveness pattern discovery ebic evaluated real-world gene expression datasets. purpose bibench software benchmark genetic datasets eren used. details gene datasets used study presented table procedures data acquisition preprocessing analysis followed. thus datasets downloaded using geoquery preprocessed using imputation completing biclustering gene enrichment analysis bicluster performed using package gostats biclusters considered signiﬁcantly enriched p-values associated given term lower benjamini-hochberg correction assessment results based proportion enriched biclusters biclusters reported. algorithm allowed return biclusters dataset. number biclusters found proportion signiﬁcantly enriched results compared study presented table ebic tested overlap ratios synthetic datasets ebic stop either iterations number tabu-list hits exceeded size population. parameters defaults. columns biclusters allowed overlap block-size cuda kernel took reasonable amount computation time comparison accuracy ebic selected biclustering methods terms recovery relevance presented fig. manage return result trend-preserving rowcolumnconstant patterns thus method excluded comparison. algorithm managed present partial solutions shift- scale- shift-scale patterns only. average recovery relevance scores ebic better reported previous methods. difference especially visible order-preserving shift-scale problems considered biologically meaningful ebic managed detect patterns perfectly trend-preserving patterns methods reached average. average relevance recovery rate shift-scale patterns also much higher. scale shiftscale patterns ebic attained high recovery/relevance scores across tests although scores worst-case scenarios comparable methods ebic ﬁrst biclustering algorithm capable detecting aforementioned patterns average recovery relevance recovery/relevance scores multiple runs algorithm initialized different random numbers differ statistically. ebic also tested datasets provided bhattacharya detected biclusters recovery relevance scores whereas reported scores vary approximately nearly overlapping biclusters. second tests compares deterioration accuracy biclustering algorithms detecting trend-preserving biclusters overlap other. problems contains tests biclusters size overlap within matrix size problem represented dataset variants resulting tests total biclustering methods tend deteriorate implanted biclusters start signiﬁcantly overlap performance ebic also decreased higher level overlap considered decrease small. algorithm still able maintain recovery relevance scores close average. second-best method unibic deteriorated around non-overlapping biclusters recovery relevance overlapping structures. narrow biclusters. last phase benchmark considers detection narrow biclusters comprising rows columns implanted within matrix size scenario contains variants resulting tests total. results presented fig. contrast algorithms ebic managed much better task discovered almost perfectly implanted structures. narrowest biclusters algorithm approximately twice good second method dedicated ﬁnding narrow biclusters unibic reported accuracy detecting narrow biclusters within dataset. manage return bicluster every dataset test. noise sensitivity. noise sensitivity analysis ebic found supplementary data. tuning ebic parameters allows method reasonably resistant normally distributed noise. genetic datasets observed proportion enriched biclusters obtained approximately iterations highly depended dataset iterations either improved worsened proportion. ebic iterations columns allowed overlap results enrichment analyses presented table memory management issues encountered algorithm unable detect biclusters genomic datasets terminated prematurely error. ﬁxing algorithm even parallel mode proved extremely slow. although dataset reasonable size took days computation yield results ebic generated highest percentage enriched biclusters. ebic restrictive overlap ratio generated higher percentage signiﬁcantly enriched biclusters comparison method. second best hand generated much signiﬁcantly enriched biclusters. ebic less restrictive overlap outperformed methods included study terms number percentage signiﬁcantly enriched biclusters. ebic generated signiﬁcantly enriched biclusters second-best method importantly ebic managed nearly signiﬁcantly enriched biclusters. removing overlapping biclusters). ebic yielded signiﬁcantly enriched biclusters methods ebic proved times faster accurate methods largest datasets. would like formulate requirements next-generation biclustering methods. algorithms expected meet following criteria capable discovering major types biclusters discussed high accuracy capable handling overlapping narrow approximate patterns similar accuracy; provide meaningful solutions synthetic real datasets; scalable. contrast methods described paper ebic average accuracy exceeding certainly meets requirements could called next-generation biclustering method. ebic certain limitations. first closer overlap threshold ebic longer able capture different series present within columns. instead series columns represented largest number rows incorporate permutations. reason construction top-rank list. performance purposes list uses intersection columns merging criterion makes actual order columns within series irrelevant. full overlap biclusters within top-rank list possible discouraged. secondly application ebic datasets fewer columns discouraged. case exhaustive search guarantees discovery meaningful patterns much shorter time. thirdly overlap degree biclusters dataset requires veriﬁcation. tuning parameters method decrease level overlaps. restrictive overlap threshold allows algorithm detect fewer biclusters less overlapping columns less restrictive overlap threshold returns biclusters cost overlap. degree biclusters’ overlap cannot directly controlled ebic. guidelines exact number iterations ebic well optimal level overlap biclusters top-list need empirically deﬁned. ebic scores seem improve every iteration. accuracy pattern detection generally improves time synthetic datasets hold real genomic datasets. highest proportion signiﬁcantly enriched biclusters oscillated even slightly deteriorated real-world genetic datasets iterations. genomic datasets ebic stopped iterations seemed reasonable compromise percentage enriched results time. additional study inﬂuence size input matrix number required iterations needed. result noticeable considering difference secondthird-best methods addition biclusters returned overlap substantially less depending dataset. datasets well results biological validation ebic available supplementary data. reinspected results best methods applying ﬁltering proposed prelic implemented eren procedure removed biclusters overlap others ﬁltering biclusters ebic remained found signiﬁcantly enriched remained marked signiﬁcantly enriched eschewed testing methods number signiﬁcantly enriched biclusters ﬁltering procedure even applied lower ebic applying procedure. order assess scalability methods datasets columns different numbers rows ranging generated. times averaged based runs methods datasets default parameters. algorithms allowed yield biclusters. tests performed machine intel coret ram. comparison times logarithmic scale presented fig. starting rows ebic began faster unibic precise methods far. problems rows ebic times faster unibic times faster ccs. increasing data size running times ebic started comparable ones opsm isa. actual performance ebic larger datasets multiple gpus requires investigation. ebic parallel biclustering methods dedicated multi-gpu environments. comparison state-of-the-art algorithms ebic exhibited number advantages ebic outperformed stateof-the-art biclustering algorithms established synthetic datasets. ebic algorithm discover types major genetic patterns synthetic datasets average accuracy maintain accuracy narrow overlapping biclusters. ebic found signiﬁcantly enriched biclusters second-best method benchmark genomic datasets biclustering previously successfully applied. extensive method development necessary fully realize potential solving challenging data problems. p.o. conceived study designed implemented algorithm. p.o. j.h.m. performed analysis. m.s. x.h. consulted project analyzed results participated writing manuscript. j.h.m. oversaw project.", "year": "2018"}