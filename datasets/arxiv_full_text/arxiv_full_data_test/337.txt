{"title": "IGoR: a tool for high-throughput immune repertoire analysis", "tag": "q-bio", "abstract": " High throughput immune repertoire sequencing is promising to lead to new statistical diagnostic tools for medicine and biology. Successful implementations of these methods require a correct characterization, analysis and interpretation of these datasets. We present IGoR -- a new comprehensive tool that takes B or T-cell receptors sequence reads and quantitatively characterizes the statistics of receptor generation from both cDNA and gDNA. It probabilistically annotates sequences and its modular structure can investigate models of increasing biological complexity for different organisms. For B-cells IGoR returns the hypermutation statistics, which we use to reveal co-localization of hypermutations along the sequence. We demonstrate that IGoR outperforms existing tools in accuracy and estimate the sample sizes needed for reliable repertoire characterization. ", "text": "high throughput immune repertoire sequencing promising lead statistical diagnostic tools medicine biology. successful implementations methods require correct characterization analysis interpretation datasets. present igor comprehensive tool takes t-cell receptors sequence reads quantitatively characterizes statistics receptor generation cdna gdna. probabilistically annotates sequences modular structure investigate models increasing biological complexity diﬀerent organisms. b-cells igor returns hypermutation statistics reveal co-localization hypermutations along sequence. demonstrate igor outperforms existing tools accuracy estimate sample sizes needed reliable repertoire characterization. adaptive immune system recognizes pathogens binding antigens speciﬁc surface receptors expressed cells. recent advent high throughput immune repertoire sequencing gives direct insight diversity b-cell t-cell receptor repertoires great potential change diagnose treat prevent immune system related disorders. growing number algorithms software tools designed address challenges repseq particular sequence analysis germline assignment clone construction however receptor sequence generated large number ways scenarios recombination genomic segments insertions deletions hypermutations. standard assignments introduce systematic errors describing inherently stochastic process. quantitatively characterizing diversity biases mechanisms remains challenge understanding adaptive immunity applying repseq diagnostics. present ﬂexible computational method software tool igor processes immune sequence reads source learns unbiased statistics recombination somatic hypermutations. using statistics sequence igor outputs whole list potential recombination hypermutation scenarios corresponding likelihoods. igor’s performance identifying correct scenario times better current state-of-the-art methods. igor used sequence generator produces arbitrary number randomly rearranged sequences statistics dataset. applied bcrs igor learns context-dependent hypermutation model identify hotspots allows comprehensive analysis mutational landscape bcrs. recombination selects three segments library germline genes assembles deleting base pairs inserting non-templated ones junctions cell receptors diversify somatic hypermutations aﬃnity maturation. recombination process degenerate sequence generated many diﬀerent ways igor starts listing possible recombination hypermutation scenarios leading observed sequence dataset. assigns probability weights reﬂecting likelihood scenarios. example fig. shows explored scenarios different comparable contributions sequence likelihood. since exploring possible scenarios would computationally costly igor restricts exploration reasonably likely ones. scenario exploration takes less second sequence single core depending chain diﬀerent recombination architectures dependencies conﬁgured within igor specifying dependencies elementary events acyclic directed graph bayesian network illustrated fig. case chains fig. igor’s pipeline sequence analysis. recombination proceeds joining randomly selected segments segments gets trimmed ends varying number nontemplated insertions added hypermutations sequencing errors enhance diversity. igor lists putative recombination scenarios consistent observed sequence weighs according likelihood. likelihood scenario computed using bayesian network dependencies recombination features illustrated human locus. architectures described online methods. igor’s pipeline includes three modes. learning mode igor learns recombination statistics data sequences. analysis mode igor outputs detailed recombination scenario statistics sequence. generation mode igor produces synthetic sequences speciﬁed recombination statistics. sequences using sparse expectation-maximization algorithm analysis mode igor assigns recombination events sequences probabilistic outputing likely scenarios ranked probabilities well overall generation probability sequence. generation mode igor outputs random sequences speciﬁed statistics e.g. learned real datasets. used igor’s learning mode infer accurate statistics recombination four datasets comprised unique sequences non-productive rearrangements three diﬀerent chains sequenced either levels mrna heavy chain naive cells generalizing earlier methods restricting nonproductive unique sequences allowed avoid biases introduced functional selection. expectation-maximization algorithm converged within iterations blue) used. contrast gene usage varied moderately signiﬁcantly across individuals even across sequencing technologies suggesting possible primer-dependent biases insertions junction junctions similar distributions previously reported signiﬁcantly insertions junctions tcrs consistent previous observations validated learning algorithm synthetic datasets. sequences generated batches igor variable error rate using statistics inferred data. igor’s learning algorithm sequences resulting statistics compared known ground truth. found inference highly accurate datasets sequences error rate typical experimental value aﬀected overﬁtting. however high-throughput sequencing datasets reach depth especially restricted unique non-productive sequences. addition hypermutation rates bcrs igor treats errors reach assess limitations aﬀect accuracy calculated kullbackleibler divergence true distributions inferred ones varying sizes datasets error rates. erfig. igor infers reproducible recombination statistics. distribution number insertions junctions recombined genes junctions data junction mrna data insertion site mrna data average distribution number deletions across genes. negative deletions correspond palindromic insertions e.g. means p-nucleotides. inferred distributions robust choice individuals genetic material sequencing technology. error bars show standard deviation across individuals. suﬃcient learn accurate model majority estimation error deletion proﬁles increasing error rate little eﬀect rates signiﬁcantly degrades accuracy typical hypermutation rates gene usage distribution aﬀected suggests recombination statistics bcrs inferred using sequences naive hypermutated cells considering possible recombination scenarios sequence approach departs signiﬁcantly existing methods whose goal likely one. assess often plausible scenario correct analyzed synthetic sequences generation scenario known. generated sequence used igor’s analysis mode enumerate scenarios consistent nucleotide sequence ranked according likelihood. fig. shows distribution rank true recombination scenario synthetic data. maximum-likelihood scenario correct sequences sequences. distributions long tails meaning substantial fraction sequences estimated many scenarios ranked likely least likely needed explain given fraction total sequence likelihood. distributions number across generated sequences shown fig. various values enumerate correct scenario conﬁdence requires include least scenarios. analysis indicates many scenarios need considered correctly characterize generation process. igor outputs probability generation processed sequences summing probabilities possible scenarios deterministic assignment methods cannot shown generation probability predictive sharing properties healthy individuals functionality could used useful indicator convergent recombination studies attempting identify antigen-speciﬁc autoimmune related sequences large clinical datasets. compared method representative stateof-the-art algorithms mixcr eﬃcient assignment tool ﬁnds best matching germline genes partis bcr-speciﬁc tool uses maximum likelihood plausible scenario. base-pair sequences synthetized silico datainferred model using igor’s generation mode. assigned recombination scenarios using mixcr partis dicting complete recombination scenario well individual components. note partis include palindromic insertions igor mixcr treat appending short palindromic sequence germline segment; restricting analysis sequences generated without palindromic insertions makes partis’ performance comparable mixcr next compared recombination statistics learned three methods true statistics used generate data. mixcr partis built distribution recombination events assigned sequence igor distributions inferred using expectation-maximization explained before. three methods yield similar statistics gene usage deletion proﬁles however dependency usage correctly captured igor methods genes organised clusters containing followed genes family containing followed genes family. organisation cannot recombined genes family mixcr assigns impossible recombination events sequences constrast igor correcly learns rule assigning zero frequency impossible pairs. results obtained directly real data finally igor accurately reconstructs distribution insertions methods systematically overestimate probability zero insertions study patterns shms expressed memory cells included igor possibility infer sequence-dependent hypermutation rate. probability error mutation given position nucleotide sequence assumed depend immediate n-mer context logistic transformation additive score computed using position weigth matrix similar binding energy motifs used describe binding sites igor memory out-of-frame sequences ref. learn -mer pwms well overall mutation rates ﬁxing recombination statistics previously learned naive sequences using expectation maximization igor’s probabilistic framework handles degeneracy sequence origin caused convergent combinations gene choices hypermutations. learning procedure diﬀers crucially ref. hypermutation rate uniform. three distinct pwms learned templated regions validate mutation rate learning algorithm generated synfig. validation synthetic data. short synthetic reads recombined sequences generated known recombination statistics given igor input re-infer statistics. inference sequences typical sequencing error rate gives excellent agreement gene usage insertion statistics deletion statistics discrepancy true inferred values recombination statistics measured kullback-leibler divergence function number unique sequences sample decomposed cording features recombination scenario. increasing rates sequencing errors hypermutations. igor compared true scenarios sequences generated. igor’s partis’ case model parameters learned generated dataset mimick analysis real data. fig. shows performance three methods assigning correct scenario recombination. igor performs times better mixcr partis preprocessed analysis igor existing methods mixcr partis igor ranks putative scenarios descending order likelihood. distribution rank true scenario called igor. note best-ranked scenario correct less cases. distribution number scenarios need enumerated include true scenario conﬁdence. frequency igor mixcr partis call correct scenario recombination likely well separate feature scenario ‘failed’ corresponds sequences algorithm output assignment. usage frequency gene conditioned gene inferred igor mixcr igor recovers physiological exclusion mixcr not. prediction position-dependent probability hypermutations correlated well actually observed sequences pwms reproducible across tested individuals indicating inference procedure robust individual history infections pointing universal nature mechanism. constrast inferred overall mutation rate diﬀerred two-fold factor individuals probably owing diﬀerences past infections lifestyle motifs found recapitulate previously reported hotspot motifs every gene including wrcy well cold-spot motifs albeit lesser extend three motifs generally underrepresented except mutated position genes less mutated others. assessed robustness model n-mer length learning pwms sizes ranging contributions relative position change substantially function context length. positions least nucleotides away mutation locus contribute motif. could mean context dependence broad alternatively motif model indirectly capturing non-contextual eﬀects. overall inferred pwms give detailed nuanced view rules govern hotspot positions cannot reduced easily describable motifs. fig. shows motifs diﬀer substantially between genes. v-learned pwms moderately predict j-gene hypermutation rates j-learned pwms predict v-gene rates even worse disagreement indicates predictions purely based context-dependent motifs insuﬃcient explain variability hypermutation probabilities mechanisms must play. overall mutation rate also diﬀerent germline genes consistent reports chromatin state aﬀects hypermutation rates hypermutation learned expectation-maximization out-of-frame sequences memory cells. comparison observed mutation rate nucleotide prediction model function position along segment four frequent genes. pearson correlation coeﬃcient gene usage given each. pwms inferred genes. distribution number mutations sequence. data sequences broader distribution predicted model spatial co-localization index measuring overrepresentation used inferred within igor probabilistically call putative hypermutations sequences. ﬁrst examined distribution number mutations sequence empirical distribution skewed longer tail would expected assuming independent hypermutations sequence predicted generating randomly hypermutated sequences inferred observation consistent fact diﬀerent cells undergone variable number cycles aﬃnity maturation resulting diﬀerences eﬀective hypermutation rates. second asked whether hypermutations co-localized within sequence calculating enrichment hypermutations positions function genomic distance enrichment synthetic sequences real data shows -fold enrichment hypermutations nearby positions. diﬀerence consistent fact cause repairs large regions typical distance co-localization enrichment index decays gives igor principle calculate generation probability sequence. however highly hypermutated sequences pose additional challenge ancestral recombined sequence sometimes known certainty. overcome issue igor explores sequence possible recombination hypermutation scenarios calculates generation probability potential ancestral sequence. using synthetic data checked generation probability individual sequences well predicted method distribution accurately reproduced statistics predicts recombination scenarios accurately previous methods. detailed analysis recombination scenarios reveals that even perfect estimator scenario incorrectly called sequences suggesting caution interpreting results deterministic assignments. although demonstrated functions human igor’s ﬂexible structure makes applicable variable lymphocyte receptor species genomic data available. unlike hidden markov model based methods include wide array possible dependencies recombination events. also adapted handle unusual incomplete rearrangements igor also help detect unusual rearrangement features using syntheticaly generated sequences control. instance rearrangements tandem reported distinguishing random insertions challenging. test this data compared predictions igor’s synthetic sequences generated single segment found times double-d assignments data control validating ﬁndings contrast analysis performed showed signiﬁcant presence tandem future versions igor include possibility including multiple rearrangements. note igor reversed nonproductive sequences only sequences. recombination model learned given locus igor generate arbitrary numbers synthetic sequences statistics could used control disease-association studies helping distinguish antigen-speciﬁc clonotypes public sequences high convergent recombination frequencies thus dispense need healthy control cohort. analysis hypermutations infer distinct sequence motifs mutation targets segments human contrast previous approaches assume universal context model although motifs learned short reads comprising part segments analysis synthetic sequences showed motifs could accurately learned short reads. exploring applicability longer reads would interesting future direction. found hypermutations tend co-localize along sequence. results suggest least three eﬀects determine hypermutation hotspots immediate context hypermutation modeled sequence motifs position-speciﬁc eﬀects mediated e.g. chromatin conﬁguration histone modiﬁcations co-occurence nearby mutations. future improvements hypermutation target igor functions according three modes statistics learning sequence analysis sequence generation. modes rely explicit stochastic description recombination hypermutation events. analysis learning modes sequence analysed listing possible recombination hypermutation scenarios. learning mode iterates analysis mode updating model parameters according expectationmaximization algorithm. three modes igor assumes receptor sequences result recombination scenario comprising several stochastic elements choice germline segments deletions insertions. features stochastic share statistical dependencies other. tractability assume dependencies represented acyclic graph also called bayesian network structure conﬁgured within igor’s setup ﬁles. purpose study used following dependency structures chain cells denote choice germline genes delv delj number deleted base pairs ends segments deldl deldr number deletions left right ends segments insvj insvd insdj numbers insertions insertion processing tcrs naive bcrs constant error probability assumed throughout sequence. processing memory bcrs context-dependent hypermutation model assumed position along genes hypermutation occurs probability pmut -mer sequence context centered around location mutation. entries position weight matrix contribute additively motif overall hypermutation rate. analysis learning modes sequence ﬁrst aligned possible germline genes retrieved genomic databases using smithwaterman algorithm germline genes alignment scores higher adjustable threshold considered analysis possible scenarios listed picking germline genes above-threshold alignment score choosing number base pairs delete ends aligned parts. base pairs located germline segments trimmed manner called insertions alignment mismatches germline called errors hypermutations. palindromic germline genes entirely deleted number remaining palindromic base pairs described negative deletions. allow possibility segments inserted directions bcrs added reverse complements germline segment list genomic templates. read pread. probability pre-mutation sequence generated recombination pgen deﬁned probabilities precomb scenarios leading sequence. since pre-mutation sequence known certainty calculated approximate generation probability pgen geometric mean pgen possible unmutated sequences consistent read weighted posterior probabilities shorten computation times plausible scenarios listed igor. scenarios enumerated exploring nodes hierarchical decision tree depth corresponds choice scenario feature. branches tree discarded total contribution sequence probability upper-bounded certain threshold. details procedure given text. learning algorithm infers parameters eqs. well error hypermutation model parameters large datasets unique sequences. relies sequence analysis module follows expectation-maximization procedure. starting arbitrary parameters sequences dataset analysed described above producing long list scenarios associated sequence. deﬁne pseudo-loglikelihood weighted log-likelihoods scenarios sequences weights given conditional probabilities scenarios given sequence precomb/pread pseudolog-likelihood maximized respect parameters log-likelihoods keeping weights ﬁxed. parameters updated procedure repeated convergence. mathematical derivations update rules details expectation-maximization given text. compare model parameters inferred synthetic data known model parameters data generated computed kullbackleibler divergence probability distributions log/p scenarios computed using eqs. kullback-leibler divergence decomposed additive contributions scenario features detailed text. applied learning algorithm following publicly available datasets alpha beta chains datasets available sequence read archive beta chains datasets available http//physics. princeton.edu/~ccallan/tcrpaper/data/; naive memory heavy chains datasets available http//physics.princeton.edu/ ~ccallan/bcrpaper/data/. thomas heather ndifon shawe-taylor chain decombinator tool fast eﬃcient gene assignment cell receptor sequences using ﬁnite state machine. bioinformatics ralph matsen consistency rearrangement substitution parameters enables accurate cell receptor sequence annotation. plos computational biology frequencies hypermutations position positions respectively calculated individual scenario statistics weighted posterior probabilities. pairs positions separated observed large enough number times gene order assess occurrence double insertions recombination event computed frequency could align non-overlapping least nucleotides best best alignments. compared frequency obtained synthetically generated sequences obtained real sequencing data. berg hippel selection binding sites regulatory proteins statistical-mechanical theory application operators promoters. journal molecular biology rogozin diaz cutting edge dgyw/wrch better predictor mutability bases hypermutation widely accepted rgyw/wrcy motif probably reﬂects two-step activation-induced cytidine deaminase-triggered process. journal immunology betz rada pannell milstein neuberger passenger transgenes reveal intrinsic speciﬁcity antibody hypermutation mechanism clustering polarity speciﬁc spots. proceedings national shapiro aviszus ikle wysocki predicting regional mutability antibody genes based solely di-and trinucleotide sequence composition. journal immunology bransteitter pham calabrese goodman biochemical analysis hypermutational targeting wild type mutant activation-induced cytidine deaminase. journal biological chemistry smith waterman identiﬁcation common molecular subsequences. mol. biol. larimore mccormick robins greenberg shaping human germline repertoires revealed deep sequencing. immunol. deﬁne probabilistic model type chain describes probability recombination event probabilities known elements recombination subprocess chain assumes minimum correlations subprocesses needed explain correlations observed data. model insertions markov chain nonparametric length distribution insertion site infer probability observing non-templated sequence given length transition matrices igor designed modular user deﬁne arbitrary model forms. models bayesian networks encoded directed acyclic graphs whose vertices label individual recombination subprocesses dependence recombination process upon encoded directed edge denoted parents i.e. processes depends directly denoted {j|vji bination write probability complete recombination scenario recombination scenario leads unique sequence brevity). however order produce given sequence several scenarios might equivalent write probability generating given sequence description holds assess generation probability pure product recombination account sequencing errors hypermutations. note that since longer reads allow reliable determination gene segments pgen depends general read length shorter reads created ways longer reads leading larger pgen. sequencing inherently noisy introduces nucleotide substitutions. addition bcrs accumulate hypermutations mathematically treated errors. sake clarity distinguish sequencing read original sequence resulting recombination deﬁned above. simplicity ignore insertion deletion errors length hypermutations) perr probability observing sequencing read given recombination product since recombination scenario completely determines perr perr recombination machinery degenerate several scenarios recombination hypermutations lead sequence recombination scenario sequencing read comes general unknown. expectation-maximization algorithm commonly used algorithm maximizes likelihood models hidden variables given data. section re-derive algorithm class models. order maximize pseudo-log-likelihood recombination model need maximize qrecomb|θ) respect every model component contained parameter impose normalization lagrange parameter ensures normalization. words modiﬁed log-likelihood maximized using update rule equates probability realization recombination event posterior frequency. independent single nucleotide error model simplest instance error model nucleotide read probability mis-sequenced three nucleotides equal probability. model number potentially erroneous nucleotides read simplicity ignore errors hypermutations insertion part sequence almost indistinguishable unmutated random insertions accounting would imply summing exponentially large number scenarios. result formula read length rather number genomic nucleotides scenario depends scenario well sequence read. expectation step compute quantities -mer maximize qerr step expectation-maximization scheme using newton’s method backtracking line search. impose size based armijo-goldstein condition. operations iteratively repeated pseudo-log-likelihood error model given maximization step framework maximized. measure dissimilarity probability distributions parametrized respectively used quantify error made probabilistic framework upon inferring recombination parameters. denotes subvector elements indices estimating cross entropy event requires exponential time number ancestors node. fortunately recombination models considered paper ancestors small obtaining cross entropy easy every event. special case insertions discussed below. note cross-entropy takes account recombination model error model. although probability generation sequence without errors hypermutations well deﬁned computing probability generation mutated sequence mutations occurred strictly speaking possible sequence know certainty. however compute good approximation also calculate distribution across sequences. used custom genomic templates derived imgt database alpha genomic templates taken imgt human database. beta genes used curated genomic templates heavy chain genes taken customized genomic templates used software comparison used default genomic templates provided partis mixcr. initial alignments germline genes performed using smith-waterman algorithm scores matching base pairs mismatches penalty. alignments score following gene dependent threshold discarded trbv trbd trbj trav traj ighv ighd ighj. also discarded alignments whose score fell maximum alignment score minus following variable range trbv trbd trbj ighv ighj. since enumerating possible scenarios sequence tractable used heuristic method reducing numbers. exploring possible scenarios equivalent exploring terminal leafs tree. heuristic prune branches contribute substantially likelihood read. implement sparse expectation maximization algorithm motivated acyclicity directed graph underlining bayesian network exists topological sorting events constituting partially ordered igor processes event realizations according order corresponding diﬀerent layers depth tree. discard irrelevant although captures essence behind tree pruning approach practice igor uses information simple upper probability bound. picking gene choice realizations imposing identity position speciﬁc genes explicitly impose total nucleotide length event realizations genes computing probability upper-bounds igor computes upper probability bound given junction length event realizations uses reﬁned bound eﬃciently prune tree scenarios. synthetic sequences generated randomly drawing scenarios recombination probability distribution order data resulting sequences mimic sequencing process benchmarked method mixcr commonly used deterministic alignment method. used mixcr sequence assignment compute frequency gene usage insertion length deletions obtain distributions shown fig. also compared partis recent based model recombination. since partis uses viterbi learning algorithm used likely assignments outputs compute corresponding probability distribution shown fig. since partis designed handle bcrs assessed performance dataset only. fig. distribution processing time sequence. shows processing time ﬁnding likely scenario evaluate scenarios diﬀerent chains. histograms computed sequences chain single core intel xeon .ghz processor running code compiled benchmarked igor’s performance evaluating possible recombination scenarios real data sequences used infer models presented main text. used sequences benchmarking since diﬃculty ﬁnding correct alignment higher. finding likely scenario only average fig. tested simulated data known underlying model igor converges true distribution diﬀerent error rates. show insertion deletion distributions obtained generated samples various sizes various error rates underline qualitative diﬀerences hidden kullback-leibler divergence shown fig. fig. fig. convergence igor naive dataset. mean likelihood sequence increases quickly plateau thus reaching maximum likelihood estimate parameters. convergence distribution shown example distribution number insertions. fig. gene usage mrna data. plot marginal gene usage averaged conditional dependencies genes respectively inferred using igor mrna technology datasets. observe higher inter-method inter-individual variability. inferred various sample sizes sequences various error rates ground truth decomposed diﬀerent model components. components reach small divergence value suﬃciently large sample sizes. fig. probabilistic assignment approach crucial tcrs. equivalent main text fig. tcrs. ﬁgure shows distribution number scenarios need enumerated include true scenario conﬁdence. shorter read length compared bcrs entail higher uncertainty gene identity higher number scenarios must considered. fig. assignment performance sequences without palindromic insertions shown main text fig. ability mixcr partis igor predict correct scenario recombination. since partis model palindromic insertions present performance three software sequences generated without any. although partis’ prediction improved reaches close mixcr’s accuracy remain lower igor’s correct predictions. fig. comparison distributions obtained diﬀerent softwares. mixcr performing deterministic alignments partis viterbi learning used output assignments compute corresponding recombination statistics. plot along igor’s distribution obtained maximum likelihood approach. note ease presentation show distributions averaged conditional dependences. panels observe partis mixcr overestimate frequency number templated insertions. gene usage mostly consistent methods. four bottom panels negative number deletions denote palindromic insertions. observe three methods obtain qualitatively diﬀerent marginal distribution number deletions. fig. inference hypermutation model synthetic sequences. order assess validity method generate synthetic bcrs sequences heavy chain model learned naive data sequences. generate poisson distributed errors sequences simulating mutations base pair bernouilli process according hypermutation model learned gene memory sequences. sequences reads order mimic real data sequences. results experiment shows model perfectly inferred genes scatter gene higher. explained limited number n-mers observed gene since sequences mimic sequencing primer fig. prediction mutation frequencies real data. direct exploration recombination scenarios recorded posterior mutation frequency individual base pairs genomic templates compare independent -mer model. plot scatter base pairs observed least times sequences dataset compute reliable mutation frequency mutation frequency predicted model. panels show good predictive power gene model learned. however bottom panels show lesser ability predict correct mutation frequencies whole locus hence suggesting diﬀerences observed inferred position weight matrices biological relevance. fig. inference hypermutation model real productive memory sequences. compare position weight matrices inferred respectively genes diﬀerent n-mer length. sizes gene inferred contributions extremely reproducible individual other. comparison overall mutational load diﬀerent individuals gene diﬀerent n-mer size. overall mutational load varies individual individual within locus. comparison contributions inferred diﬀerent genes. observe weaker inter gene correlations observed inter individual contributions. fig. context logo diﬀerent context sizes three diﬀerent genes. inferred position weight matrices diﬀerent n-mer sizes increasing n-mer sizes side contributions vanish. fig. sequence probability generation estimation generating synthetic sequences inferred recombination model without errors able compute probability generation pgen introduced errors sequences errors whose statistics correspond inferred hypermutation model computed estimate probability generation unmutated ancestor. propose diﬀerent estimators pgen geometric average putative ancestors probability generation weighted it’s posterior probability probability generation likely ancestor note convergent pgen histogram sequence putative ancestors probability generation weighted it’s posterior probability. also plot distribution sequence likelihoods could obtained methods show greatly diﬀers distribution generation probability. fig. reversed complement usage. appending reversed complement gene list genes tested occurrence reversed recombination process. although reversed complement observed eﬀect minor.", "year": "2017"}