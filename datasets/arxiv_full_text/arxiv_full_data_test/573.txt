{"title": "Creation and analysis of biochemical constraint-based models: the COBRA  Toolbox v3.0", "tag": "q-bio", "abstract": " COnstraint-Based Reconstruction and Analysis (COBRA) provides a molecular mechanistic framework for integrative analysis of experimental data and quantitative prediction of physicochemically and biochemically feasible phenotypic states. The COBRA Toolbox is a comprehensive software suite of interoperable COBRA methods. It has found widespread applications in biology, biomedicine, and biotechnology because its functions can be flexibly combined to implement tailored COBRA protocols for any biochemical network. Version 3.0 includes new methods for quality controlled reconstruction, modelling, topological analysis, strain and experimental design, network visualisation as well as network integration of chemoinformatic, metabolomic, transcriptomic, proteomic, and thermochemical data. New multi-lingual code integration also enables an expansion in COBRA application scope via high-precision, high-performance, and nonlinear numerical optimisation solvers for multi-scale, multi-cellular and reaction kinetic modelling, respectively. This protocol can be adapted for the generation and analysis of a constraint-based model in a wide variety of molecular systems biology scenarios. This protocol is an update to the COBRA Toolbox 1.0 and 2.0. The COBRA Toolbox 3.0 provides an unparalleled depth of constraint-based reconstruction and analysis methods. ", "text": "laurent heirendt sylvain arreckx thomas pfau sebastián mendoza anne richelle almut heinken hulda haraldsdóttir jacek wachowiak sarah keating vanja vlasov stefania magnusdóttir chiam german preciat alise žagare h.j. chan maike aurich catherine clancy jennifer modamio john sauls alberto noronha aarash bordbar benjamin cousins diana assal luis valcarcel iñigo apaolaza susan ghaderi masoud ahookhosh marouen guebila andrejs kostromins nicolas sompairac hoai ding yuekai wang james yurkovich miguel a.p. oliveira phan vuong lemmer assal inna kuperstein andrei zinovyev scott hinton william bryant francisco aragón artacho francisco planes egils stalidzans alejandro maass santosh vempala michael hucka michael saunders costas maranas nathan lewis thomas sauter bernhard palsson ines thiele ronan m.t. fleming constraint-based reconstruction analysis provides molecular mechanistic framework integrative analysis experimental data quantitative prediction physicochemically biochemically feasible phenotypic states. cobra toolbox comprehensive software suite interoperable cobra methods. found widespread applications biology biomedicine biotechnology functions ﬂexibly combined implement tailored cobra protocols biochemical network. version includes methods quality controlled reconstruction modelling topological analysis strain experimental design network visualisation well network integration chemoinformatic metabolomic transcriptomic proteomic thermochemical data. multi-lingual code integration also enables expansion cobra application scope high-precision high-performance nonlinear numerical optimisation solvers multi-scale multi-cellular reaction kinetic modelling respectively. protocol adapted generation analysis constraint-based model wide variety molecular systems biology scenarios. protocol update cobra toolbox cobra toolbox provides unparalleled depth constraint-based reconstruction analysis methods. metabolic models metabolic reconstruction metabolic engineering ﬁlling strain engineering omics data integration metabolomics transcriptomics constraint-based modelling computational biology bioinformatics biochemistry human metabolism microbiome analysis. luxembourg centre systems biomedicine university luxembourg avenue swing belvaux luxembourg. life sciences research unit university luxembourg avenue swing belvaux luxembourg. center genome regulation university chile blanco encalada santiago chile. department pediatrics university california diego school medicine jolla usa. european molecular biology laboratory european bioinformatics institute hinxton cambridge united kingdom. department chemical engineering pennsylvania state university university university park usa. department physics university california diego gilman jolla usa; bioinformatics systems biology program university california diego jolla usa. sinopia biosciences diego usa. school computer science algorithms randomness center georgia institute technology atlanta usa. biomedical engineering sciences department tecnun university navarra paseo manuel lardizabal sebastian spain. institute microbiology biotechnology university latvia jelgavas iela riga latvia. department management science engineering stanford university stanford usa. bioengineering department university california diego jolla usa. utah state university research foundation north research park north logan utah usa. centre integrative systems biology bioinformatics department life sciences imperial college london london united kingdom. department mathematics university alicante spain. california institute technology computing mathematical sciences california blvd. pasadena usa. mathomics center mathematical modeling university chile beauchef floor santiago chile. novo nordisk foundation center biosustainability university california diego jolla united states. latvian biomedical research study centre ratsupites iela riga latvia. novo nordisk foundation center biosustainability technical university denmark kemitorvet building kgs. lyngby denmark. institut curie research university mines paris tech inserm paris france. past decades signiﬁcant developments molecular biology deluge data molecular composition organisms environment. quantitative molecular measurements genome scale routine include genomic metabolomic transcriptomic proteomic data. wealth data stimulated development wide variety algorithms software data preprocessing analysis. preprocessing converts measured variables estimates quantity molecular species present sample. analysis takes quantiﬁcation molecular species derive biological knowledge. despite many advances novel discoveries remains major challenge biology community able derive insight experiments leads deeper understanding biological system. analysis techniques split incorporate prior information system question. else equal integrative analysis technique incorporates prior information complementary experiments typically outperform technique corroboration data complementary experimental platforms used increase conﬁdence observation real. fundamentally integrative analysis successful expression bayesian statistical approach whereby prior information complementary experiments represents knowledge system experiment. thus integrative analysis inference procedure update knowledge system light data additional experiment. integrative analysis either mechanistic non-mechanistic. mechanistic techniques rely using molecular mechanistic models represent prior information biochemical networks underlying data analysed. non-mechanistic integrative analysis often used study ’omics’ data essential nothing known underlying molecular mechanisms. however often subset underlying molecular mechanisms known. thus signiﬁcant limitation non-mechanistic integrative analysis ignores decades prior information molecular mechanistic experimental studies biochemistry molecular biology etc. such non-mechanistic integrative analysis omits valuable prior information biochemical network context general physicochemical principles biochemical network must obey. genome-scale metabolic reconstruction structured knowledge-base abstracts pertinent information biochemical transformations taking place within chosen biochemical system e.g. human microbiome. constraint-based reconstruction analysis mechanistic integrative analysis framework applicable biochemical system prior mechanistic information including mechanistic information incomplete. overall approach mechanistically represent relationship genotype phenotype mathematically computationally modelling constraints imposed phenotype biochemical system physicochemical laws genetics environment. emerging multiple origins catalysed many original contributions variety ﬁelds exists wide variety novel methodological developments organised categorised within cobra framework. early development cobra framework need ease reproducibility demand reuse cobra methods recognised. necessity cobra toolbox version open source software package running matlab environment facilitated quantitative prediction metabolic phenotypes using selection cobra methods available time. expansion cobra community growing phylogeny cobra methods need recognised amalgamation transparent dissemination cobra methods. demand cobra toolbox version enhanced range methods simulate analyse predict variety phenotypes using genome-scale metabolic reconstructions. since then increasing functional scope size biochemical network reconstructions well increasing breadth physicochemical biological constraints represented within constraint-based models naturally result development broad arbour cobra methods. figure illustration genome-scale metabolic reconstruction balance analysis. genome-scale metabolic reconstructions built steps. first several platforms exist generation gap-ﬁlled draft metabolic reconstruction based genome annotations. second draft reconstructions need reﬁned based known experimental biochemical data literature. novel experiments performed organism reconstruction reﬁned accordingly. balance analysis metabolic reconstruction containing reactions metabolites converted stoichiometric matrix solves optimisation problem objective function maximised minimised. formed multiplying every reaction predetermined constant adding resulting values. solves steady state every reaction bound values upper bound lower bound solution space deﬁned mass balanced constraints imposed upper lower bounds reaction metabolic reconstruction. optimisation biological objective function identiﬁes optimal within solution space whereas uniform sampling provides unbiased characterisation sampling candidate ﬂuxes distributed solution space. present protocol update cobra toolbox illustrating main novel developments within version cobra toolbox especially expansion functionality cover modelling methods. particular protocol includes input output standards sharing reconstructions models extended suite supported general purpose optimisation solvers optimisation solvers developed especially constraint-based modelling problems enhanced functionality areas computational eﬃciency high precision computing numerical characterisation reconstructions conversion reconstructions various forms constraint-based models comprehensive support balance analysis variants integration omics data uniform sampling high dimensional models atomic resolution metabolic reconstructions estimation application thermodynamic constraints visualisation metabolic networks genome-scale kinetic modelling. increasing number contributions developers around world code base evolving fast pace. cobra toolbox evolved monolingual matlab software multilingual software suite integration fortran julia perl python code well pre-compiled binaries speciﬁc purposes. example integration quadruple precision numerical optimisation solvers implemented fortran robust eﬃcient modelling multi-scale biochemical networks obtained integration metabolic macromolecular synthesis reconstructions represent peak terms biochemical comprehensiveness predictive capacity. developments warranted industrial approach software development cobra toolbox. therefore implemented continuous integration approach guaranteeing consistent stable high-quality software solution broad user community. documentation code released part opencobra project reading extensive documentation associated cobra toolbox suﬃce describe procedure eﬀectively engaging community dedicated online forum taken together cobra toolbox provides unparalleled depth interoperable cobra methods proof-of-concept knowledge integration collaboration large numbers scientists lead cooperative advances impossible achieve single scientist research group alone. constraint-based modelling biochemical networks broadly applicable range biological biomedical biotechnological research questions fundamentally broad applicability arises common phylogenetic tree shared living organisms manifests shared mathematical properties common biochemical networks normal diseased wild-type mutant biochemical networks. therefore cobra method developed primarily scenario usually quickly adapted variety related scenarios. often adaptation retains mathematical properties optimisation problem underlying original constraint-based modelling method. adapting input data interpreting output results diﬀerent method used address diﬀerent research question. biotechnological applications constraint-based modelling include development sustainable approaches chemical biopharmaceutical production among applications computational design microbial strains production bioenergy feedstocks non-food plants microbes capable deconstructing biomass sugar subunits synthesising biofuels either cellulosic biomass direct photosynthetic capture carbon dioxide. initialise verify installation input output reconstructions reconstruction rbionet reconstruction create functional reconstruction exploration variation reaction rate bounds parsimonious balance analysis sparse balance analysis ﬁlling adding biological constraints testing biochemical ﬁdelity testing basic properties minimal spanning pathway vectors elementary modes pathway methods e.g. adjacent reactions. maintenance internal model consistency e.g. upon subnetwork generation. flag reconstruction requiring multi-scale solver. identiﬁcation maximal stoichiometrically consistent subset. algorithms methods working molecular structures atom mapping identiﬁcation conserved moieties methods analysis metabolomic data network context algorithms methods estimation thermochemical parameter estimation multi-compartmental genome-scale metabolic models algorithms methods genome-scale kinetic modelling methods e.g. optforce interpretation strain designs. modelling language interface gams. method genome-scale metabolic network visualisation software application enabling contributions unfamiliar version control software. posted questions supportive replies connecting problems solutions. table method available cobra toolbox made accessible narrative tutorial illustrates corresponding function combined implement cobra method respective directories analysis reconstruction design visualisation dataintegration base another prominent biotechnological application analysis interactions organisms form biological communities surrounding environments view toward utilisation communities bioremediation nutritional support non-food plants bioenergy feedstocks. biomedical applications constraint-based modelling include prediction phenotypic consequences single nucleotide polymorphisms drug targets enzyme deﬁciencies– well side oﬀtarget eﬀects drugs–. cobra also applied generate analyse normal diseased models human metabolism including organ-speciﬁc models– multi-organ-models personalised models–. constraint-based modelling also applied understanding biochemical pathways interlink diet microbial composition human health today genome-scale metabolic reconstructions automatically created using many diﬀerent platforms automatic reconstruction tools considerably sped reconstruction process previously time-consuming. various algorithms exist facilitate ﬁlling metabolic networks e.g. smiley gapfind fastgapfill sonec ensemblfba. algorithm applies diﬀerent approach thus ﬁlling solutions proposed diﬀerent algorithms diﬀer. however several issues still need manually resolved automatically generated gap-ﬁlled reconstructions e.g. ensuring stoichiometric consistency thermodynamically constraining reaction directionality reﬁning gene-protein-reaction associations conﬁrming experimentally determined biochemical functions reconstructed organism. name cobra toolbox matlab raven cellnetanalyzer fba-simvis optflux cobra.jl sybil cobrapy cbmpy scrumpy surreyfba fasimu fame pathwaytools kbase development dist. open source open source closed source closed source† windows open source open source open source open source open source open source open source open source† linux open source† closed source open source table selection actively developed software applications constraint-based modelling capabilities. https//opencobra.github. io/cobratoolbox raven https//github.com/sysbiochalmers/raven cellnetanalyzer https//www. mpi-magdeburg.mpg.de/projects/cna/cna.html fba-simvis https//immersive-analytics.infotech. monash.edu/fbasimvis optflux https//opencobra.github.io/ cobra.jl sybil https//rdrr.io/cran/sybil cobrapy http//opencobra.github.io/cobrapy cbmpy http//cbmpy.sourceforge.net surreyfba http//sysbio.sbs.surrey.ac.uk/sfba fasimu http//www. bioinformatics.org/fasimu fame http//f-a-m-e.org pathway tools http//bioinformatics.ai.sri. com/ptools kbase https//kbase.us. symbol development column refers inactive project active project. label ’all’ column means applications compatible windows linux macos operating systems. besides cobra toolbox constraint-based reconstruction analysis carried variety software tools. lakshmanan made comprehensive comparative evaluation usability functionality graphical representation inter-operability tools available balance analysis. evaluation criteria still valid comparing current version cobra toolbox software constraint-based modelling capabilities. rapid development novel constraint-based modelling algorithms requires continuity software development. short term investment cobra modelling software applications plethora cobra modelling applications. usually provides unique capability initially many become antiquated lack maintenance failure upgrade failure support standards model exchange formats therefore also restrict comparison software active development software tool constraint-based modelling varying degrees dependency software. web-based applications exist implementation limited number standard constraintbased modelling methods. local dependency browser. cobra toolbox depends matlab commercially distributed general-purpose computational tool. matlab multi-paradigm programming language numerical computing environment allows matrix manipulations plotting functions data implementation algorithms creation user interfaces interfacing programs written languages including java fortran python. software tools constraint-based modelling also depend least numerical optimisation solver. robust eﬃcient numerical optimisation solvers standard problems distributed commercially often free licences available academic e.g. gurobi optimizer stand-alone constraint-based modelling software tools also exist dependency numerical optimisation solver typically satisﬁed glpk open-source linear optimisation solver. sometimes perceived commercial advantage depending open-source software. however also commercial costs associated dependency open-source software. form increased computation times well increased time required install maintain upgrade open-source software dependencies. important consideration research group whose primary focus biological biomedical biotechnological applications rather software development. cobra toolbox strikes balance depending closed-source general purpose commercial computational tools cobra code distributed developed open-source environment availability comprehensive documentation important feature usability modelling software. therefore dedicated eﬀort made ensure functions cobra toolbox comprehensively consistently documented. moreover also provide suite tutorials enable beginners well intermediate advanced users practise wide variety cobra methods. tutorial presented variety formats including matlab live script interactive document narrative combines matlab code embedded output formatted text equations images single environment viewable matlab live editor matlab live scripts similar functionality mathematica notebooks jupyter notebooks latter support interactive data science scientiﬁc computing programming languages. date cobra toolbox cobrapy kbase cobra.jl oﬀer access constraint-based modelling algorithms narratives. kbase collaborative open environment systems biology plants microbes communities. also suite analysis tools data support reconstruction prediction design metabolic models microbes plants. tools tailored toward optimisation microbial biofuel production identiﬁcation minimal media conditions fuel generated predict soil amendments improve productivity plant bioenergy feedstocks. view kbase currently tool choice automatic generation draft microbial metabolic networks imported cobra toolbox semi-automated reﬁnement recently successfully completed suite microbial organisms. however kbase currently oﬀers modest depth constraint-based modelling algorithms. metaflux web-based tool generation network reconstructions directly pathway genome databases proposing network reﬁnements generate functional balance models reconstructions predict steady-state reaction rates balance analysis interpret predictions graphical network visualisation. metaflux tightly integrated within pathwaytools environment provides broad selection genome metabolic regulatory informatics tools. such pathwaytools provides breadth bioinformatics computational biology cobra toolbox provides depth constraint-based modelling without providing example genome informatics tools. although expert locally install pathwaytools environment functionality closed source accessible application programming interface. approach permit level repurposing possible open-source software. recognised computational biology community open-source development distribution scientiﬁcally important tractable reproducibility results well reuse repurposing code. lakshmanan consider availability graphical user interface important feature usability modelling software. example surreyfba provides command line tool graphical user interface constraint-based modelling genome-scale metabolic reaction networks. time development modelling method availability graphical user interface necessarily means graphically driven cobra tools permit limited depth novel constraintbased modelling methods. matlab provides generic graphical user interface cobra toolbox controlled either scripts narratives rather graphically. exceptions include input manually-curated data network reconstruction assimilation genome-scale metabolic reconstructions visualisation simulation results biochemical network maps specialised network visualisation software. relative simplicity matlab programming language cobra toolbox users including without software development experience rapidly become familiar basics constraint-based modelling. initial learning eﬀort worth ﬂexibility opens especially considering broad array constraint-based modelling methods available within cobra toolbox although technically possible generate computational speciﬁcation point-and-click analysis steps required generate results using graphical user interface knowledge none graphically-driven modelling tools table oﬀers facility. speciﬁcation would required another scientist reproduce results using tool. weakness limits ability reproduce analytical results verbal speciﬁcation suﬃcient reproducibility. language-speciﬁc cobra implementation beneﬁts drawbacks mainly associated programming language itself. pysces-cbm cobrapy provide support cobra methods implemented python programming language. python multi-paradigm interpreted programming language general-purpose programming. broad development community wide range open-source libraries especially bioinformatics. such well suited amalgamation management heterogeneous experimental data. present cobra software tools python provide access standard cobra methods. cobrapy functionality extended using python invoke matlab cobra toolbox. achieving interoperability cobra software implemented diﬀerent programming languages developed together united open source community primary objective opencobra project sybil open-source object-oriented software library implements limited standard constraint-based modelling algorithms programming language free platform independent environment statistical computing graphics. sybil available download comprehensive archive network follow open-source development model. cobra toolbox primarily implemented matlab proprietary multi-paradigm programming language interpreted execution rather compiled prior execution. such matlab code typically runs slower compiled code main advantage ability rapidly ﬂexibly implement sophisticated numerical computations leveraging extensive libraries general-purpose numerical computing supplied commercially within matlab distributed freely community application computationally-demanding constraint-based modelling methods high-dimensional high-precision constraint-based models cobra toolbox comes array integrated pre-compiled extensions interfaces employ complementary programming languages tools. include quadruple precision fortran optimisation solver implementation constraint-based modelling multi-scale biochemical networks high-level high-performance open-source implementation balance analysis julia. latter tailored solve multiple balance analyses subset reactions largehuge-scale networks number threads nodes. enumerate elementary modes minimal cut-sets provide interface cellnetanalyzer excels computationallydemanding enumerative discrete geometry calculations relevance biochemical networks. addition included updated implementation genetic minimal cut-sets approach extends concept minimal cut-sets gene knockout interventions. summary cobra toolbox provides unparalleled depth constraint-based reconstruction analysis methods highly active supportive open-source development community accompanied extensive documentation narrative tutorials leverages comprehensive library numerical computing distributed extensive interoperability range complementary programming languages exploit particular strengths realise specialised constraint-based modelling methods. list main cobra methods available cobra toolbox given table moreover functionality provided within accessible software environment. cobra toolbox designed ﬂexible adaptation customised pipelines constraint-based reconstruction analysis wide range biological biochemical biotechnological scenarios single organisms communities organisms. become proﬁcient adapting cobra toolbox generate protocol speciﬁc one’s situation wise ﬁrst familiarise oneself principles constraint-based modelling. best achieved studying educational material already available. textbook systems biology constraint-based reconstruction analysis ideal place start. accompanied lecture videos accompany chapter http// systemsbiology.ucsd.edu/publications/books/sb-lectureslides. textbook optimization methods metabolic networks provides fundamentals mathematical optimisation application context metabolic network analysis. study educational material accelerate one’s ability utilise software application dedicated cobra. cognisant conceptual basis cobra proceed protocol summarises subset methods available within cobra toolbox. adapt protocol one’s situation users combine cobra methods implemented within cobra toolbox numerous ways. adaption protocol one’s situation require development customised matlab scripts combine existing methods way. aforementioned beneﬁts narratives ﬁrst choice implement customised scripts form matlab live scripts. started existing tutorial narratives described table repurposed templates analysis pipelines. narrative ﬁgures tables used within main text scientiﬁc articles converted supplementary material enable full reproducibility computational results. narratives speciﬁc individual scientiﬁc articles also shared peers within https//github.com/opencobra/cobratoolbox/tree/master/papers. tutorials shared cobra community contributing future development cobra toolbox depending one’s level experience novelty analysis adaptation protocol particular situation require adaption existing cobra methods development cobra methods both. source code cobra toolbox divided several top-level folders either mimic main classes cobra methods contain basic functions available within many cobra methods. example input output reconstructions models various formats well interfaces optimisation solvers contained within base folder. reconstruction folder contains methods associated reconstruction reﬁnement biochemical network match experimental data well conversion reconstruction various forms constraint-based models dataintegration folder contains methods integration metabolomic transcriptomic proteomic thermodynamic data reconstruction model. analysis folder contains methods interrogation properties reconstruction model combinations thereof well prediction biochemical network states using constraint-based models. visualisation folder contains methods visualisation predictions within biochemical network context using various biochemical cartography tools interoperate cobra toolbox. design folder contains strain design methods modelling language interface gams. open-source software development cobra toolbox understanding cobra toolbox developed important developers beginners skip section ﬁrst. cobra toolbox version controlled using free open-source distributed version control system tracks changes computer ﬁles used coordinating work ﬁles multiple people. continuous integration environment facilitates contributions fork cobra developers development branch whilst ensuring robust high-quality well-tested code released users master branch. lower technological barrier aforementioned software development tools developed matlab.devtools userfriendly software extension enables submission cobra software tutorials. server-side semi-automated continuous integration environment ensures code submission ﬁrst veriﬁed automatically comprehensive test suite detects bugs integration errors second reviewed manually least domain expert integration development field description coeﬃcients constraints metabolites sense constraints represented either charge respective metabolite elemental formula metabolite. formula metabolite inchi strings format. full name corresponding metabolite. identiﬁers metabolites. formula metabolite smiles format. objective coeﬃcient reactions. string representation rules deﬁned readable format. lower bounds ﬂuxes reactions. conﬁdence scores reaction presence e.c. number reaction. full name corresponding reaction. description corresponding reaction. description references corresponding reaction. identiﬁers reactions. subsystem assignments reaction. upper bounds ﬂuxes reactions. stoichiometric matrix containing model structure full name corresponding gene. identiﬁers genes model. full name protein. proteins associated gene matrix rows corresponding reactions columns corresponding genes. descriptions compartments associated comps). symbols compartments. objective sense either 'max' 'min' figure continuous integration performed dedicated server running jenkins main code located folder tests functions test folder. test runs function tests output function continuous integration setup relies end-of-year releases matlab only. soon latest stable version matlab released full support provided cobra toolbox. successful tests three latest end-ofyear releases matlab using various solver packages documentation based headers functions extracted generated automatically deployed. immediate feedback code coverage reports build statuses reported github. setup impact local changes code base promptly revealed. branch. thirdly contribution development branch evaluated practice active cobra researchers becomes part master branch. recently code quality checks cobra toolbox primarily static code reviewed experienced users developers occasional code inspections discoveries bugs. continuous integration setup deﬁned figure aims dynamic testing automated builds code evaluation documentation deployment. often function runs properly independently yields desired output called within diﬀerent part code logical errors thrown. unique advantage continuous integration logical errors mostly avoided. besides automatic testing manual usability testing performed regularly users provide tested usable code base user. users provide feedback usability code base well documentation report eventual issues online documentation automatically deployed https//opencobra.github. io/cobratoolbox based function headers. moreover narrative tutorials presented format suitable browsers controls cobra part iterative systems biology cycle. such used framework integrative analysis experimental data context prior information biochemical network underlying many complementary experimental datasets. moreover used predict outcome experiments used scenarios once. assuming computational steps errorless appropriate control prediction derived computational model comparison independent experimental data experimental data used model-generated predictions. also important introduce quality controls check computational steps free certain errors arise adaptation existing cobra protocols development ones. various strategies implementation computational quality controls. within cobra toolbox signiﬁcant eﬀort devoted automatically test functionality existing cobra methods. also embedded large number sanity checks evaluate whether input data could possibly appropriate function. sanity checks accumulated decade continuous development cobra toolbox. objective rule certain known classes obviously false predictions might result inappropriate cobra method catch every error impossible imagine eventual erroneous inputs presented cobra toolbox function. advisable narratives additional sanity checks depend heavily modelling scenario. protocol implemented anyone basic familiarity principles constraint-based modelling. methods advanced users. beginner respect matlab supplementary manual provides pointers started. matlab relatively simple programming language learn also powerful language expert large number software libraries numerical symbolic computing provides access certain specialised methods within protocol thermodynamically constraining reaction directionality depend installation programming languages software challenging beginner non-standard operating system. documentation tutorials provided within cobra toolbox suﬃcient steps guide user toward sources cobra community support. computational demands associated implementation protocol one’s reconstruction model choice dependent size network concerned. genome-scale model metabolism usually desktop computer suﬃcient. however certain models community genome-scale metabolic models multi-scale model metabolism macromolecular synthesis multi-tissue model powerful processing extensive memory capacity required ranging workstation dedicated computational cluster. embarrassingly parallel high-performance computing feasible model analysis methods implemented cobra toolbox isolation invocation distributed computing engine. currently ongoing topic research beyond scope protocol fully exploit high-performance computing environments software developed within wider opencobra environment though examples already available interested researchers consult. protocol generation high-quality genome-scale reconstruction using various software applications including cobra toolbox previously disseminated; therefore protocol focuses modelling reconstruction. cobra toolbox meant generalpurpose computational biology tool focussed constraint-based reconstruction analysis. example although various forms generic data analysis methods available within matlab input data integration reconstructions models within cobra toolbox envisaged already preprocessed tools. within scope cobra toolbox aims complete coverage cobra methods. ﬁrst comprehensive overview cobra methods available microbial metabolic networks requires update encompass many additional methods reported date addition cobra methods targeted toward biochemical networks. cobra toolbox provides extensive coverage published cobra methods. however certainly methods incorporated directly matlab implementations indirectly matlab interface software dependency. although principle cobra method could implemented entirely within matlab eﬃcient leverage core strength another programming language could provide intermediate results incorporated cobra toolbox various forms matlab interfaces. setup would enable overcome current limitation coverage existing methods. protocol consists methods introduced sequence combined multitude ways. overall purpose enable user generate biologically relevant highquality model enables novel predictions hypotheses generation. therefore implement enforce standards reconstruction simulation developed cobra community past decades. explanations method also accompanied explicit computational commands. first explain initialise verify installation cobra toolbox matlab main options import explore content biochemical network reconstruction introduced. completeness brief summary methods manual algorithmic reconstruction reﬁnement provided reference established reconstruction protocol. also explain characterise numerical properties reconstruction especially respect detection reconstruction requiring multi-scale numerical optimisation solver. explain semi-automatically convert reconstruction constraint-based model suitable balance analysis. followed extensive explanation carry balance analysis variants. procedure gaps reconstruction missing reactions also explained. provide overview main methods integrate metabolomic transcriptomic proteomic thermochemical data generate context-speciﬁc constraint-based models. various methods explained addition biological constraints constraint-based model. explain test chemical biochemical ﬁdelity model. high-quality model generated explain interrogate discrete geometry stoichiometric subspaces eﬃciently measure variability associated prediction steady state reaction rate using variability analysis uniformly sample steady-state ﬂuxes. introduce various approaches prospective uses constraint-based model strain experimental design. explain atomically resolve metabolic reconstruction connecting molecular species structures cheminformatic algorithms atom mapping identiﬁcation conserved moieties. using molecular structures metabolite established thermochemical data estimate transformed gibbs energy subcellular compartment speciﬁc reaction model human metabolism order thermodynamically constrain reaction directionality constrain feasible kinetic parameters. sampled kinetic parameters used variational kinetic modelling illustration utility recently published algorithms genome-scale kinetic modelling. also explain visualise predicted phenotypic states using recently developed approach metabolic network visualisation. conclude explanation engage community cobra developers well contribute code cobra toolbox matlab.devtools newly developed piece software community contribution cobra methods cobra toolbox. depending size reconstruction model processing power memory needed especially also desired store results analysis procedures within matlab workspace. caution support provided versions older matlab released twice-yearly schedule. latest release couple months certain methods dependencies software become compatible. example latest releases matlab compatible existing solver interfaces necessitating update matlab interface provided solver developers update cobra toolbox both. cobra toolbox version above. working bash terminal unix tools. curl version must installed ensure connectivity cobra toolbox remote github server. version control software required installed accessible system commands. caution windows shell integration included bash utilities must installed. macos working installation xcode version command line tools mandatory. reading writing models sbml format requires matlab interface libsbml application programming interface version above. cobra toolbox supports latest sbml level flux balance constraints version package cobra toolbox developers work closely sbml team ensure cobra toolbox supports latest standards moreover standard development also focused meeting evolving requirements constraint-based modelling community. caution latest release matlab short time input output become fully compatible. example input output .xml ﬁles sbml standard formats relies platform dependent binaries maintain major platform responsibility maintenance source code lies sbml team speciﬁc forum raising interoperability issues matlab image processing toolbox parallel computing toolbox statistics machine learning toolbox optimization toolbox bioinformatics toolbox must licensed installed ensure certain model analysis functionality topology based algorithms variability analysis sampling algorithms. axon ltd) version above suite oﬀering range cheminformatics tools. standardizer chemaxon’s solution transform chemical structures customised canonical representations achieve best reliability chemical databases. licence freely available academics. table overview types optimisation problems solved optimisation solver. interface certain standard optimisation solvers actively supported whereas interface non-standard solvers requires testing user ensure compatibility legacy solver interface might require reﬁnement becomes compatible newer solver matlab releases. solvers table provides overview supported optimisation solvers. optimal performance recommend install industrial-strength numerical optimisation solver. least linear programming solver required basic constraint-based modelling methods. default cobra toolbox installs free milp solver glpk well minos pdco qpng. windows opti solver suite must installed separately order opti interface. caution depending type optimisation problem underlying cobra method additional numerical optimisation solver required. application speciﬁc software certain solvers additional software requirements binaries provided cobra.binary repository might compatible system. c-compiler library compiler required generating binaries fastfva diﬀerent version cplex solver oﬃcially supplied. fortran compiler gfortran library gfortran compiler required running dqqminos. caution make sure operating system compatible matlab version checking requirements https//mathworks.com/support/sysreq/previous_releases. html. follow upgrade installation procedures supplier’s website system administrator help required. install cobra toolbox following procedures given https//github.com/opencobra/ cobratoolbox. caution make sure system requirements outlined https //opencobra.github.io/cobratoolbox/docs/requirements.html met. installation cobra toolbox already present need re-clone full repository. instead update repository matlab terminal. oﬃcial repository must cloned explained installation instructions steps cobra toolbox updated changes made locally cloned repository. steps provide explanations contribute. case update cobra toolbox fails cannot completed clone repository again. readily available. supplementary manual provides brief guide basics using terminal. caution windows command line tools curl installed together bash. make sure select <use bash optional unix tools windows command prompt installation process> bash. installing bash restart matlab. macos install xcode command line tools following instructions https//railsapps.github.io/ xcode-command-line-tools.html. libsbml package version already packaged cobra toolbox cobra.binary submodule common operating systems. alternatively binaries downloaded separately installed following procedure http//sbml.org/software/ libsbml. individual matlab toolboxes installed matlab installation process. matlab already installed toolboxes managed using built-in matlab add-on manager described https//mathworks.com/help/matlab/matlab_env/manage-your-add-ons. html. steps solver installation require superuser administrator rights eventually setting environment variables. detailed instructions links oﬃcial installation guidelines installing gurobi mosek tomlab cplex found https//opencobra.github.io/ cobratoolbox/docs/solvers.html. caution make sure environment variables properly order solvers properly recognised cobra toolbox. matlab.devtools installed following instructions given https//github. com/opencobra/matlab.devtoolsinstallation. alternatively cobra toolbox already installed matlab.devtools installed directly within matlab typing critical step initialisation check software dependencies made reported command window. necessary possible dependencies satisﬁed beginning toolbox e.g. satisfaction dependency multi-scale linear optimisation solver necessary modelling mono-scale metabolic model. however software dependencies essential satisﬁed e.g. dependency linear optimisation solver must satisﬁed method uses balance analysis. troubleshooting initialisation available optimisation solvers selected default solver. gurobi installed used default solver milp problems. otherwise glpk solver selected milp problems. important check solvers installed satisfactory. table stating solver compatibility availability printed user initialisation. check currently selected solvers verify test cobra toolbox optionally test functionality cobra toolbox locally especially encounters error running function. test suite runs tailored tests verify output proper execution core functions locally conﬁgured system. full test suite invoked typing importing reconstruction model cobra toolbox oﬀers support several commonly used model data formats including models systems biology markup language excel sheets diﬀerent simpheny formats. cobra toolbox fully supports standard format documented sbml level version flux balance constraints package version speciﬁcations order load model filename matlab workspace cobrav model structure model readcbmodel; filename left blank selection dialogue window opened. extension provided code automatically determine appropriate format given ﬁlename. readcbmodel function also supports reading normal matlab ﬁles convenience checks whether ﬁles contain valid cobra models. legacy model structures saved .mat loaded converted. ﬁelds also checked consistency current deﬁnitions. critical step advisable readcbmodel used load models. also valid models provided .mat ﬁles readcbmodel checks model consistency cobra toolbox ﬁeld deﬁnitions automatically performs necessary conversions models legacy ﬁeld deﬁnitions ﬁeld names. order develop future-proof code good practice readcbmodel instead built-in function load. troubleshooting matlab models saved .mat ﬁles sometimes contain deprecated ﬁelds ﬁelds invalid values. instances checked corrected readcbmodel might instances readcbmodel fails. happens advisable load verifymodel function loaded model manually adjust indicated inconsistent ﬁelds. procedure suggest save model readcbmodel load model. sbml produces error please check valid sbml using sbmlvalidator anticipated results reading model matlab struct present matlab workspace. struct contain least following ﬁelds osense csense rxns mets genes rules. additional ﬁelds table also present source contains corresponding information. exporting reconstruction model cobra toolbox oﬀers diﬀerent output methods. commonly used formats sbml .xml matlab .mat ﬁles. sbml preferred output format read applications ﬁeld computational systems biology. however information cannot encoded standard sbml .mat might contain information present corresponding sbml output. order output cobra model structure either format writecbmodel; extension filename provided used identify type output requested. model consequently converted saved respective format. exporting reconstruction model necessary model adheres model structure table ﬁelds contain valid data. example cells rxnnames ﬁeld contain data type char data type double. troubleshooting writecbmodel throws error please check model using verifymodel make sure ﬁelds adhere ﬁeld speciﬁcations detailed above. anticipated results writing speciﬁed format containing model information present either indicated folder current directory. critical step existing rbionet metabolite reaction compartment databases ﬁrst step create ﬁles. please refer rbionet tutorial provided cobra toolbox instructions metabolites reactions rbionet database. make sure relevant metabolites reactions wish reconstruction present rbionet databases. options using rbionet functionality reactions reconstruction load reconstruction selecting file open model complete reconstruction. reactions rbionet database selecting ’add reaction’ selecting reaction. save updated reconstruction selecting file save reconstruction model. rbionet created using cobra model structure following command convert model model structure wish reactions rbionet database hence beneﬁting included quality control assurance measures afterwards cobra toolbox commands reactions reconstruction following commands. stoichiometric representation reconstructed biochemical network contained within model.s matrix. stoichiometric matrix rows columns. entry model.s corresponds stoichiometric coeﬃcient molecular species reaction. coeﬃcient negative molecular species consumed reaction positive produced reaction. model.s== molecular species participate reaction.in order manipulate existing reconstruction cobra toolbox rbionet spreadsheet generate scripts reconstruction functions. approach advantages disadvantages. adding reaction gene-protein-reaction association rbionet ensures reconstruction standards satisﬁed make changes less tractable many reactions added. spreadsheetbased approach tractable allows addition removal reactions. contrast using reconstruction functions provides exact speciﬁcation reﬁnements made reconstruction. also combine approaches ﬁrst formulating reactions gene-protein-reaction associations rbionet adding sets reactions using reconstruction functions. scripts reconstruction functions order ensure traceability manipulations reconstruction generate execute save script calls reconstruction functions rather using command line. function addreaction used reaction reconstruction metabolitelist provides cell array compartment speciﬁc molecular species abbreviations stoichcoefflist used provide numeric array stoichiometric coeﬃcients. particular metabolites exist model.mets function list metabolites. function addreaction duplicate reactions recognized even order metabolites abbreviation reaction diﬀerent. certain types reactions exchange sink demand reactions also added using functions addexchangerxn addsinkreactions adddemandreaction respectively. adding multiple reactions reconstruction important verify reactions carry ﬂux; functionally connected remainder network. check whether added reaction carry ﬂux. newly added reaction newrxn change objective function using optimizecbmodel; optimizecbmodel; reaction negative value minimisation result negative objective value fba.f maximisation minimisation return optimal value zero newly added reaction cannot carry non-zero value given simulation condition cause must identiﬁed. reaction carry non-zero ﬂuxes please repeat steps ensure stoichiometric consistency well chemical biochemical ﬁdelity. remove reactions. order remove reactions reconstruction model removemetabolites; note removal metabolites makes sense appear reactions wishes remove reactions associated metabolites. remove trivial stoichiometry. metabolites zero rows reactions zero columns present stoichiometric matrix removed with modelout removetrivialstoichiometry; removing reactions reconstruction please repeat steps order check modiﬁcations alter existing metabolic functions reconstructionderived models. -digit double-precision ﬂoating-point arithmetics input data require solution signiﬁcant digits order ensure solutions accurate remaining digits precision. solution approach suﬃcient metabolic models except instance micro macronutrients simultaneously considered. multi-scale models metabolism macromolecular synthesis require higher precision solvers need used necessary useful check scaling reconstruction model. scaling stoichiometric matrix checked with select doublequad-precision optimisation solver cobra toolbox integrated wide variety diﬀerent optimisation solvers quad minos quadruple-precision version general-purpose industrial-strength linear nonlinear optimisation solver minos. solver operates digits precision developed multi-scale constraint-based modelling problems mind. higher precision solvers precise less computationally eﬃcient standard solvers. must used necessary i.e. multi-scale reconstructions models. solve multi-scale linear optimisation problems cobra toolbox oﬀers double-quad-quad minos method combines double quad solvers order improve eﬃciency maintaining high accuracy solution. optimisation solver used cobra toolbox solverstatus changecobrasolver solvername speciﬁes solver used solvertype speciﬁes type problems solve solver speciﬁed solvername quad precision solver recommendation shows higher precision solver required. example quadprecision optimisation solver dqqminos selected solving linear optimisation problems with critical step dependency least linear optimisation solver must satisﬁed balance analysis. numerical issues arise using double precision solver higher precision solver tested. instance double precision solver incorrectly report ill-scaled optimisation problem infeasible although actually might feasible higher precision solver. checkscaling function used operating systems dqqminos quadminos interfaces available unix operating systems. troubleshooting identify stoichiometrically consistent inconsistent reactions biochemical reactions conserve mass; therefore essential biochemical reaction model actually conserve mass. reactions conserve mass however often added reconstruction order represent mass system e.g. balance analysis. every reaction conserve mass added model order represent exchange mass across boundary biochemical system henceforth referred external reaction e.g. represents null. every reaction supposed conserve mass referred internal reaction. besides exchange reactions reconstruction contain mass imbalanced internal reactions incorrect incompletely speciﬁed stoichiometry. situation results sets stoichiometrically inconsistent reactions. instance reactions stoichiometrically inconsistent impossible assign positive molecular mass species whilst ensuring reaction conserves mass. combining former reactions forward direction eﬀect inadvertent exchange across boundary model. order distinguish reactions model stoichiometrically consistent stoichiometrically inconsistent three options output massimbalance matrix non-zero entry elemental imbalance reaction. outputs function also used analyse imbalanced reactions suggest modiﬁcations stoichiometric speciﬁcation resolve imbalance. resolution mass imbalance ensure reaction stoichiometry consistent known biochemical mechanism reaction. troubleshooting checking stoichiometric inconsistency external reactions identiﬁed option used warm start algorithm option massbalancecheck non-zero entries unknownsconsistencyrxnbool unknownsconsistencymetbool denote reactions uniquely involved molecular species consistency could established. critical step supposedly internal reaction actually stoichiometrically inconsistent remainder reconstruction omitted model intended subjected balance analysis otherwise erroneous predictions result inadvertent violation steady-state mass conservation constraint. troubleshooting identify stoichiometrically consistent inconsistent molecular species timing molecular species participate reactions stoichiometrically inconsistent identiﬁed using model changerxnbounds; list reactions bounds changed given rxnnamelist vector value contains boundary reaction rate values. type bound lower upper bound alternatively bounds changed simultaneously critical step biochemically realistic applied constraints respect particular context likely network states speciﬁc context predicted opposed predicted generic model. else equal model derived comprehensive generic reconstruction less constrained model derived less comprehensive generic reconstruction. general comprehensive reconstruction greater attention must paid setting simulation constraints. identify molecular species leak siphon across boundary model timing identiﬁcation internal external reactions using findsexrxnind step fastest option always accurate. therefore wise check whether exist molecular species produced nothing consumed givin nothing reconstruction external reactions blocked. modelboundsflag leak testing uses model bounds internal reactions modelboundsflag internal reactions assumed reversible. critical step non-zero entries leakmetbool siphonmetbool indicate corresponding molecular species produced nothing consumed giving nothing invalidate balance analysis prediction. identify inconsistent reactions balance analysis objective predict reaction ﬂuxes subject steady state assumption internal molecular species mass balance assumption molecular species exchanged across boundary model. therefore useful know making balance analysis prediction reactions admit non-zero steady state i.e. reactions inconsistent also known blocked reactions. order identify reactions admit non-zero parameter vector linearly combines reaction ﬂuxes form objective function denoted cobra toolbox model.c contains objective coeﬃcients. rm×n stoichiometric matrix stored model.s lower upper bounds reaction rates stored model.lb model.ub respectively. equality constraint represents steady state constraint internal metabolites mass balance constraint external metabolites solution problem obtained using variety linear programming solvers interfaced cobra toolbox. table gives various options. typical application balance analysis predict optimal steady-state vector optimises microbial biomass production rate subject literature derived bounds certain reaction rates. deciphering appropriate objective function particular context important open research question. objective function problem modiﬁed changing model.c directly using convenient function model changeobjective; cell array rxnnamelist numeric array objectivecoeff used give reaction abbreviation corresponding linear objective coeﬃcient reactions optimised. default objectivecoeff> objectivecoeff< correspond maximisation minimisation reaction abbreviation rxnnamelist flux balance analysis many variants computed using versatile function optimizecbmodel. default method implemented optimizecbmodel balance analysis deﬁned problem depending optional arguments provided optimizecbmodel many methods variations balance analysis also implemented accessible slight changes input arguments. fbasolution.f unique; however optimal vector fbasolution.v likely unique. unwise base biological interpretation single optimal vector many alternative optima optimal vector returned vary depending solver chosen solve problem. therefore vector interpreted unique solution optimisation problem. order predict unique optimal vector necessary regularise objective subtracting strictly concave function strictly convex function. achieved with osensestr 'max'; minnorm solution optimizecbmodel; assuming constraints feasible optimal objective value solution.f optimal vector solution.v unique. setting minnorm equivalent maximising function regularisation function. highdimensional models wise ensure optimal value regularisation function smaller optimal value original linear objective problem pragmatic approach select minnorm reduce necessary. solution structure fbasolution optimizecbmodel always form even meaning ﬁelds changes depending optional input arguments function. ﬁeld .stat contains standardised solver status. fbasolution.stat optimal solution found returned. ﬁeld vector optimal value objective function attained yields vector dual variables equality constraints contains vector optimal dual variables inequality constraints. ﬁeld .stat translated solver speciﬁc status .origstat. latter idiosyncratic numerical optimisation solver translated standardised solver status order enable functions within cobra toolbox operate manner invariant respect underlying solver maximum extent possible. fbasolution.stat lower upper bounds insuﬃcient limit value objective function problem unbounded optimal solution returned. fbasolution.stat constraints problem admit feasible steady state vector therefore optimal solution exists. fbasolution.stat solution reported time limit numerical issues. troubleshooting relaxed balance analysis every solution problem must satisfy independent objective chosen optimise constraints. occur constraints simultaneously feasible i.e. system inequalities infeasible. situation might caused incorrectly speciﬁed reaction bound. order resolve infeasibility relaxed balance analysis optimisation problem minimises number bounds relax order render balance analysis problem feasible. optimisation problem denote relaxations lower upper bounds reaction rates vector denotes relaxations mass balance constraint. non-negative vector parameter used prioritise relaxation bounds reactions rather others e.g. relaxation bounds exchange reactions rather internal reactions. optimal choice parameters depends heavily biochemical context. relaxation minimum number constraints desirable because ideally able justify relaxation bound reference literature. scale task proportional number bounds proposed relaxed motivating sparse optimisation problem minimise number relaxed bounds. relaxed balance analysis implemented with structure relaxoption used prioritise relaxation type bound another. example order disallow relaxation bounds internal reactions ﬁeld .internalrelax allow relaxation bounds exchange reactions ﬁeld .exchangerelax certain reaction bounds relaxed speciﬁed using boolean vector ﬁeld .excludedreactions. ﬁrst application relaxfba model predict bounds relax supported literature experimental evidence. case ﬁeld .excludedreactions used disallow relaxation bounds certain reactions. sparse balance analysis prediction minimal number active reactions required carry particular biochemical transformations consistent optimal objective derived balance analysis based cardinality minimisation problem termed sparse balance analysis last constraint optional represents requirement satisfy optimal objective value derived solution problem optimal vector considered steady-state biochemical pathway minimal support subject bounds reaction rates satisfaction optimal objective problem many possible applications approach; here consider example. sparse balance analysis used smallest active stoichiometrically balanced cycle produce maximal rate using synthase reaction recondmodel.mat cycle active bound constraints contain active cycle internal reactions irreversible. first model loaded internal reactions identiﬁed blocked ﬁnally objective maximise synthase reaction rate. thereafter sparse balance analysis solution computed. model readcbmodel; model findsexrxnind; modelclosed model; modelclosed.lb modelclosed.ub modelclosed_atpsmi changeobjective; osensestr 'max'; minnorm 'zero'; sparsefbasolution optimizecbmodel; identify dead-end metabolites blocked reactions manually curated well automatically created genome-scale metabolic reconstructions contain dead-end metabolites either produced consumed metabolic network given model function detectdeadends identiﬁes dead-end metabolites model gapfind; dead-end metabolites listed deadendmetabolites metabolites produced consumed based network topology alone still dead-end metabolites reactions actively produce consume metabolite steady state. root downstream metabolites part reactions cannot carry given network topology subject current bounds reaction rates. order identify blocked reactions metabolic network dead-end metabolites show missing reactions network must enable consumption/production. thus deﬁne boundaries network gaps must ﬁlled reactions complete representation full metabolic network. gaps incompleteness current knowledge even well-studied model organisms. partially orphan enzymes whose biochemical functions described corresponding gene sequences found organism. biochemical functions cannot added reconstructions automatic inference must added manually non-sequence related computational approach. moreover gene annotations experimentally validated limited number organisms lead annotation errors annotations propagated across large number genes using sequence based methods only. genome-scale metabolic reconstructions assist identifying missing knowledge detecting ﬁlling network gaps demonstrated various organisms including coli chlamydomonas reinhardtii homo sapiens cobra toolbox facilitates identiﬁcation ﬁlling gaps using gapfind fastgapfill. fastgapfill uses reference database transport exchange reaction database consists transport exchange reactions metabolite reference database reconstruction. reactions pathways proposed addition metabolic reconstruction ﬁlling combined database. fastgapfill works compartmentalised decompartmentalised reconstructions. relies fastcc.m developed within fastcore order approximate compact number reactions added highest possible number gaps. prioritise reaction types reference database ﬁlling gaps using weights parameter structure. parameters weights.metabolicrxns weights.exchangerxns weights.transportrxns allow diﬀerent priorities internal metabolic reactions exchange reactions transport reactions respectively. transport reactions include intracellular extracellular transport reactions. lower weight reaction type higher priority. generally metabolic reaction prioritised solution transport exchange reactions example function preparefastgapfill prepare ﬁlling problem. reconstruction given model structure along optional inputs list compartments parameter epsilon needed fastcore algorithm filename universal database dictionaryfile lists universal database counterpart reconstruction deﬁned model.mets blacklist permits exclusion certain reactions universal database ﬁrst output variable consistmodel contains consistent subnetwork input model. consistmatricessux represents consistent matrix contains consistent matrix universal database placed cellular compartments along transport reactions metabolite cytosol compartment exchange reactions extracellular metabolites. finally blockedrxns lists blocked reactions input model. main fastgapfill function compact reactions matrix added input model close gaps model. ﬁlling carried using options depending amount metadata required interpretation proposed reactions added model gaps. options epsilon addedrxns fastgapfill; parameter epsilon deﬁnes minimum non-zero requested blocked reaction ﬁlling gaps. multi-scale model value epsilon need decreased using quadruple precision solver output addedrxns contains reactions matrix added gap. addedrxnsextended postprocessgapfillsolutions; output structure addedrxnsextended contains information present addedrxns well statistics whether desired pathways contain vectors. main result list candidate reactions added metabolic reconstructions. reactions need evaluated biological physiological plausibility organism celltype consideration. critical step algorithmic approaches help identify candidate reactions candidates must manually curated added reconstruction. step critical obtaining high-quality metabolic reconstruction. adding least number reactions gaps appropriate assumption biological viewpoint. consequently reactions proposed added reconstruction require manual assessment. proposed ﬁlling solutions must rejected biologically incorrect. mapping metabolite abbreviations universal database reconstruction metabolite abbreviations model.mets ultimately limit many blocked reactions might resolved fastgapfill. larger number metabolites diﬀerent namespaces larger pool metabolic reactions universal database proposed gaps. mapping reconstruction universal metabolite database customised using dictionaryfile lists universal database identiﬁers counterparts reconstruction. extracellular metabolomic data metabolomics indispensable analytical method many biological disciplines including microbiology plant sciences biotechnology biomedicine. particular extracellular metabolomic data often generated cell lines order characterise phenotype diﬀerent experimental conditions however analysis interpretation metabolomic data still infancy limiting interpretation potential metabolic pathways rather providing comprehensive understanding underlying mechanistic basis observed data. metabotools cobra toolbox extension integrates semi-quantitative quantitative extracellular metabolomic data metabolic models. resulting models allow interpretation generation experimentally testable mechanistic hypotheses. metabotools extracellular metabolomic data integrated cobra model structure e.g. generic human metabolic model ensures integration maximal number measured metabolites adding minimal number additional uptake secretion metabolites speciﬁed constraints metabolic network sustained. assumed extracellular metabolomic experiments carried deﬁned fresh medium corresponding model take components medium apply constraints representative chemical composition fresh medium used experiment setmediumconstraints function starting_model model addition fresh medium constraints. current_inf input argument allows specify value large magnitude ﬁnite number currently used represent eﬀectively inﬁnite reaction rate bound harmonise value speciﬁed set_inf. information bounds reaction known ideal reaction bounds model.lb= -inf; model.ub= inf;. however depending optimisation solver inﬁnite lower upper bound accepted. therefore information bounds reaction known except perhaps directionality reaction upper lower bound large magnitude ﬁnite number e.g. model.ub= fresh medium composition must speciﬁed vector exchange reaction abbreviations metabolites cell medium medium_composition corresponding millimolar concentration medium component met_conc_mm. density culture time beginning experiment measured cellular weight must also speciﬁed. basic medium components protons water bicarbonate corresponding lower bounds exchange reactions must also speciﬁed. even though present usually listed speciﬁcation commercially deﬁned medium needed cells generic human metabolic model order support synthesis biomass. modelmedium model external reaction bounds according deﬁned fresh medium. next prepare quantitative exometabolomic data using prepintegrationquant function ﬂuxes metabolite given uptake secretion values metabolomic data matrix metdata column represents sample samplenames exchanges represents exchanged metabolite. units used ﬂuxes must consistent within model. input model modelmedium prepintegrationquant function tests whether qualitative uptake secretion metabolites possible sample deﬁned metabolomic data matrix metdata. metabolite cannot secreted taken removed data matrix particular sample. possible reasons could missing production degradation pathways blocked reactions. sample uptake secretion proﬁle compatible input model modelmedium saved location speciﬁed outputpath using unique sample name. model constrained deﬁned fresh medium composition modelmedium output prepintegrationquant function used generate functional contextualised condition-speciﬁc models using subset samples speciﬁed samples. ﬂuxes smaller treated zero. lower bound speciﬁed objective function e.g. biomass_reaction; needs deﬁned along metabolites secreted e.g. no_secretion 'ex_o' taken function returns resultsallcelllines structure containing context-speciﬁc models well overview model statistics overviewresults. sample condition-speciﬁc model created constraints accordance medium speciﬁcation measured extracellular metabolomic data. condition-speciﬁc models phenotypically analysed using various additional functions present cobra toolbox detailed metabotools protocol. cobra methods also developed integration intracellular metabolomic measurements– improving ability cobra toolbox used integration interpretation metabolomic data. particular unsteady-state balance analysis enables integration absolutely quantiﬁed time-course metabolomic data metabolic model generating constraints intracellular ﬂuxes even intracellular metabolite levels steady-state. main steps ufba method illustrated figure ﬁrst step experimentally quantify absolute concentrations extracellular intracellular metabolites regular time intervals. plot time-course metabolomic data. data non-linear principal component analysis deﬁne sequence temporal stages time-course metabolomic data considered piecewise linear. linear regression estimate rate change concentration respect time measured metabolite temporal stage. load standard cobra model structure containing ﬁelds .mets .rxns. integrate rate change concentration measured metabolite cobra model with ufbaoutput buildufbamodel; ufbavariables structure must contain following ﬁelds .metnames list measured metabolites .changeslopes provides rate change concentration respect time measured metabolite .changeintervals yields diﬀerence mean rate change concentration respect time lower bound percent conﬁdence interval. list ignoreslopes contains metabolites whose measurements ignored insigniﬁcant rate change. output ufbaoutput structure contains following ﬁelds .model cobra model structure constraints rate change metabolite concentrations .metstouse list metabolites metabolomic data integrated model .relaxednodes list metabolites deviate steady-state along direction magnitude deviation. ufba algorithm automatically determines sink demand reactions needed return model least feasible balance solution automatically reconciling potentially incomplete inaccurate metabolomic data model structure. added sink demand reactions allow corresponding metabolites deﬁned .relaxednodes deviate steady state ensure model feasibility. default approach minimise number metabolites deviate steady state. buildufbamodel function integrates quantitative time course metabolomic data model setting rates change respect time measured intracellular extracellular metabolites. sink reactions demand reactions both added certain nodes network ensure model admits least feasible mass balanced ﬂux. obtained model minimized using optimizecbmodel integration transcriptomic proteomic data given generic reconstruction biochemical network particular organism reactions active speciﬁc tissue cell-type speciﬁc environmental conditions. necessary extract context-speciﬁc model generic model order create model representative part biochemical network active within particular context. context-speciﬁc model therefore subset generic model. variety experimental data used determine reactions must part context-speciﬁc model including transcriptomic proteomic metabolomic data well complementary experimental data literature. several model extraction methods developed diﬀerent underlying assumptions subject multiple comparative evaluations–. selection model extraction method parametrisation well methods chosen preprocess integrate aforementioned omics data signiﬁcantly inﬂuences size functionality accuracy resulting context-speciﬁc model. currently insuﬃcient evidence assert model extraction method universally gives physiologically accurate models. therefore pragmatic approach test biochemical ﬁdelity context-speciﬁc models generated using variety model extraction methods. cobra toolbox oﬀers diﬀerent model extraction methods accessible common interface tissuemodel createtissuespecificmodel; diﬀerent methods associated parameters selected options structure. .solver ﬁeld indicates method shall used. ﬁelds options structure vary depending method often depend bioinformatic preprocessing input omics data. additional optional parameters algorithms default values indicated respective papers. please refer original papers reporting algorithm details requirements preprocessing input data. diﬀerent model extraction methods invoked using core reactions guaranteed active extracted model identiﬁed fastcore. then algorithm ﬁnds minimum number reactions possible support core; .core ﬁeld provides core reactions able carry resulting model. algorithm usage low-expression reactions minimised keeping objective certain value; .expressionrxns ﬁeld provides reaction expression unknown reactions reactions linked genes; .threshold ﬁeld sets threshold reaction assumed active. imat ﬁnds optimal trade-oﬀ including high-expression reactions removing lowexpression reactions; .expressionrxns ﬁeld deﬁned above; .threshold_lb ﬁeld threshold reactions assumed inactive; .threshold_ub ﬁeld threshold reactions assumed active. optimal trade-oﬀ including removing reactions based given weights determined algorithm; .weights ﬁeld provides weights reaction commonly high expression leads higher deﬁnes high-conﬁdence reactions ensure activity extracted model. medium conﬁdence reactions kept certain parsimony trade-oﬀ met. .medium_set ﬁeld provides reactions medium incidence .high_set ﬁeld provides reactions ﬁnal model. reaction medium high assumed inactive preferably present ﬁnal model. core reactions ﬁrst found reactions pruned based expression connectivity core conﬁdence score. reactions necessary support core deﬁned functionalities thus removed. core reactions removed supported certain number zero-expression reactions. .confidencescores ﬁeld provides reliability reaction generally based literature .ubiquityscore ﬁeld provides ubiquity score reaction multiple replicates i.e. number times reaction detected active experimental data investigated condition. critical step integrating omics data parameter selection critical especially threshold binary classiﬁcation e.g. threshold genes active inactive sets. algorithmic performance often strongly depends parameter choices choice data preprocessing method. however createtissuespecificmodel oﬀer data preprocessing tools selection discretisation method parameters depend origin data. however cobra toolbox oﬀers functionality preprocessed expression data reactions function mapexpressiontoreactions. adding biological constraints balance model cell-type organ-speciﬁc model converted condition-speciﬁc model based imposition experimentally derived constraints. several types constraints imposed metabolic network biomass maintenance requirements environmental constraints maximal enzyme activities. general biomass constraints added part biomass reaction. instances however cell-type divide required turn biomass components. turnover rates commonly expressed half-lives represent time required half biomass precursor replaced. model constrained inequality constraints require minimal rate turnover metabolite. metabolite possesses degradation pathway suﬃcient adjust bounds reaction pathway. however multiple possible degradation pathways necessary impose lower bound total rates irreversible degradation reactions possible degradation pathway metabolite question. implementation constraint illustrated following example. phatidylcholine degraded three diﬀerent metabolic pathways critical step correctly converting literature data bound constraints units used model ﬂuxes challenge. indeed curation biochemical literature abstract information required quantitatively bound turnover rates take weeks target retrieve biomass composition turnover rates diﬀerent biomass precursors. constraints available imposing corresponding reaction bounds takes less minutes. verify reactions irreversible vector forming inequality constraint scalar. ineqsense encodes sense inequality example entries positive seek rates three reactions greater extra constraint encoded model.c ﬁeld. check constraints correctly added model qualitative chemical biochemical ﬁdelity testing context-speciﬁc model generated highly advisable frequently compare preliminary model predictions published experimental data. predictions must compared directly unbiased selection appropriate independent biological literature order identify possible sources misconception computational misspeciﬁcation. challenging compare genome-scale predictions experimental data available subset biochemical network. context important ﬁrst turn literature relevant aspect biological network represented model check literature result correctly predicted model. inevitably iterative approach multiple rounds iterative reﬁnement reconstruction model derived ﬁnalising model version comparison ﬁnal predictions independent experimental data. draft model subjected range quantitative qualitative chemical biochemical ﬁdelity tests. described step chemical ﬁdelity testing includes testing stoichiometric consistency. necessary starts stoichiometrically consistent generic model extracts context-speciﬁc model however possible misspeciﬁed reactions might inadvertently added reﬁnement reconstruction therefore retest stoichiometric consistency. beyond chemical ﬁdelity advised test biochemical ﬁdelity. tests speciﬁc particular biological domain modelled. focus human metabolism modelclosed recondmodel external reactions closed steps important encode conduct qualitative ﬁdelity tests anticipated true negatives. following test production water alone closed model modelclosedatp changeobjective'); modelclosedatp changerxnbounds' 'l'); modelclosedatp changerxnbounds' 'l'); fbasol optimizecbmodel; fbasol.stat model incapable producing water expected. fbasol.stat supposedly closed model produce water. indicates stoichiometrically inconsistent reactions network need identiﬁed. step instructions approach analysis. also important encode conduct qualitative ﬁdelity tests anticipated true positives. following metabolic function test production mitochondrial succinate -aminobutanoate model closed exchange mass across boundary system except metabolites 'gly' 'co' 'nh'. modelclosed changeobjective'); optimizecbmodel; fbasol.stat feasible model produce mitochondrial succinate -aminobutanoate. fbasol.stat metabolic function infeasible. anticipated indicates ﬁlling required quantitative biochemical ﬁdelity testing important check model reproduce closely approximate known quantitative features biochemical network represented. illustrate predict yield diﬀerent carbon sources aerobic anaerobic conditions recond. compared values corresponding yields obtained biochemical literature. approach adapted conditioncell-type speciﬁc models derived recond order test whether models still able produce physiologically relevant yields. deﬁne hydrolysis reaction dm_atp objective reaction model with minspan pathways sparse basis nullspace stoichiometric matrix cobra models often mathematically deconstructed feasible steady state vectors biochemical networks biologically conceptualized pathways. much development analysis done pathway vectors terms elementary modes extreme pathways elementary vectors. number elementary extreme vectors scales exponentially size typical metabolic network increasingly eﬃcient algorithms become essential enumerating elementary extreme vectors genome-scale. alternate approach approximately compute n−rank sparse linearly independent vectors together form basis right nullspace stoichiometric matrix also satisfy speciﬁed constraints reaction directionality. approach requires solution greedy sequence mixed-integer linear optimisation problems computes sparse mode linearly independent rest vectors within nullspace basis. result sparse linearly independent modes denoted minspan pathways. given model stoichiometric matrix reaction bounds reaction identiﬁers minspan algorithm invoked with detminspan; params structure provides user ability change parameters. among others main parameters include amount time .timelimit iterative solve seconds number threads milp solver use. output rn×) sparse rank linearly independent modes corresponding minspan pathway. dimensional variability analysis flux balance analysis general return unique optimal vector. problem returns optimal vector value reaction typically inﬁnite steady state vectors exist satisfy requirement optimal objective well equalities inequalities problem flux variability analysis widely used method evaluating minimum maximum range reaction still satisfy aforementioned constraints using optimisation problems reaction interest many possible variations balance analysis many possible variations variability analysis. cobra toolbox oﬀers straightforward interface implement standard variability analysis wide variety options implement variations balance analysis. optpercentage parameter allows choose whether consider solutions give least certain percentage optimal solution. instance optpercentage would range reaction without requirement satisfy optimality respect balance analysis. setting parameters osensestr 'min' osensestr 'max' determines whether balance analysis problem ﬁrst solved minimisation maximisation. rxnnamelist accepts cell array list reactions selectively perform variability upon. useful high dimensional models computation variability reactions time consuming. additional output matrices vmin vmax return vector ﬂuxes selected variability. verbflag input determines much output shall printed. parameter allowloops invokes mixed integer linear programming implementation thermodynamically constrained variability analysis minimisation maximisation reaction rate. method input argument determines whether output vectors also minimise -norm -norm -norm maximising minimising reaction. default result pair maximum minimum values every reaction. optional parameters set. instance parameters control subset reactions interest shall obtained determine characteristics vectors. high dimensional variability analysis besides balance analysis variability analysis widely used constraint-based modelling method high-dimensional models. however setting requires sophisticated computational approach multi-core processor computational cluster commercialgrade linear optimisation solver. setting advanced users options alternative solve linear optimisation problems using multiple threads running parallel processors cluster using distributedfba.jl opencobra extension permits solution balance analysis distributed balance problems variability analysis using common solver assuming distributedfba.jl correctly installed conﬁgured commands back forth model results matlab computations julia save; -switch julia -julia model loadmodel julia workerspool nworkers createpool julia minflux maxflux optsol fbasol fvamin fvamax distributedfba except need formulate linear objective. ensure sample statistically representative entire feasible suﬃciently large number vectors vectors must collected randomly within feasible set. recently distributed software uniformly sample feasible sets steady state ﬂuxes based coordinate hit-and-run rounding algorithm guaranteed return statistically uniform distribution appropriately utilised. chrr sampling algorithm therefore used default. figure illustrates basics algorithm. sampling model invoked either using default setting tailoring parameters arguments interface. pragmatic approach ﬁrst option default parameters check quality marginal distribution subset reactions especially higher dimensional models necessary tune parameters option samples output matrix sampled vectors number samples. order accelerate future rounds sampling modelsampling output. model storing extra variables acquired preprocessing model sampling figure solution spaces steady state ﬂuxes anisotropic long directions short others. impedes ability sampling algorithm taking random direction evenly explore full feasible algorithm). chrr algorithm ﬁrst rounds solution space based maximum volume ellipsoid. then rounded solution space uniformly sampled using provably eﬃcient coordinate hit-and-run random walk. finally samples projected back onto anisotropic feasible set. leads distributed uniform sampling converged sampling distributions selected reactions become smoother. example sampling distributions parameters deﬁned nskip nsamples variable samplefile contains name .mat used save sample vectors disk. string passed samplername used sample non-default solvers. options structure contains ﬁelds control sampling density number samples total number samples returned nskip nsamples. output modelsampling used subsequent rounds sampling. although rounding large models computationally demanding results reused sampling model once. chrr algorithm provably converges uniform stationary sampling distribution enough samples obtained tested mono-scale metabolic models reactions. default parameters using heuristic rules estimate suﬃciently large number samples balances requirement desire complete sampling procedure practically useful period time. troubleshooting variety strain design algorithms implemented within cobra toolbox including optknock optgene genetic design local search optforce. optknock optgene gdls could identify gene deletion strategies optforce method identify gene deletion also updown-regulation strategies. optforce method version cobra toolbox provide illustrative example strain design using method. consider problem ﬁnding interventions size interventions applied wild-type strain mutant created produce particular target interest higher yield wild-type strain. interventions could knock-outs up-regulations down-regulations example optforce method identify genetic figure optforce procedure must sets determined contrasting ranges obtained using variability analysis wild-type overproducing strain ﬁrst order must sets denoted mustl mustu. instance reaction belongs mustu upper bound range wild-type less lower bound range overproducing strain. center bottom panels show possible second order must sets. manipulations leading overproduction succinate coli optforce method consists following steps deﬁne constraints wild-type mutant strains perform variability analyses wild-type mutant strains sets reactions must alter order achieve desired phenotype mutant strain ﬁnally interventions needed ensure increased production target interest first select commercial-grade solver select local directory save generated results with critical step example provide constraints wild-type mutant strains typical scenario deﬁnition diﬀerential constraints wild-type mutant strains requires additional research. step could take days weeks depending information available species interest. flux bounds required inputs. experiments might required performed addition literature curation task order obtain data. assumptions also made describing phenotypes strains reduce dependency literature curation. important strains suﬃciently diﬀerent order able anticipate diﬀerences reaction ranges. performing variability analysis wild-type mutant strains with must sets sets reactions must increase decrease order achieve desired phenotype mutant strain. shown figure ﬁrst order must sets mustu mustl second order must sets denoted mustuu mustll mustul. parameters constraints deﬁned functions findmustl findmustu determine mustu mustl sets respectively. deﬁne with runid 'testoptforcem'; time must sets determined folders generated read inputs store outputs i.e. reports. folders located directory deﬁned uniquely deﬁned runid. order ﬁrst order must sets constraints deﬁned runid 'testoptforcel' folder testoptforcel created additional folders inputsmustl outputsmustl created. inputsmustl folder contains inputs required function findmustl outputsmustl folder contains mustl found report summarises inputs outputs. order maintain chronological order computational experiments report timestamped. display reactions belong mustl using results stored available format analogous mustl set. reactions belong mustu displayed mustl. deﬁne reactions excluded analysis. reactions found previous step well exchange reactions shall included. results stored available format analogous mustl set. reactions mustuu displayed using disp function. repeat steps determine second order must sets mustll mustul using functions findmustll findmustul respectively. results stored available format analogous mustl set. present example mustll mustul empty sets. troubleshooting order interventions needed ensure increased production target interest deﬁne mustu union reactions must up-regulated ﬁrst second order must sets. similarly mustl deﬁned. deﬁne number interventions allowed maximum number sets nsets reaction producing metabolite interest targetrxn constraints mutant strain constropt. order non-intuitive solutions increase number interventions exclude suct reaction up-regulations. increase nsets best sets. change runid save second result separate folder previous result optforce step reactions determined optforce displayed using disp. complete predicted interventions found folders created inside runid folder inputs outputs optforce associated findmust* functions stored. input folders inputsfindmust* contain .mat ﬁles running functions solve bilevel optimisation problems. output folders outputsfindmust* contain results algorithms well report summarises outcome steps performed execution function. optforce algorithm sets reactions increase production speciﬁed target. ﬁrst sets found best ones production rate highest. last ones worst production rate lowest. caution aware sets guarantee minimum production rate target check minimum production rate e.g. using function testoptforcesol. atomically resolve metabolic reconstruction genome-scale metabolic models explicit stoichiometric matrix represents network biochemical reactions. implicit stoichiometric matrix corresponds molecular species computing properties model atomic structure molecular species represented. also implicit column stoichiometric matrix corresponds biochemical reaction. however computing properties model mechanisms underlying biochemical reaction terms structures metabolites atomically resolved chemical transformations take place represented. recent developments genome-scale metabolic modelling generated genome-scale metabolic reconstructions molecular structures speciﬁed reaction mechanisms represented atom mappings substrate product atoms atom mapping one-to-one association substrate atom product atom. instance chemical reaction represented atom mappings atom mapping substrate product atom. single chemical reaction admit multiple chemically equivalent atom mappings chemically equivalent atoms present substrate product both. therefore chemical reaction represented multiple chemically equivalent sets atom mappings. together atom mappings chemical reaction specify aspects reaction mechanism e.g. chemical bond change breakage formation. virtual metabolic human database provides metabolites chemical structures atom mapped reactions reactions recond metabolites recond human microbiota. metabolite structures provided canonically ordered smiles formats. atom mapping data provided smiles formats. explicit representation metabolite reaction structure oﬀers possibility broader range biological biomedical biotechnological applications stoichiometry alone. order obtain chemical structures metabolite three main ways suitable cheminformatics software tools used automatically obtain metabolite identiﬁers metabolic network reconstructions download corresponding structure database. order obtain atom mapping metabolic reaction reaction stoichiometry chemical structures corresponding metabolites must available. obtain atom mappings three main options comparative study performed using recond test case. accuracy availability reaction decoder tool considered suitable algorithm atom reactions genome-scale metabolic network. nevertheless note canonical labelling clique approximation algorithm reactions explicit hydrogen atoms fully protonated reactions atom reactions implicit hydrogen atoms. databases biopath kegg rpair disseminate manually curated atom mappings. also contains manually curated atom mappings subset human metabolic reactions. function computes atom mapping data balanced unbalanced reactions metabolic network saves outputdir directory. optional maxtime parameter sets runtime limit atom mapping reaction. standardiserxn atom mappings also canonicalised necessary order obtain consistent interoperable atom mappings certain applications e.g. computation conserved moieties step output balancedrxns contains balanced atom mapped metabolic reactions. troubleshooting canonicalised atom mappings metabolic network linearly independent conserved moieties metabolic network identiﬁed. conserved moieties corresponds molecular substructure whose structure remains invariant despite chemical transformations given network. conserved moiety group atoms follow identical paths metabolites metabolic network. similarly vector nullspace stoichiometric matrix corresponds pathway conserved moiety corresponds vector left nullspace stoichiometric matrix. metabolic networks hypergraphs moiety subnetwork graphs. therefore conserved moieties biochemical mathematical signiﬁcance computed used wide variety applications. given metabolic network exclusively mass balanced reactions identify conserved moieties graph theory analysis atom transition network. first compute atom transition network metabolic network using buildatomtransitionnetwork; rxnfiledir directory containing atom mapped ﬁles balanced reactions obtained explained step output structure several ﬁelds sparse incidence matrix atom transition network number atoms number atom transitions .mets cell array metabolite identiﬁers link atoms corresponding metabolites .rxns cell array reaction identiﬁers link atom transitions corresponding reactions .elements cell array element symbols atoms represents conserved moieties metabolic network. matrix moiety vectors left null space stoichiometric matrix incidence matrix moiety supergraph connected component moiety graph moietyformulas cell array chemical formulas computed moieties. thermodynamically constrain metabolic model balance analysis genome-scale stoichiometric models metabolism principal constraints uptake secretion rates steady state mass conservation assumption reaction directionality. cobra toolbox extension vonbertalanﬀy methods integration thermochemical data constraint-based models well application thermodynamic laws increase physicochemical ﬁdelity constraint-based modelling predictions. full exposition method thermodynamically constrain genome-scale metabolic model beyond scope protocol. therefore several steps highlighted. given experimentally derived training_data standard transformed gibbs energies formation state-of-the quantitative estimation standard gibbs energy formation metabolites similar chemical substructures obtained using implementation component contribution method. assume input model anatomically resolved described steps access compendium stoichiometrically consistent metabolite structures prerequisite. component contribution method invoked follows model componentcontribution; model.dfg ﬁeld gives estimated standard gibbs energy formation metabolite model model.dfg_uncertainty ﬁeld expressing uncertainty estimates smaller metabolites structurally related metabolites training set. thermodynamic estimates given units kj/mol. standard gibbs energy formation metabolite must transformed according environment compartment model i.e. temperature ionic strength electrical potential speciﬁc compartment. thermodynamic properties reactions estimated given model.concmin model.concmax supply lower upper bounds compartment-speciﬁc metabolite concentrations achieved with model setupthermomodel; output ﬁeld .dfgt model gives estimated standard transformed gibbs energy formation metabolite .drgt gives estimated standard transformed gibbs energy reaction. subject confidencelevel speciﬁed input upper lower bounds standard transformed gibbs energy reaction provided .drgtmin .drgtmax respectively. critical step multi-compartmental model step must done entire network order ensure thermodynamic potential diﬀerences arising diﬀerences environment compartments properly taken account. theoretical justiﬁcation assertion. reaction directionality quantitatively assigned based aforementioned thermodynamic estimates with model.drgtmax< reaction assigned forward model.drgtmin> reaction assigned reverse unless uncertainty estimation standard transformed reaction gibbs energy exceeds speciﬁed cutoﬀ case qualitatively assigned reaction directionality speciﬁed together model.lb model.ub takes precedence. directions output provides boolean vector ﬁelds used analyse eﬀect qualitatively versus quantitatively assigning reaction directionality using thermochemical parameters. thermodynamically constrained balance analysis invoked disallowing around stoichiometrically balanced cycles also known loops using allowloops parameter optimizecbmodel with allowloops solution optimizecbmodel allowloops); solution structure balance analysis except solution satisﬁes additional constraints ensure predicted steady state vector thermodynamically feasible. solution satisﬁes energy conservation second thermodynamics. convert balance model kinetic model order analyse biochemical networks genome scale systems biologists often linear optimisation technique called balance analysis linear approximation known nonlinear biochemical reaction network function suﬃcient biologically meaningful predictions situations. however many biochemical processes linear approximation insuﬃcient motivates quest developing variational kinetic modelling–. certain conditions required order generate kinetic model internally consistent. first describe conditions demonstrate ensure met. consider biochemical network molecular species reversible reactions. deﬁne forward reverse stoichiometric matrices zm×n respectively denotes stoichiometry molecular species forward reaction denotes stoichiometry molecular species reverse reaction. assume network reactions stoichiometrically consistent exists least positive vector satisfying equivalently require every reaction conserves mass. matrix represents reaction stoichiometry viewed incidence matrix directed hypergraph. assume less molecular species reactions assume cardinality least cardinality column least two. matrices sparse particular sparsity pattern depends particular biochemical network modelled. moreover assume rank) requirement kinetic consistency. compute non-equilibrium kinetic steady state denote variable vector molecular species concentrations. assuming constant nonnegative elementary kinetic parameters assume elementary reaction kinetics forward reverse elementary reaction rates respectively denote respective component-wise functions then deterministic dynamical equation time evolution molecular species concentration given many algorithms handle nonlinear system minimising nonlinear least-squares problem; however particular features mapping sparsity stoichiometric matrices non-unique local zeros mapping motivates quest developing several algorithms eﬃcient dealing nonlinear system. particular class mappings called duplomonotone mapping studied biochemical networks three derivative-free algorithms ﬁnding zeros strongly duplomonotone mappings introduced. further shown function rewritten diﬀerence convex functions suitable minimised programming methods. therefore algorithm acceleration adding line search technique proposed ﬁnding stationary point since mapping locally non-unique solutions satisfy classical assumptions convergence theory. result proved mapping satisﬁes so-called hölder metric subregularity assumption adaptive levenberg-marquardt method proposed solution nonlinear system starting point close enough solution. order guarantee convergence levenbergmarquardt method arbitrary starting point combined globalisation techniques line search trust-region leads computationally eﬃcient algorithms. compute non-equilibirum kinetic steady state running function optimizevkmodels. mandatory inputs computing steady states model vkmodel containing name solver solve nonlinear system initial point parameters considered solvers. example specifying solver write solver 'lmtr';. optional parameters selected algorithm given optimizevkmodels params struct follows params.maxnumiter params.adaptive params.kin kin; otherwise selected algorithm default parameters assigned algorithm. running function optimizevkmodels done typing stands horizontal concatenation operator. rm−rm denote basis left nullspace implies rank system satisﬁes moiety conservation initial concentration possible compute corresponds structurally identiﬁable conserved moiety biochemical network. problem ﬁnding moiety conserved steady state biochemical reaction network equivalent solving nonlinear system equations among algorithms mentioned previous section local global levenberg-marquardt methods designed compute either solution nonlinear system stationary point computation moiety conserved non-equilibrium kinetic steady state merit function made running optimizevkmodels function previous section. model vkmodel containing passed optimizevkmodels together name levenberg-marquardt solvers. human metabolic network visualisation reconmap visualisation biochemical pathways important tool biologically interpreting predictions generated constraint-based models. invaluable developing understanding biological meaning implied prediction. biochemical network maps permit visual integration model predictions underlying biochemical context. patterns diﬃcult appreciate vector often much better appreciated studying generic contextualised model predictions. genome-scale biochemical network visualisation particularly demanding. currently available software satisﬁes requirements might desired visualisation predictions genome-scale models. automatic layout genome-scale biochemical networks insuﬃciently developed generate aesthetically pleasing manual layout maps labour intensive global reference coordinate system maps human might layout global diﬀerently. software applications graph visualisation often suited displaying metabolic hypergraphs. client-server software models trade highly interactive display subsystem maps less interactive display genome-scale maps. additional challenge genome-scale models much detail visually appreciate entire genome-scale visualised once necessitating application techniques dimensionally reduce presentation e.g. semantic zooming. caveats mind present method genome-scale visualisation human metabolic network predictions using reconmap manual layout reactions human metabolic reconstruction recon visualised molecular interaction network visualisation stand-alone service built google maps application programming interface enables latency display navigation genome-scale molecular interaction networks. visualisation context-speciﬁc predictions reconmap browser depends access server running minerva requests user credentials remote access. public access server provided free charge. request user credentials navigate browser http//vmh. life/reconmap select admin click request account send email minerva team subsequently receive user credentials. order prepare remote access within matlab load details minerva instance remote server provided within cobra toolbox installation user credentials although optimal objective value balance analysis problem unique optimal vector likely not. visualising vector important unique solution optimisation problem displayed. example predict unique network regularising balance analysis problem redeﬁning order obtain unique optimal vector identifier 'your_overlay_title'; response buildfluxdistlayout; input variable text string identifier enables name overlay according unique title. response status overlay successfully received minerva server. troubleshooting visualise context-speciﬁc reconmaps using browser. navigate http//vmh.life/ reconmap login credentials select ’overlays’ list user-provided overlays appears. order step check adjacent unique text string provided identifier. order export context-speciﬁc reconmaps publishable graphics options possible portable document format portable network format former useful external editing whereas latter essentially produces snapshot visual part map. zoom entire visible. right click export image pdf. named model.pdf downloaded default directory browser. scalable network graphic optionally editor zoom crop desired. variable scope visualisation network paintnet model validation optimisation visualisation small-scale fragment network area interest often suﬃcient especially convenient network reconstruction manual layout available. automatic generation hypergraph layout chosen subset network achieved cobra toolbox extension paintnet. subset network visualised directionality ﬂuxes selected reactions shown. details reaction metabolite pop-up cursor placed corresponding item. flux fbasolution.v; involvedmets draw_by_rxn; rxns input provides selection reactions interest. remaining inputs optional control appearance automatic layout. example excludemets provides list metabolites excluded network visualisation e.g. cofactors nadp. interest 'etoh' contributing cobra toolbox matlab.devtools comprehensive code base cobra toolbox evolves constantly. open-source community active collaborators submit contributions frequently. feature interlinked existing functions higher risk addition breaking instantly code heavily used daily basis. order decrease risk continuous integration setup interlinked version control system git-tracked repository essentially folder code documents incremental changes tracked date user. incremental changes code called commits. main advantage version control systems availability branches. simple terms branch contains sequence incremental changes code. branch also commonly referred feature. consequently contribution generally consists several commits branch. contributing cobra toolbox straightforward. contributor cobra toolbox likely familiar matlab internal mechanics matlab.devtools developed speciﬁcally contribute git-tracked repository located github server. figure overview online repositories well local copies given. ways using cobra toolbox depends type user. figure opencobra repository fork contributor located github server cloned local computer cobratoolbox fork-cobratoolbox folders respectively. repository might contain diﬀerent branches repository contains master develop branches. note contributors read opencobra repository. stable branch master branch development code made develop branch master branch shall checked using cobratoolbox repository whereas contributors shall create branches originating develop branch present example mybranch already pushed forked repository github server mybranch present locally. branch mybranch merged develop branch opencobra repository opening pull request. order submit contributions mybranch contributor must ﬁrst push commits forked repository opening pull request. commit made develop branch merged master branch develop branch stable overall opencobra repository public repository read-only. opencobra repository installed folder cobratoolbox branches available locally. local folder cobratoolbox user read write access cannot push eventual changes back opencobra repository. default stable master branch used. local copy located cobratoolbox directory updated order make changes opencobra repository words contribute must obtain personal copy ﬁrst. must register github website order obtain username. first click button fork right corner oﬃcial opencobra repository website order create personal copy write read access opencobra repository. initialisation matlab.devtools user developer folders cobratoolbox folder stable master branch checked fork-cobratoolbox folder develop branch checked out. detailed instructions troubleshooting and/or contributing cobra toolbox using terminal provided supplementary manual oﬃcial opencobra version cobra toolbox installed possible install matlab.devtools within matlab command directory matlab.devtools created next cobratoolbox installation directory. matlab.devtools also installed terminal clone gitgithub opencobra matlab devtools critical step working internet connection required curl must installed. installation instructions provided main repository page matlab.devtools. valid passphrase-less must github account settings order contribute without entering password securely communicating github server. troubleshooting matlab.devtools conﬁgured whenever conﬁguration details present. ﬁrst time user runs contribute personal repository downloaded folder named fork-cobratoolbox location speciﬁed user. local folder master develop branches exist develop branch automatically selected contributions derived develop branch. initialising contribution using matlab.devtools straightforward. matlab type matlab.devtools already conﬁgured procedure updates fork initialises branch name requested process. contribution initialised ﬁles added modiﬁed deleted folder fork-cobratoolbox. contribution successfully initialised user presented brief summary conﬁguration details. instructions proceed also provided. critical step location fork must speciﬁed root directory. warning issued path already contains another git-tracked repository. troubleshooting existing contribution continued while. step particularly important order retrieve changes made opencobra repository meantime. contribute select procedure procedure pulls changes opencobra repository rebases existing contribution. words existing commits shifted forward placed commits made develop branch opencobra repository. published commits explained step troubleshooting publishing contribution means uploading incremental code changes fork. changes available public available opencobra repository. contribution accepted oﬃcial repository pull request submitted. necessary open pull request want simply upload contribution fork. changes code individually listed user asked explicitly changes shall added commit. changes added commit message must entered. upon conﬁrmation changes pushed online fork automatically. procedure submitting pull request option diﬀerence selecting open pull request link provided leads pre-conﬁgured website according contributing guidelines. pull request click away. critical step following procedures changes published using procedure stopping work contribution. following procedure incremental changes uploaded remote server. advised publish often make small incremental changes code. need opening pull request immediately changes made. pull request opened time even manually directly github website. troubleshooting contribution merged develop branch opencobra repository contribution safely deleted locally remotely fork running contribute selecting procedure note deleting contribution deletes changes made feature possible selectively delete commit using matlab.devtools. instead create branch following procedure follow instructions cherry-pick supplementary manual critical step make sure changes either merged saved locally need them. procedure concluded changes deleted branch removed locally remotely. commits recovered. troubleshooting sometimes useful simply update fork without starting contribution. local fork updated using procedure contribute menu. engaging cobra toolbox forum timing frequently asked questions section documentation good starting point answers questions issues face. public forum associated cobra toolbox available https//groups.google.com/ forum/forum/cobra-toolbox great search solutions previously recognised problems similar problems novel user. especially respect recent installation conﬁguration issues arisen asynchronous development many software packages integrated cobra toolbox. suggest solutions problems post question online cobra toolbox forum make question detailed possible increase probability rapid helpful reply. append message result running generatesystemconfigreport repository maintainers aware system conﬁguration. often ﬁrst question comes mind considering respond. solution first read output initialisation script command window. warning error messages though often brief point toward source problem initialisation read literally. second verify software versions supported correctly installed described materials section. third ensure using latest version cobra toolbox steps fourth verify test cobra toolbox described step finally nothing else works consult cobra toolbox forum described steps verify required software correctly installed described materials section. speciﬁc test individually determine exact cause error. error ﬁxed matlab.devtools contribute details approach submitting contribution given steps error cannot determined reach community explained steps speciﬁcations excel sheets accepted cobra toolbox found github files legacy sbml formats imported information sbml might lost. addition constraint-based information encoded ﬁelds package cobra-style annotations introduced cobra toolbox supported backward compatibility. information still stored type annotations. data speciﬁed latest version package used preference ﬁelds e.g. legacy cobra-style notes contain similar data. reconstruction model exported summary invalid data model obtained running verifymodel. list required ﬁelds model structure presented table make sure relevant system requirements described materials section satisﬁed. still unable respective interfaces reach community explained steps manually inspect reaction formulae reaction identify obviously mass imbalanced reactions omit reconstruction findstoichconsistentsubset again. check value fbasolution.origstat compare documentation provided solver information. solving double precision solver model could multi-scale recognised such fbasolution.stat symptomatic situation. case refer steps learn numerically characterise reconstruction model. increase values options.nskip options.nsamples parameters smooth unimodal marginal distributions obtained. solution constraints strains diﬀerences reaction ranges shown. diﬀerences found another algorithm might better suited. error running findmust* functions possible reason inputs well deﬁned solver set. verify inputs changecobrasolver change commercial-grade optimisation solver increase runtime limit algorithm. possible reason exchange demand sink reactions start anticipated preﬁxes. formulae missing formula incorrectly speciﬁed leading reactions incorrectly identiﬁed elementally balanced. inadvertent violation steady-state mass conservation constraint. short runtime limit numerical issues happened optimisation procedure. installation matlab.devtools dependent correctly conﬁgured github account. computer must github account settings otherwise errors thrown. clone command works properly set. case delete locally remotely github generate key. case local changes present backup remove local fork-cobratoolbox folder contribute command again. alternatively delete forked repository online re-fork opencobra repository. sure everything backup safely deleted wise store time case later realises updates code gone missing. contribute changes manually described supplementary manual github account make sure forked repository reached. easily checked re-cloning matlab.devtools terminal explained step browsing forked repository online. possible reason text string identifier input variable uniquely deﬁned account. local forked folder cannot found moved remote fork cannot reached. solution rebase process fails user asked reset contribution reset contribution online version branch fork. general rebase fails changes made opencobra repository conﬂict local changes. check status local repository typing checkstatus conﬂicts know resolve check oﬃcial repository ping developers https//groups.google.com/forum/ forum/cobra-toolbox explained steps already published changes submit pull request explained step developers understand situation. alternatively resolve conﬂicts manually. information solve conﬂicts given supplementary manual check github account make sure forked repository reached. backup modiﬁed ﬁles separate location reset branch manually typing terminal reset -hard origin yourbranch then copy back fork-cobratoolbox folder contribute normally. forked repository cannot reached online conﬁgured properly. changes made opencobra repository local fork. local changes published local changes published many changes made opencobra repository. steps initialisation cobra toolbox step verify test cobra toolbox step importing reconstruction model step exporting reconstruction model step rbionet reactions reconstruction steps spreadsheet reactions reconstruction steps scripts reconstruction functions step check scaling reconstruction step select doublequad-precision optimisation solver step identify stoichiometrically consistent inconsistent reactions step identify stoichiometrically consistent inconsistent molecular species step simulation constraints step identify molecular species leak siphon across boundary model step identify inconsistent reactions steps flux balance analysis step relaxed balance analysis step sparse balance analysis steps identify dead-end metabolites blocked reactions steps metabolic network steps extracellular metabolomic data steps intracellular metabolomic data step integration transcriptomic proteomic data steps adding biological constraints balance model steps qualitative chemical biochemical ﬁdelity testing steps quantitative biochemical ﬁdelity testing step minspan pathways sparse basis nullspace stoichiometric matrix step dimensional variability analysis step high dimensional variability analysis step uniform sampling steady-state ﬂuxes steps identify genetic manipulations leading targeted overproductions steps atomically resolve metabolic reconstruction steps thermodynamically constrain metabolic model step convert balance model kinetic model step compute non-equilibrium kinetic steady state step compute moiety conserved non-equilibrium kinetic steady state steps human metabolic network visualisation reconmap steps variable scope visualisation network paintnet steps contributing cobra toolbox matlab.devtools initialisation cobra toolbox initialisation step automatically checks conﬁguration required optional software dependencies. initialisation submodules updated. solver paths available compatible. system-dependent table solver status returned together solver suggestions shown figure user also presented options update cobra toolbox. test suite starts initialising cobra toolbox thereafter tests run. test comprehensive summary table presented respective tests test outcome shown. fully conﬁgured system compatible recent version cobra toolbox tests pass. necessary fully conﬁgured system one’s particular subset methods. importing reconstruction model reconstruction model loaded matlab workspace within structure named model irrespective whether filename speciﬁed reconstruction model. model structure contain information diﬀerent ﬁelds. table provides overview individual model ﬁelds content. large sbml models take time load. exported containing information model location format speciﬁed filename. check scaling reconstruction checkscaling function returns precisionestimate string either 'double' 'quad'. scaling estimate based order magnitude ratio maximum minimum column scaling coeﬃcients determined scaled stoichiometric matrix entries close unity. addition summary scaling properties included scalingproperties returned. select doublequad-precision optimisation solver selected solver installed solverstatus returned solver interface matlab conﬁgured correctly solver compatible system environment. dqqminos solver selected solverstatus problem solutions computed somewhat slower double precision solver advantage solutions computed feasibility optimality tolerance becomes advantage multi-scale model typical tolerance double precision solver insuﬃcient. identify stoichiometrically consistent inconsistent molecular species molecular species corresponding non-zero entry within sconsistentmetbool always involved mass imbalanced reactions indicating stoichiometry misspeciﬁed. double check chemical formulae involved corresponding reactions ensure that e.g. stoichiometry protons cofactors etc. leads balanced reactions. non-zero entry fluxinconsistentrxnbool indicates inconsistent reaction i.e. reaction admit non-zero ﬂux. blocked reactions resolved manual reconstruction algorithmic reconstruction combination both. figure energy generating stoichiometrically balanced cycle. smallest stoichiometrically balanced cycle produces maximal rate using synthase reaction recond internal reactions. metabolite reaction abbreviations primary keys virtual metabolic human database reaction abbreviation reaction name adkm adenylate kinase mitochondrial; gsdym glutamate--semialdehyde dehydrogenase mitochondrial; glukm glutamate -kinase mitochondrial; -beta-cytochrome family subfamily polypeptide ppam inorganic diphosphatase; l-glutamate -semialdehydenad+ oxidoreductase; hmr_ nucleoside-triphosphate giphosphatase; atpsmi synthase cyor_umi ubiquinol- cytochrome reductase complex iii; nadh_umi nadh dehydrogenase mitochondrial; cyoomi cytochrome oxidase mitochondrial complex integration transcriptomic proteomic data createtissuespecificmodel returns cobra model constrained context data provided usually means enrichment reactions high expression omission reactions expression proﬁles. method returns consistent model hence likely certain reactions without experimental evidence added context-speciﬁc model order enable non-zero reactions supporting experimental evidence activity exists. identify genetic manipulations leading targeted overproductions identiﬁed reaction suct i.e. transporter succinate however changing parameters enable optforce non-intuitive solutions. identify genetic manipulations leading targeted overproductions figure illustrates interventions predicted optforce method succinate overproduction antcore coli model aerobic conditions. figure interventions predicted optforce method succinate overproduction coli aerobic conditions. reactions need up-regulated knocked shown simpliﬁed metabolic map. strategies include up-regulation reactions generating succinate isocitrate dehydrogenase α-ketoglutarate dehydrogenase succinylcoa synthetase along knockout reactions draining succinate succinate dehydrogenase fumarate hydratase. note reactions associate genes coli. figure qualitatively forward quantitatively reverse reactions multi-compartmental genome-scale model. recond transformed reaction gibbs energy could estimated reactions. reactions reactions qualitatively assigned forward reconstruction quantitatively assigned reversible using subcellular compartment speciﬁc thermodynamic parameters component contribution method broad bounds metabolite concentrations except certain cofactors. geometric mean feasible range estimated millimolar standard transformed reaction gibbs energy blue) transformed reaction gibbs energy red) illustrated. relative uncertainty metabolite concentrations versus uncertainty thermochemical estimates reﬂected relative breadth blue bars reaction respectively. reactions rank ordered cumulative probability millimolar standard transformed reaction gibbs energy less zero assumes metabolites millimolar concentration gaussian error assumed component contribution estimates. ordering forward transport reactions reverse transport reactions between left right biochemical reactions decreasing cumulative probability forward direction subject stated assumptions. alternative rankings possible. point observe cobra toolbox primed quantitative integration metabolomic data uncertainty transformed reaction gibbs energy associated thermochemical estimates using component contribution method signiﬁcantly lower uncertainty associated assumption broad concentration range. thermodynamically constrained predictions diﬀer markedly obtained balance analysis. open challenge acquisition suﬃcient thermochemical training data well suﬃcient quantitative metabolomic data estimates transformed reaction gibbs energies made suﬃciently uncertainty constrain reaction directionality high conﬁdence. degree conﬁdence typically diﬀers markedly reactions. therefore pragmatic approach rank order reaction directionality assignments probability thermodynamically assigned reaction directionality forward reversible reverse figure selective scope visualisation coli core model model paintnet. rectangles represent reactions rates ﬂuxes brackets; rectangles represent reactions metabolite; ellipses represent metabolites; ellipses represent dead metabolites; grey edges represent zero-rate ﬂuxes; green edges represent positive-rate ﬂuxes; blue edges represent negative-rate ﬂuxes. network visualisation also enables zoom speciﬁc regions. figure illustrates fragment paintnet visualisation contextualised using vector control thickness colour edges representing reactions. visualisation discover isolated parts network without well cycles running without substrate. acknowledgements reproducible research results team particular christophe trefois yohan jarosz luxembourg centre systems biomedicine acknowledged help setting virtual machine jenkins server. study funded national centre excellence research parkinson’s disease u.s. department energy ofﬁces advanced scientiﬁc computing research biological environmental research part scientiﬁc discovery advanced computing program grant de-sc. project also received funding european union’s horizon research innovation programme grant agreement fonds national recherche grant luxembourg national research fund attract program open grants. nathan lewis supported nigms novo nordisk foundation anne richelle supported lilly innovation fellows award. francisco planes supported minister economy competitiveness spain elkartek programme basque government iõigo apaolaza supported basque government predoctoral grant bernhard palsson supported novo nordisk foundation center biosustainability technical university denmark authors contributed equally work laurent heirendt sylvain arreckx benjamin cousins diana assal luis valcarcel iñigo apaolaza susan ghaderi masoud ahookhosh marouen guebila andrejs kostromins nicolas sompairac hoai ding yuekai wang james yurkovich miguel a.p. oliveira phan vuong contributions continuous integration code review opencobra.github.io/cobratoolbox jenkins documenter.py changecobrasolver pull request support tutorials tests coordination manuscript initcobratoolbox. continuous integration code review fastfva matlab.devtools opencobra.github.io tutorials tests pull request support coordination manuscript initcobratoolbox forum support. transcriptomic integration tutorials tutorial reviews transcriptomic integration sections manuscript forum support pull request support code review. development update strain design algorithms gams matlab integration tutorials. transcriptomic data integration methods tutorials transcriptomic integration section manuscript rumba pfba metabolic tasks tutorial review. multispecies modelling code contribution tutorial review testing. thermodynamics conserved moiety sampling methods. documentation. sbml input-output support. tutorials. multispecies modelling tutorial review testing. strain design code review tutorial review manuscript tutorials chemoinformatics metabolite structures atom mapping data. metabolic cartography. solution navigation multispecies modelling code tutorial review. metabolomic data integration. tutorials testing. metabolic cartography human metabolic network visualisation tutorials. modelborgiﬁer code tutorial. virtual metabolic human interoperability. minspan method tutorial supervision ufba method tutorial. chrr uniform sampling. tutorials. tutorials genetic mcss implementation. tutorials genetic mcss implementation. interoperability cellnetanalyzer. adaptive levenberg-marquardt solver. tutorial reviews. paintnet code tutorial. development metabolomic cartography tool tutorial. cardinality optimisation solver. quad precision solvers. multiscale balance analysis reformulation. strain design code review tutorial review manuscript ufba method tutorial. tutorial. adaptive levenberg-marquardt solvers boosted diﬀerence convex optimisation solver. chemoinformatic data integration documentation. development metabolomic cartography tool tutorial. development metabolomic cartography tool tutorial. scott hinton william bryant francisco aragón artacho francisco planes egils stalidzans alejandro maass santosh vempala michael hucka michael saunders tutorials. code reﬁnement. duplomonotone equation solver boosted diﬀerence convex optimisation solver adaptive levenberg-marquardt solvers. academic supervision tutorials genetic mcss implementation. academic supervision paintnet tutorial. academic supervision. academic supervision chrr uniform sampling algorithm. academic supervision sbml input-output support. academic supervision quad precision solvers nullspace computation convex optimisation. academic supervision strain design algorithms. academic supervision coding transcriptomic data integration. rumba pfba metabolic tasks tutorial review. academic supervision fastcore algorithm. academic supervision opencobra stewardship. academic supervision tutorials code contribution manuscript. conceptualisation lead developer academic supervision software architecture code review sparse optimisation nullspace computation thermodynamics variational kinetics fastgapfill sampling conserved moieties network visualisation forum support tutorials manuscript.", "year": "2017"}