{"title": "Generalizing Gillespie's direct method to enable network-free  simulations", "tag": "q-bio", "abstract": " Gillespie's direct method for stochastic simulation of chemical kinetics is a staple of computational systems biology research. However, the algorithm requires explicit enumeration of all reactions and all chemical species that may arise in the system. In many cases, this is not feasible due to the combinatorial explosion of reactions and species in biological networks. Rule-based modeling frameworks provide a way to exactly represent networks containing such combinatorial complexity, and generalizations of Gillespie's direct method have been developed as simulation engines for rule-based modeling languages. Here, we provide both a high-level description of the algorithms underlying the simulation engines, termed network-free simulation algorithms, and how they have been applied in systems biology research. We also define a generic rule-based modeling framework and describe a number of technical details required for adapting Gillespie's direct method for network-free simulation. Finally, we briefly discuss potential avenues for advancing network-free simulation and the role they continue to play in modeling dynamical systems in biology. ", "text": "gillespie’s direct method stochastic simulation chemical kinetics staple computational systems biology research. however algorithm requires explicit enumeration reactions chemical species arise system. many cases feasible combinatorial explosion reactions species biological networks. rule-based modeling frameworks provide exactly represent networks containing combinatorial complexity generalizations gillespie’s direct method developed simulation engines rule-based modeling languages. here provide high-level description algorithms underlying simulation engines termed networkfree simulation algorithms applied systems biology research. also deﬁne generic rule-based modeling framework describe number technical details required adapting gillespie’s direct method network-free simulation. finally brieﬂy discuss potential avenues advancing network-free simulation role continue play modeling dynamical systems biology. living cell numerous biochemical species interact other forming complex reaction networks. cell functions largely determined dynamics networks. goals systems biology understand emergence phenotypes complex interactions present reaction networks. mathematical modeling simulation powerful tools studying biochemical reaction networks. interactions chemical species rigorously deﬁned simulated using diverse techniques representing nonlinear dynamical systems. exploratory analyses hypothesis testing performed eﬃciently computational setting. result computational systems biology thriving past decade become recognized ﬁeld within quantitative biology. traditionally reaction networks modeled systems ordinary diﬀerential equations solved numerical integration algorithms. models typically constructed basis mass action kinetics. many cases approach appropriate successful however odes describe well-mixed concentrations chemical species inappropriate context cell chemical species present copy numbers. typical eukaryotic cell small volume order picoliters enclosed chemical species ﬁnite populations. consequently intrinsic noise ﬁnite discrete nature reactants could important factor consider studying dynamics intracellular reaction networks. stochastic discrete-state models provide sensible solution describe fundamentally stochastic biochemical reactions ﬁnite discrete reactants. among them continuoustime markov chains become standard represent simulate biochemical reaction networks. formally joint probability distribution ctmc described chemical master equation except special cases impossible derive full analytical solution eﬃcient numerical techniques must employed solve cmes. ways numerically solve ﬁrst directly integrate approximate cmes second various continuous-time monte carlo techniques generate sample paths random processes sample paths compute statistical quantities interests review focus second approach. using monte carlo approaches sample trajectories dynamical systems traced back late alamos enrico fermi robert richtmyer nicolas metropolis stanislaw ulam proposed independent random sampling idea solve problems kinetic theory dynamical interpretation clearly given proposal soon evolved famous metropolis algorithm capture time dependence focused instead equilibrium distribution thermal system. several seminal papers generalized idea monte carlo sampling dynamical processes continuous time soon technique applied various problems material science statistical physics ﬁrst rejection-free algorithm n-fold algorithm proposed bortz kalos lebowitz algorithm advanced time function possible transition events take place speciﬁc sample path. soon gillespie introduced rejection-free kinetic monte carlo methods study chemical reaction networks method became standard simulate networks often termed gillespie’s algorithm stochastic simulation algorithm ever since gillespie’s paper many proposals improve performance introducing novel data structures indexed priority queues constructing implementation takes advantage general structure reaction network sparse transition matrix however core algorithm remains intact. must fully speciﬁed. however biology commonly data pairwise interactions. complicating situation fact biochemical reaction networks often involve macromolecules multiple domains interacting molecules occupy number chemical states. example protein multiple residues subject phosphorylation dephosphorylation. plateletderived growth factor receptor intracellular domain containing amino acid residues phosphorylated. residue independently subject phosphorylation dephosphorylation single pdgfr molecule occupy possible biochemical states however pdgfr dimerizes upon binding ligand increasing biochemical state space possible states representing pdgfr system diﬀerential equations would thus require equations. similarly biochemical species form large complexes pairwise binding cases total number possible biochemical species exponentially increases number distinct proteins model vastness state space termed combinatorial complexity. rule-based modeling introduced systems biology address problem combinatorial complexity particularly models intracellular cell signaling networks core insight rules represent class reactions operate identical reaction centers. speciﬁcally rules molecular patterns common among multiple reactant molecules allowing succinct representation reactions precludes need enumerate possible reactions possible biochemical species rule-based modeling enables precise comprehensive tractable representation complex systems rule-based approach modeler represent previously described >-state pdgfr system mere rules assuming mutual independence rules involved ligand-receptor interaction rules receptor dimerization rules phosphorylation rules dephosphorylation rules complete formulation model written bionetgen language given appendix rule-based modeling systems biology initially developed automate construction biochemical reaction networks describing biological phenomena rules signiﬁcantly reduces work model construction however resulting network intractable size computational perspective even unbounded except number molecules present system natural generalization mitigate issue generate network on-the-ﬂy even number chemical species large on-the-ﬂy network generation assumes ﬁnite number species typically populated. therefore instead insisting calculating reaction rates possible reactions impossible generates local network reactions whose reactants present system. system evolves local network updated species introduced existing species removed completely. sometimes useful size boundary increase exponentially simulation becomes ineﬃcient case. instead molecule treated object simulation performed directly objects. network-free approach form agent-based simulation grounded physical chemical principles. various network-free software packages deployed throughout years correspond particular rule-based modeling framework algorithm implemented simulators modiﬁed form gillespie’s direct method modiﬁed algorithm diﬀers gillespie’s method careful bookkeeping state system required. throughout rest work provide brief review research applications existing implementations network-free simulation algorithms followed highlevel description gillespie’s direct method generalized rule-based modeling framework deﬁne generic rule-based modeling framework proceed describe basic implementation network-free simulation algorithm finally investigate number technical details need consideration implementing algorithm number software packages exist facilitate network-free simulation speciﬁc rule-based modeling languages. prominent rule-based modeling languages biomolecular simulation kappa language bionetgen language languages associated network-free simulation tools kasim kappa language nfsim bngl. kasim nfsim engines used situations model complexity necessitates network-free simulation. straightforward application network-free simulation seeks understand combinatorial complexity inﬂuences protein complexes assemble signal transduction. explicitly investigating combinatorial complexity precludes notion species reaction network enumeration network-free simulation path forward. deeds constructed rule-based model kappa language characterized protein-protein interaction network yeast. found existing knowledge yeast interaction network extreme combinatorial complexity. ultimately found simulations beginning initial state diverged rapidly sets complexes formed independent simulations exhibited overlap among unique complexes formed methodology applied pheromone signaling network yeast time revealing reliable signal transduction occur networks even assembled molecular complexes responsible signaling highly variable bodies work highlight facts complexity interaction networks ﬁrst clonal cells likely never state time second cells still reliably process extracellular information despite seemingly chaotic environment. intracellular signaling mammalian cells often involves oligomerization polymerization cell surface receptors receptors also recruit wide array downstream eﬀector proteins govern dynamics signal transduction. examples systems include growth factor signaling antigen recognition receptor signaling formation complex multimeric structures state space intracellular signaling models bounded number molecules simulation. using network-free simulation algorithms often approach available characterize system dynamics without undue simpliﬁcation model. work mammalian signaling referenced used models written bngl simulated bngl-compatible network-free simulator nfsim. another domain research involving biopolymers considers nucleic acids example nucleic acid research facilitated rule-based modeling examined phosphorylation states polymerase binds arbitrary number positions sequence case number possible biochemical states susceptible problem combinatorial complexity size molecule increases. second example focused base excision repair work model includes single molecule composed base pairs something would utterly intractable modeling framework. model incorporates number protein-protein interactions addition mechanistic representation base repair catalysis involving endonucleases polymerases ligases investigate certain molecules contribute speed eﬃcacy repair. finally rule-based modeling also applications outside biology. example explores usefulness applying rule-based modeling network-free simulation simulating labor markets particular highlights diﬀerences general agent-based modeling frameworks rule-based modeling type agent-based modeling based formal chemical kinetics notable diﬀerence existing agent-based modeling frameworks modeling labor markets rule-based modeling coupled network-free simulation absence spatial information network-free simulation although examples serve reminder general applicability rule-based modeling approaches network-free simulation algorithms focus primarily biological applications detailed description network-free simulation approach. algorithm generate exact sample paths rule-based model using network-free approach largely similar gillespie’s direct method seen fig. section focus high-level general description algorithm leaving technical details speciﬁc network-free simulations next sections. description includes jargon deﬁne rigorously section molecule explicit object tracked simulation engine rule composed patterns identify molecular moieties reactant molecules pattern used match reactant molecules simulation rule deﬁnes chemical transformation applied reactant molecule species deﬁnes class molecular complex waiting time next event calculated ﬁrst random number inversely proportional total rate rules system rule sampled smallest number cumulative rate rules greater product second random number total rate next event time rule sampled rule applied speciﬁc molecules among molecules qualify reactants rates updated based change system. step initialization. beginning simulation system conﬁguration deﬁned user. individual instances chemical species’ component molecules populated. step computation rule rates. step matches constructed patterns deﬁned rules explicit molecule instances simulation mixture. major diﬀerences rule-based models traditional models chemical transformations deﬁned terms patterns instead terms chemical species means many distinct chemical species participate reactant rule provided species matches reactant pattern rule. rate rule proportional number matches reactant patterns. step advancing time sampling rule speciﬁc reactants. rules’ rates computed time next rule application random number sampled exponential distribution whose rate parameter rules’ rates uniform random number interval system’s simulation time advanced rule applied system sampled probability proportional rate. done conditioning procedure steps identical gillespie’s direct method however since rules deﬁned patterns sampled rule specify molecule instances modiﬁed transformation deﬁned rule. simulator therefore samples molecules uniform probability list matches selected rule’s reactant patterns. step updating system’s conﬁguration. rule applied matches rule patterns molecules simulation mixture updated. increase simulation eﬃciency rules’ rates updated incrementally avoid recalculating matches. rules’ rates updated simulation continues step stopping condition met. provide detailed discussion step implemented section although description similar gillespie’s original direct method interfacing algorithm particular rule-based modeling framework requires careful consideration pattern-matching aﬀects rule’s rate. discuss number relevant issues arise building network-free algorithm sections following sections consider number technical details required implementing network-free simulation algorithm. ﬁrst must deﬁne objects involved simulation. diﬀerent rule-based modeling frameworks distinct nomenclature similar sometimes identical constructs. additionally many descriptions rule-based modeling approaches contain jargon easily confuse readers without relevant domain-speciﬁc knowledge. here provide intuitive suﬃciently precise deﬁnitions objects required construct network-free simulation algorithm independent speciﬁc rule-based most objects rule-based modeling represented visually graphs. rules become transformations graphs much jargon relating rule-based modeling origin graph theory. occasionally mention terms rely them. figure nomenclature rule-based modeling. molecule types archetypes individual objects simulation. molecule type name list sites. sites contain information binding state occupy state possible internal states. molecules ordered based degree speciﬁcation. note ordering assumes information present less speciﬁc molecules preserved speciﬁc molecules. molecule speciﬁed sites. partially speciﬁed molecule includes information binding site state full speciﬁcation state every site explicit four rules deﬁned association/dissociation molecules phosphorylation bound dephosphorylation rule consists reactant patterns transformation deﬁned product patterns rate conditions inﬂuence rule. typically reactants written left-hand side rule products written right hand side. however note since ﬁrst rule reversible right-hand side serves reactant pattern dissociation reaction left-hand side contains product patterns. atomic unit rule-based modeling applied biochemical reactions term molecule. molecule typically representation biological macromolecule protein molecule could also represent metabolite drug small molecule object interest model. rule-based modeling frameworks often require molecules ﬁrst deﬁned particular signature speciﬁc instances molecules must conform deﬁnition. signatures composed name acts label molecule’s type well predeﬁned list sites typically represent physical chemical attributes molecule sites deﬁned names predeﬁned list internal states represent property site sites also engage binding sites allowing association molecules thus representation higher order molecular structures. modiﬁcation sites’ states typically comprise majority rule applications simulation molecules used representing speciﬁc molecular moieties speciﬁc instances physical objects termed pattern molecules. sites pattern molecules completely absent site’s states partially speciﬁed capture necessary suﬃcient features required representing molecular moiety. course partial speciﬁcation site’s states relies syntax convey incomplete knowledge site’s states. example modeling language used write rule able express whether site bound binding partner unknown whether site’s internal state subset predeﬁned internal states. furthermore partial speciﬁcation ordering site’s absence partial speciﬁcation states pattern molecule less speciﬁc site speciﬁc complete speciﬁcation state notion ordering useful pattern-matching; less-speciﬁc object match more-speciﬁc completely-speciﬁed object provided information less-speciﬁc object preserved more-speciﬁc object. concept preservation information implicitly assumed later discussions partial speciﬁcation molecules pattern matching. similarly internal state site identical another site binding states sites explicitly bound explicitly free sites equivalent. sets sites similarly ordered according speciﬁcity equivalency. deﬁne complete molecules simply molecules molecules whose sites fully speciﬁed. full speciﬁcation requires sites either bound another site labeled bond unbound sites express explicit internal state assuming predeﬁned internal states occupy. complete molecules involved simulation modiﬁed rule applications. deﬁne larger objects composed complete molecules pattern molecues. object composed list complete molecules connect molecules list called species reﬂecting standard chemical nomenclature. note molecule bound sites molecule rules also deﬁne synthesis degradation molecules. labeled bond links sites meaning partners bond determined bond label. chemistry ecology term species refers class things retain convention refer speciﬁc instances species discussing individual object species. similarly deﬁne pattern list pattern molecules explicitly connected amongst finally term mixture simulation mixture refer pool complete molecules interacting simulation rule-based model network-free simulation engines track individual objects mixture opposed gillespie’s direct method tracks populations predeﬁned chemical species. note populations chemical species reconstructed list complete molecules deﬁnes mixture equivalent representation state system compared traditional purpose tracking population dynamics. avoid need priori generate reaction network rates calculated pattern matching. deﬁne match mapping pattern list molecules simulation mixture association depends criteria rule deﬁnes reactions involves previously deﬁned concepts rule composed list reactant patterns list product patterns together deﬁne transformation well rate law. reactant product patterns commonly known left-hand side right-hand side rule respectively. rate used calculate rule’s rate rates reactions implied rule. reaction implied rule inherits rate associated rule. generalization presented section diﬀers conventional ways. early examples general approach described seen rates dependent numbers matches instead population sizes species. another related distinction need sample molecules altered rule rule selected application. perhaps notable complicating diﬀerence methodology used store update state system. section provides high-level view data structures necessary accommodate diﬀerences reasonable manner. make claims regarding eﬃciency approach present means understand essential steps constructing network-free simulation algorithm. calculate initial rates rules model ﬁrst count number matches associated reactant pattern rule. simple store information have reactant pattern rule match list containing matches pattern molecules simulation mixture initialize match list pattern select arbitrary pattern molecule pattern refer anchoring pattern molecule. molecules initial mixture match anchoring pattern molecule anchoring molecule. recursively traverse species instance contains anchoring molecule determine unique matches arising choice anchoring molecule. matches forms initial match list pattern. rules elementary rate laws rate typically rule’s rate constant multiplied product numbers matches reactant patterns. simple example demonstrated rule information present fig. provided match list correctly maintained reactant pattern rule sampling step simulation straightforward rule sampled according method described step section selection rule necessary sample molecules modiﬁed transformation deﬁned rule. make choice match pattern rule sampled uniform probability corresponding match lists rule applied reactant molecules mixture correspond selected match. reaction event occurs state system must updated appropriately transformation changes site’s internal state state must updated molecule transformation includes addition removal bonds molecules involved must pointers binding partners updated accordingly. finally computationally expensive step update match lists. brute force approach check reactant patterns rules determine match lists aﬀected transformation applied. reaction event ﬁrst phase update process termed negative update phase consider molecules altered removed reaction event. phase traverse species instances containing molecules involved reaction rule application remove matches involving species instances match lists. second phase termed positive update phase consider newly created species instances formed reaction event. similar negative update phase species instances must fully traversed determine rules’ patterns need updated. matches added appropriate match lists. negative positive update phases match lists fully updated changes match lists used eﬃciently update rule rates. rate updates eﬃcient current rates modiﬁed accordance match list changes opposed novo rate calculation number issues arise result using rules pattern matching algorithm instead traditional ssa’s species’ populations reactions. here discuss prominent issues relevant accurate consistent calculation rule rates. cases symmetry among rule’s reactant patterns must take care correctly count number reactions occur. gillespie’s original notation number ways reaction occur computed populations chemical species involved reactants reaction. product reaction’s rate constant reaction’s rate. proposed method tracking matches must similarly count number distinct match combinations presence symmetry figure schematic network-free simulation algorithm. point simulation mixture stored memory match list pattern. note refers rule pattern rule. rules considered presented fig. rates rule calculated based rule’s rate match lists. simulation step rule chosen probability given rate relative overall rate rules. match chosen match list reactant pattern rule. simulation mixture updated according transformation deﬁned rule. species highlighted green result transformation panel match lists updated; modiﬁed molecule matches become invalid removed matches added appropriate match lists. match lists asterisk modiﬁed initial system state panel patterns deﬁned multiple matches arise simple permutation molecules involved match. example pattern involve identical pattern molecules bound identically named sites. case pattern match molecules once. fig. example shown simple dimer dissociation reaction. single dimer exists simulation mixture reactant pattern matches dimer ﬁrst pattern molecule matches molecule second pattern molecule matches molecule permuting molecules mixture second match reactant pattern dimer correctly calculating rule’s rate requires dividing rate number molecule permutations pattern preserve bond connectivity. divisor similarly corresponds number ways occurrence pattern species instance matched pattern symmetry pattern. rate calculation assumes speciﬁc convention semantics framework rule’s rate proportional number distinct reactions occur simply number matches. result choice convention pathological cases requiring explicit accommodation either simulation engine rule interpreter arise dissociation reactions asymmetric patterns match symmetric molecules pattern identical sites transformation deﬁned rule apply equally. termed reaction path degeneracy referring multiple equivalent ways reaction occur respect particular biochemical species. calculate rule rates rate constant refers reaction applied individual site number matches pattern’s match list multiplied number equivalent sites pattern competent modiﬁed transformation deﬁned rule multiplicative factor used adjust rate cases reaction path degeneracy also termed statistical factor. rule application process random site selected undergo transformation deﬁned rule uniform probability. figure symmetry reaction path degeneracy inﬂuence rule rate calcuation. symmetry pattern results multiple matches pattern particular molecules. correctly computing rate rule requires rate divided number symmetries present rule’s patterns. rules pattern multiple sites pattern molecules target transformation deﬁned rule reaction path degeneracy. seen simulation mixture illustrated bottom panel four possible binding events implied rule illustrated panel. correctly calculating rate rule requires multiplying match-based rate number possible reaction paths present among rule’s patterns also accommodating symmetries eﬀects necessary note reaction path degeneracy often coincides presence pattern-preserving site permutations symmetry cases rate must adjusted described section regardless framework’s chosen convention user must aware matching procedure inﬂuence rule’s rate correctly specify rate constants rate laws associated rules additional consideration molecularity rules. species composed molecule exist simulation mixture possible multiple patterns single rule match species instance. example suppose bond formation rule stating pattern molecule free site bind pattern molecule free site mixture contains trimeric complex molecules satisfy patterns’ constraints also bound molecule sites unspeciﬁed bond formation rule rule sampled algorithm might randomly choose matches corresponding molecules members trimeric complex. rule states bind forming cyclic structure although obvious rule’s reactant pattern. furthermore rate cyclization equivalent rate bimolecular association distinction made intermolecular intramolecular bond formation. distinguish unimolecular bimolecular reactions simulator must perform check conﬁrm matches bimolecular rule members distinct species instances members species instance. done traversing matched molecules’ species instances done updating system reaction event; task also accomplished tracking species instances unique identiﬁers rules include negative application conditions conditions especially relevant considering molecularity rules previous section sometimes possible ignore molecularity constraints determination matches patterns molecules consider rule speciﬁcally binding rule. regardless sequence number reaction events mixture initially composed monomers know patterns ﬁrst rule match monomeric molecules without additional enforced constraint transformation deﬁned rule bimolecular molecularity need checked rule’s application local meaning information outside molecules involved patterns’ matches required correctly sample matches apply rules update system strongly contrasting phenomenon exists allowing patterns include implicit bonds meaning rule-based modeling framework enforce connectivity molecules without specifying molecules connected. rule contains implicit bonds prediction rule rates update cannot done application rule speciﬁc species instance. accommodate presence implicit bonds description update scheme requiring species checked rule patterns matches. however rules model involve implicit bonds eﬃcient updating schemes realized. example structure computed directly rules relates application rule increase decrease rate another rule similar dependency graph traditional implementations special case models molecularity rules need checked system even updated without need traverse species instances involved particular reaction previously described problem constraining molecularity occurrences rates overestimated choices matches lead invalid reactions correct overestimates network-free simulation approaches allow null events. sampled molecules fail satisfy molecularity constraints sampled rule potential reaction event rejected time updated algorithm proceeds next iteration identical system conﬁguration time update without corresponding system update corrects overestimated rate; null event uses excess rate resulting invalid combination sampled matches. figure null events arising molecularity constraints. selecting match corresponding magenta arrows would fail satisfy molecularity resulting null event whereas selecting match corresponding blue arrows satisfy molecularity constraint rule. example rule mixture half potential reaction events would null events making ineﬃcient simulation. type null event become serious computational ineﬃciency models tend form large aggregates. consider bimolecular association rule. molecules system part same large aggregate possible majority iterations algorithm choose matches within species instance. however rule requires intermolecular bond form yielding correspondingly large number null events. alternative implementations realized avoid issues related type null event arise sampling matches match list. consider homodimerization rule whose patterns identical. upon sampling rule match ﬁrst pattern possible match sampled second pattern. matches overlap results null event termed clash time similarly updated system remains example fig. shows dimerization rule. case reactant patterns brieﬂy mentioned section possibility pathological cases rate calculations dissociation rules. occurs pattern pattern-preserving site permutations matches molecules multiple times stems convention rule’s rate proportional number distinct reactions occur opposed number matches pattern mixture. pathologies occur rule’s rate proportional number matches however assuming number-of-matches convention detracts physical meaning rule’s rate constant choice convention follow matter design; important point user understand convention avoid writing rules unexpected consequences. presented framework cases must distinctly considered. possible approach would match bonds instead molecules dissociation rules. would involve initial check rule determine whether pathology arise. check would perform bidirectional site speciﬁcity check connected pattern molecules whose bond would broken rule. patterns satisfy check produce multiple molecular matches molecules mixture. upon identiﬁcation patterns appropriate data structures track bond matches instead molecule matches. rule-based modeling frameworks individual molecules allowed identical sites. cases involving molecules identical sites care must taken correctly calculate rule rates explicitly discuss speciﬁcation simulation engine. consider rule mixture visualized fig. algorithm generates possible matches pattern sites single molecule mixture would matches however prescribed rate constant refers rate site molecule dephosphorylated rule’s rate would possible solution would introduce additional matching procedure distinguishes sites pattern pattern molecule based sites participate transformation deﬁned rule. sites modiﬁed transformation deﬁned rule would primary matching sites sites provide context unmodiﬁed reaction would contribute additional matches course modeler intends molecule dephosphorylated proportional number matches figure certain pathological behaviors arise language conventions. dimer dissociation example pattern matches potential reactant twice another potential reactant once. dissociation rate constants refer rate single bond breaking inconsistencies rate calculation arise asymmetric patterns match symmetric molecules. dephosphorylation presence multiple sites. rate rule depends interpretation. site dephosphorylated independently rate kcat constraint least unbound site hierarchical matching scheme needs implemented curves dimer dissociation resulting asymmetric patterns symmetric patterns applied system symmetric species simulator automatically adjusts pattern symmetry discrepancy rate calculation observed distinct dissociation curves compared paradigm rate constants applied number matches directly rules would require speciﬁc language features sort annotation simulation engine correctly interprets rule’s rate calculated presence identical sites. general care must taken designing network-free simulation algorithms speciﬁc modeling languages. features conventions present modeling language described section result language-speciﬁc behaviors. especially evident attempting translate model diﬀerent rule-based modeling language documentation pathological cases well semantics rule-based modeling language essential accurate consistent modeling simulation. network-free simulation around decade continued dynamical systems biology research strong evidence favor utility methodology. provide foundation developing network-free kinetic monte carlo simulation engine rule-based models. beyond accessible high-level description gillespie’s direct method generalized rule-based models proceeded deﬁne basic framework document number nontrivial implementation details required constructing network-free simulation engine. approach covers wide range cases explicit implementation general requires extension accommodate edge cases described sections perhaps others well. title states network-free methodology described generalization gillespie’s direct method. however impact broader simply approach capture stochastic ﬂuctuations biochemical systems small population sizes. rule-based modeling coupled network-free simulation enables modelers deﬁne classes reactions based limited interaction information precluding need enumerate species reactions particular interaction network. indeed generating entire reaction network often impossible computationally feasible. explicitly accommodating combinatorial complexity enables detailed precise investigation system dynamics without unjustiﬁed simpliﬁcation models accommodating complexity especially relevant characterizing systems involving biopolymers systems undergo phase transition state clearly studies others network-free simulation engines concerned stochastic eﬀects ability model simulate biochemical systems contain high degree combinatorial complexity network-free simulation algorithms provide available general framework exactly simulating dynamics systems. frequent existing software suites network-free simulation capabilities discovery software bugs ineﬃciencies well desire features. indeed ﬁeld network-free simulation algorithm development mature ﬁeld. ongoing work seeks improve performance network-free simulation much work upon considering developmental trajectory traditional based gillespie’s direct method anticipate increasing applications rule-based modeling network-free simulation drive innovation network-free example innovation complexities discussed section eliminated cost additional computational overhead alternative sampling implementation. driven need simulate systems result high proportion null events species instances could explicitly tracked throughout simulation matches would associations patterns unique sets molecules outlined comes signiﬁcant computational cost demonstrably useful models produce gels large polymers eliminates need null events useful extension existing network-free simulation packages might implement adaptive algorithm selection determines on-the-ﬂy whether rejection rejection-free methods appropriate simulating particular model’s dynamics another straightforward extension network-free simulation becoming increasingly relevant consider spatial well temporal dynamics available computing power increases performing increasingly complex spatial simulations become feasible. integrating spatial simulation engines network-free algorithms already beginning emerge ultimately expect networkfree simulation play increasingly prominent role modeling complex biological dynamics. thank faeder providing helpful feedback manuscript. work supported national institute general medical sciences national cancer institute national institutes health grants rca; u.s. department energy contract de-ac-na; joint design advanced computing solutions cancer program established nci/nih. additionally gratefully acknowledge support center nonlinear studies funded laboratory directed research development program alamos national laboratory. pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr pdgfr code model platelet-derived growth factor receptor activation written bionetgen language. pdgfr dimerize least pdgfr bound ligand. dimerized pdgfr undergo autophosphorylation distinct tyrosine residues phosphorylation residue occurs independently. here rate", "year": "2018"}