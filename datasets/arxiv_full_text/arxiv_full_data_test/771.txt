{"title": "On the inherent competition between valid and spurious inductive  inferences in Boolean data", "tag": "q-bio", "abstract": " Inductive inference is the process of extracting general rules from specific observations. This problem also arises in the analysis of biological networks, such as genetic regulatory networks, where the interactions are complex and the observations are incomplete. A typical task in these problems is to extract general interaction rules as combinations of Boolean covariates, that explain a measured response variable. The inductive inference process can be considered as an incompletely specified Boolean function synthesis problem. This incompleteness of the problem will also generate spurious inferences, which are a serious threat to valid inductive inference rules. Using random Boolean data as a null model, here we attempt to measure the competition between valid and spurious inductive inference rules from a given data set. We formulate two greedy search algorithms, which synthesize a given Boolean response variable in a sparse disjunct normal form, and respectively a sparse generalized algebraic normal form of the variables from the observation data, and we evaluate numerically their performance. ", "text": "inductive inference process extracting general rules speciﬁc observations. problem also arises analysis biological networks genetic regulatory networks interactions complex observations incomplete. typical task problems extract general interaction rules combinations boolean covariates explain measured response variable. inductive inference process considered incompletely speciﬁed boolean function synthesis problem. incompleteness problem also generate spurious inferences serious threat valid inductive inference rules. using random boolean data null model attempt measure competition valid spurious inductive inference rules given data set. formulate greedy search algorithms synthesize given boolean response variable sparse disjunct normal form respectively sparse generalized algebraic normal form variables observation data evaluate numerically performance. inductive inference frequently used method analysis biological networks explaining drug responses logic combinations perturbations. many analysis problems predictors targets modeled boolean variables characterized complex non-linear interactions. problems also typically conditioned since number observations much smaller number possible logic rules describing interactions variables. contrary deductive inferences true premises true inductive inferences inherently uncertain. thus logical inductive rules extracted complex interacting networks probable given incomplete data observations. nevertheless extraction inductive inference rules important logic interaction hypothesis formulation network reverse-engineering. relevant examples include identiﬁcation regulatory motifs drug active pathways gene networks estimated gene expression data association gene-gene interactions single nucleotide polymorphism genome-wide association studies combinatorial eﬀects cancer biology dynamic biological networks based responses drug perturbations. better understand problems consider typical example inferring logical rules explaining response variable function logic combination perturbations. problem boolean matrix containing logic perturbations speciﬁc samples boolean vector length corresponding measured response. task infer simplest logical rule explains given problem conditioned number speciﬁc samples typically much smaller number possible logic interactions among variables conditioning incompleteness problem also generate spurious inferences serious threat valid inductive inference rules. fact boolean variables deﬁne boolean functions. among functions functions satisfy constraints thus probability \"guessing\" \"spurious\" function exponentially decreases number constraints. using random boolean data null model attempt measure competition valid spurious inductive inference rules given data set. formulate greedy search algorithms synthesize given boolean response variable sparse disjunct normal form respectively sparse generalized algebraic normal form variables observation data evaluate numerically performance. inductive inference process considered incompletely speciﬁed boolean function synthesis problem. case given data response vector task simplest boolean function that obviously function incompletely speciﬁed matrix since number total possible combinations boolean variables. using boolean algebra shown boolean function represented using canonical expansion. however cdnf disjunct clause contains variables number disjuncts equal number observations obviously large expansion provide practical interpretation therefore interested ﬁnding expansion smallest number smallest disjuncts bio-medical complexity point view gives appropriate interpretation hard np-complete problem several heuristic algorithms formulated solve approximatively. important relaxation problem simplest k-dnf disjunction conjuctive clauses containing variables variable appear either complemented complemented note ganf also known literature generalized reed-muller normal form shown small number variables minimal grmnf expansion calculated eﬃciently using exact algorithm given ref. walsh transform approach given ref. however larger number variables straightforward algorithm ﬁnding minimal ganf except exhaustive search. here formulate greedy search algorithms attempt sparse k-dnf kganf expansions given response function therefore extract simple inductive inference rules combinations boolean covariates incomplete observations. thus goal k-dnf k-ganf expansions best approximate incomplete boolean function smallest number true coeﬃcients aii...ik respectively bii...ik order evaluate performance algorithms boolean data generated random bernoulli variables following distribution order formulate greedy algorithms consider conjunctive clauses containing variables. total number clauses grows fast therefore order limit number maintain required simplicity solutions consider cases given observation data }m×n response expand matrix larger matrix }m×q conjunctive clauses containing variables calculated observations matrix also natural exclude conjunctive clauses evaluate observations since obviously contribution ganf expansions. algorithm stops column could found minimize hamming distance. thus resulted inductive inference rule completely speciﬁed indexes clauses extracted matrix approximation written using linear matrix-vector multiplication sparse vector coeﬃcients aqj} corresponding selected clauses true rest false corresponds operator. containing response variable diﬀerent measurements. next step algorithm initializes variables dmin here array corresponding coeﬃcients k-dnf expansion falses initial approximation dmin maximum hamming distance initial number clauses included expansion. algorithm continues loop maximum clauses selected k-dnf expansion. step column minimizes hamming distance selected updated minimum value dmin increased unit variables updated dmin updated true respectively function returns approximation response variable coeﬃcients k-dnf expansion; dmin hamming distance number clauses included k-dnf expansion algorithm stops column could found minimize norm. ﬁnal approximation boolean response again resulted inductive inference rule completely speciﬁed indexes clauses selected matrix corresponding k-ganf expansion coeﬃcients bqj} true rest false replaced operator. detailed description method given algorithm function kganf takes input arrays containing clauses containing response variable diﬀerent measurements. next step algorithm initializes variables here array corresponding coeﬃcients k-ganf expansion initial residual dmin maximum possible norm initial number clauses included expansion. algorithm continues loop maximum clauses selected k-ganf expansion. step column minimizes norm selected dmin updated minimum value column already selected previous step decreased since operator applied second time data cancels previous application. column selected increased unit. values updated bq⊕true respectively algorithm stops norm residual becomes zero dmin column minimize could found function returns approximation response variable coeﬃcients k-ganf expansion; dmin norm residual number clauses included k-ganf expansion simulation collect probability exact synthesis hamming distance best approximation target maximum possible hamming distance. also collected number required clauses number variables matrix finally represent graphically average quantities respectively function m/n. simulation results shown figure algorithms synthesize sparse expansions high probabilities. synthesis probability exhibits transition function transition point also depends probability bernoulli process used generate boolean data expected synthesis probability increases decreases. synthesis probability deteriorates relatively fast number possible choices clauses expansion quadratically larger reﬂects also higher values transition point results dramatic since case number possible choices clauses much larger resulting much larger values transition point transition point corresponds synthesis probability also corresponds synthesis error response function obtained values transition points summarized table respectively table second numerical experiment consider recovery problem. exactly given matrix }m×q conjunctive clauses synthesize response function using sparse selection clauses randomly drawn therefore case response priori synthesized using clauses drawn task recover unknown clauses using k-dnf k-ganf algorithms. consider cases unknown clauses before average diﬀerent instances collect probability exact synthesis probability exact recovery here measures probability unknown clauses correctly recovered k-dnf k-ganf algorithms. results shown figure synthesis probability high values probability exact recovery substantially drops increasing number unknown clauses. means algorithms able synthesize relatively good response matches well given don’t include correct clauses. consequence fact matrix contain several \"equivalent\" clauses competing greedy selection mechanism used algorithms therefore lead \"spurious\" inferences. also correct recovery probability drops sharply small values expected since number constraints small small therefore probability \"spurious\" inferences increases. problem extracting logic inference rules incomplete boolean data observations frequently encountered analysis biological networks. conditioning incompleteness problem also generate spurious inferences serious threat valid inductive inference rules. using random boolean data null model made attempt measure competition valid spurious inductive inference rules given data set. exactly formulated greedy search algorithms synthesize given boolean response variable sparse respectively sparse ganf variables observation data. also shown numerically algorithms synthesize sparse expansions high probabilities synthesis probability exhibits transition function number observations transition point depending probability bernoulli process used generate boolean data. however greedy algorithms cannot recover correctly priori synthesized response inherent competition mechanism existing \"equivalent\" valid spurious clauses.", "year": "2018"}