{"title": "On the statistical inconsistency of Maximum Parsimony for $k$-tuple-site  data", "tag": "q-bio", "abstract": " One of the main aims of phylogenetics is to reconstruct the \\enquote{Tree of Life}. In this respect, different methods and criteria are used to analyze DNA sequences of different species and to compare them in order to derive the evolutionary relationships of these species. Maximum Parsimony is one such criterion for tree reconstruction and, it is the one which we will use in this paper. However, it is well-known that tree reconstruction methods can lead to wrong relationship estimates. One typical problem of Maximum Parsimony is long branch attraction, which can lead to statistical inconsistency. In this work, we will consider a blockwise approach to alignment analysis, namely so-called $k$-tuple analyses. For four taxa it has already been shown that $k$-tuple-based analyses are statistically inconsistent if and only if the standard character-based (site-based) analyses are statistically inconsistent. So, in the four-taxon case, going from individual sites to $k$-tuples does not lead to any improvement. However, real biological analyses often consider more than only four taxa. Therefore, we analyze the case of five taxa for $2$- and $3$-tuple-site data and consider alphabets with two and four elements. We show that the equivalence of single-site data and $k$-tuple-site data then no longer holds. Even so, we can show that Maximum Parsimony is statistically inconsistent for $k$-tuple site data and five taxa. ", "text": "abstract main aims phylogenetics reconstruct tree life. respect diﬀerent methods criteria used analyze sequences diﬀerent species compare order derive evolutionary relationships species. maximum parsimony criterion tree reconstruction paper. however well-known tree reconstruction methods lead wrong relationship estimates. typical problem maximum parsimony long branch attraction lead statistical inconsistency. work consider blockwise approach alignment analysis namely so-called k-tuple analyses. four taxa already shown ktuple-based analyses statistically inconsistent standard character-based analyses statistically inconsistent. four-taxon case going individual sites k-tuples lead improvement. however real biological analyses often consider four taxa. therefore analyze case taxa -tuple-site data consider alphabets four elements. show equivalence single-site data k-tuple-site data longer holds. even show maximum parsimony statistically inconsistent ktuple site data taxa. reconstruction evolutionary relationships today’s living species main phylogenetics. order reconstruct relationships mathematical models methods used based certain optimization criteria. maximum parsimony optimization criterion assume speciﬁc underlying substitution model refer reader thorough discussion models phylogenetics implications parsimony). aims minimizing number evolutionary changes needed explain evolution group species thus intuitive criterion evolutionary meaning. however suﬀers well-known problem statistical inconsistency so-called felsenstein zone. explain problem easy example original felsenstein paper assume tree figure shows evolutionary relationships species note long edges three short edges representing high probabilities evolutionary change respectively. then choices consider alignment evolves reconstruct evolutionary tree alignment favor incorrect tree. precise erroneously group long edges together favor tree depicted figure problem called long branch attraction felsenstein zone. tree type fail correctly reconstruct tree even data considered. thus estimation consistent tree reconstruction method called consistent converges true tree data considered. discuss detail later thus long branch attraction taken account using tree reconstruction particular theoretical problem also occurs frequently real data even though exist methods criteria tree reconstruction still frequently used therefore reconstruction statistical inconsistency methods based criterion particular interest. mike steel david penny instance considered k-tuple-site data instead single-site data reconstruction usually applied single-site data i.e. column given alignment considered individually. using k-tuple-site-data instead applied k-tuples sites k-tuple consists successive sites characters however important mention k-tuples considered steel penny overlapping. note considering k-tuples sites instead single fig. long branches three short branches representing high probabilities evolutionary change respectively. using reconstruct evolutionary tree alignment evolved incorrectly favor tree group long branches together. please note edge lengths reconstructs tree shape edge lengths. sites changes underlying alphabet alphabet consists k-tuples built elements original alphabet. mike steel david penny proved four sequences k-tuplesite data statistically inconsistent single-site data statistically inconsistent regarded equivalence statistical inconsistency k-tuple-site single-site data special case four sequences. furthermore using results mike steel david penny conclude statistically inconsistent k-tuple-site data four sequences since single-site data long known statistically inconsistent result question arises equivalence also holds sequences. present manuscript therefore investigate alignments sequences. first prove statistical inconsistency -tuple-site data alphabets four elements. alphabets particular importance biology alphabet alphabet four elements purine pyrimidine alphabet elements. moreover show statistical inconsistency -tuple site data alphabets four elements. note consider tuple-site data alphabet data induce so-called triplets also known codons. codon speciﬁes amino acid therefore consideration three successive nucleotides -tuple particular interest biology. note exist certain models describe codon sequence evolution general based assumption codon mutate position step e.g. change codon codon would possible step change codon would possible. following however disregard codon models suppose change codon another codon possible step costs unit regardless whether three positions change. motivated fact generalize approach presented changes tuples allowed too. moreover show section alternative model would assign higher cost change easily traced back single-site case therefore less mathematical interest. showing k-tuple-site data statistically inconsistent show exists equivalence inconsistency single-site data statistical inconsistency k-tuple-site data sequences. particular give representative examples edge lengths statistically consistent k-tuple-site data statistically inconsistent single-site data vice versa. furthermore also compare results -tuple-tuple-site data. here also give representative examples statistically consistent -tuple-site data statistically inconsistent -tuple-site data vice versa. scenarios additional explicit examples inconsistency also compare sizes inconsistency zones area consistent gets slightly larger longer tuples become. lastly consider example statistical inconsistency single-site data implies statistical inconsistency -tuple-site data. start prove statements need state deﬁnitions recall known results. recall phylogenetic x-tree tree vertex edge every leaf bijectively labeled element taxon inner vertices degree least leaves degree inner vertices degree exactly phylogenetic x-tree called binary. rooted phylogenetic x-tree phylogenetic x-tree inner vertex root note literature root node often required vertex degree inner vertices still required degree least however present manuscript require root degree- vertex. tree speciﬁed root node often referred unrooted tree. fig. parsimony scores characters aaacc accaa tuple tree here already depicted parsimonious extension character calculate changing number. dashed line shows change/substitution edge. counting changes tree. throughout work mean unrooted binary phylogenetic x-trees refer trees speak rooted trees whenever consider rooted binary phylogenetic x-trees. furthermore recall character function character states character states sometimes also called alphabet. typical character states alphabet extension character phylogenetic tree call |{{u changing number thus changing number counts number edges labeled diﬀerently alignment ff...fk sequence characters parsimony score alignment f...fk tree deﬁned minimum taken phylogenetic x-trees. please note trees necessarily unique. consider example calculation parsimony score character tree. figure calculate parsimony score characters aaacc accaa tree already labeled inner vertices extension minimizes changing number. easily note order calculate parsimony score character tree according deﬁnition possible extensions considered. however exist eﬃcient algorithms calculate parsimony score character tree e.g. fitch-algorithm binary trees fitch-hartigan-algorithm general trees. furthermore character tuple employs distinct states parsimony score least thus character immediately clear extension depicted figure optimal. veriﬁed exists extension requiring fewer changes e.g. enumerating possible extensions using fitch algorithm characters. character called non-informative holds phylogenetic x-trees otherwise character called informative. roughly speaking means informative character distinguishes diﬀerent trees whereas non-informative preference. known character informative least states occur k-tuple simply sequence successive characters alignment. consider k-tuples characters also speak ktuple-site data whereas speak single-site data consider individual characters. example transformation single-site data -tuple-site data seen figure please note -tuple character. need deﬁne calculate parsimony score k-tuple. consider k-tuple characters matrix columns. rows matrix used character states character associated k-tuple deﬁned function parsimony score character associated k-tuple calculated according deﬁnition note however diﬀerent calculation parsimony score alignment consider character individually respective parsimony scores. consider characters aaacc accaa shown figure example. parsimony scores characters tree however parsimony score tuple tree figure please also note alphabet elements contain elements. consider example alphabet character states i.e. corresponding alphabet -tuple-site data diﬀerent character states. number elements alphabet k-tuple-site data grows exponentially e.g. alphabet elements already next need model characters evolve tree therefore introduce fully symmetric r-state model also known nr-model. consider phylogenetic x-tree arbitrarily rooted inner vertices. fig. parsimony score tuple characters aaacc accaa tree here already depicted parsimonious extension calculate changing number. dashed line shows change/substitution respective edge. parsimony score nr-model root assigned state chosen uniformly random alphabet consideration. state evolves along tree follows. consider edge tree closer root edge deﬁne thus probability change state state edge probabilities equal combinations distinct diﬀerent edge. denote probability substitution occurs edge i.e. nr-model note n-model also often referred jukes-cantor-model biology tree substitution probabilities nr-model declare simply vector contains substitution probabilities assigned edges nr-model number leaves moreover characters independent evolve nr-model probabilities refer model i.i.d. nr-model. calculate probability character evolving tree follows first i.i.d. nr-model assumes uniform root state distribution i.e. character states equally likely root. leads factor factor multiplied possible extensions character weighted respective probabilities. leads example consider character aaabb. calculate probability evolving i.i.d. n-model alphabet tree depicted figure edges labeled associated substitution probabilities. proceed follows first choose root state probability then take account possible extensions i.e. ways assigning states inner vertices example consider extension assigned labeled calculate probability proven induced probability distribution characters aﬀected choice root position property referred time-reversibility nr-model. recall assume characters independent identically distributed. implies probability alignment f...fk k-tuple evolves tree simply calculated product also recall denotes parsimony score k-tuple tree based knowledge consider expected parsimony score k-tuple characters phylogenetic x-tree necessarily generating tree fig. phylogenetic tree character aaabb edges labeled substitution probabilities nr-model arbitrarily choose marked inner vertex root inner vertices labeled return statistical inconsistency hinted introduction. tree reconstruction method called consistent probability reconstructing correct tree converges certainty sequence length tends inﬁnity. reconstructed tree considered correct matches generating tree position root since root generally cannot determined without additional assumptions already seen statistically inconsistent so-called felsenstein zone long edges incorrectly grouped together phenomenon known long branch attraction. following analyze applying k-tuples characters instead single characters inﬂuences statistical properties particular statistical inconsistency. note switching single-site data k-tuplesite data eﬀects. hand size alphabet increases moreover note combining certain types single characters also lose information. instance combining informative characters lead non-informative -tuple. seen figure ﬁrst characters informative character states occur characters. considering informative characters -tuple however non-informative character state occurs -tuple. hand certain combinations informative non-informative characters result informative tuple. again example figure third character informative whereas fourth character non-informative. -tuple characters informative. also easily seen k-tuple informative least character contained k-tuple informative. thus applied k-tuples characters lead diﬀerent results applied single characters. however least four sequences applied k-tuples characters statistically consistent consistent original single characters. know statistically inconsistent single-site data theorem implies also statistically inconsistent k-tuple-site data special case four sequences. result holds alphabets. however considers four sequences thus four species main motivation manuscript equivalence also holds four sequences nevertheless statistically inconsistent. result theorem holds four sequences want generalized turn attention taxa. remark motivation generalize results suppose changing k-tuple another k-tuple change regardless whether position k-tuple changes them. exactly approach might seem biologically counter-intuitive ﬁrst glance. fact example -tuple site data alphabet considered i.e. triplets codons codon models assume codons change position step. thus cost changing costs unit models would costs fact units positions change. include information many positions change order k-tuple another k-tuple would so-called weighted parsimony approach here could costs going k-tuple another k-tuple so-called hamming distance i.e. number positions diﬀerent other e.g. details weighted parsimony here easily shown using k-tuple-site data setting cost change k-tuple another k-tuple hamming distance reduces standard approach using single-site data already well understood. reason following steel penny assume change k-tuple another k-tuple unit costs. analyze whether statistically inconsistent k-tuple-site data. first consider -tuple-site data alphabets four elements. afterwards also consider -tuple-site data types alphabets. proof construct explicit example tree generates data inconsistent. consider tree taxa depicted figure contains long edges short edges assume generating tree characters evolving i.i.d. n-model. fig. phylogenetic tree -tuples aaabb abbbb edges labeled substitution probabilities inner vertices assigned states according extensions dashed line shows change/substitution edge. ﬁrst calculate expected parsimony scores trees i.e. case data generated analyzed terms -tuples using formula example consider -tuple consisting characters aaabb abbbb. figure leaves tree assigned states -tuple states inner vertices represent possible extension. note particular extension parsimonious requires changes. recall parsimonious extension example found fitch algorithm note however immediately clear example extension depicted parsimonious -tuple depicted employs three states turn implies parsimonious extension require least changes. thus parsimony score -tuple tree i.e. moreover require probability -tuple therefore calculate probabilities characters recall calculation probability already shown example calculation probability follows analogously. using independence sites assumption probability -tuple evolving tree used computer algebra system mathematica solve inequality note calculations plots presented following done mathematica. that instance exists parsimonious tree diﬀerent values expected parsimony score whereas expected trees expected parsimony score edges incident leaves grouped together. note edges long edges generating tree similar felsenstein scenario four sequences single characters observe phenomenon long branch attraction. particular reconstructs incorrect tree case shows statistical inconsistency -tuple-site data character states. shown statistical inconsistency -tuple site data presenting explicit example search values statistically inconsistent i.e. want analyze inconsistency zone. again assume tree generating tree characters evolve. values statistically inconsistent described following combinations expected parsimony score tree minimum expected parsimony scores trees. mathematica space possible choices separated parts using formula part contains combinations consistent part contains combinations inconsistent details calculation found appendix. note larger order statistically inconsistent again -tuple-site data statistically inconsistent long branch attraction. additionally integrate function separates parts calculate size parts. shaded part -tuple site data statistically inconsistent space part statistically consistent accumulates space white part contains combinations statistically consistent. theorem shows statistically inconsistent -tuple-site data even four leaves. inconsistency long known single-site data. however want compare -tuple-site single-site data. therefore also separate combinations parts part contains combinations applied single-site data statistically consistent part contains combinations inconsistent. compare curves separate space single-site data -tuplesite data respectively. curves seen figure small curve single-site data lies slightly underneath curve -tuple-site data intersect switch roles. shows exist combinations -tuple-site data consistent singlesite data already inconsistent also vice versa. curve single-site data lies curve -tuple-site data. here statistically consistent -tuple-site data statistically inconsistent single-site data. example case given fig. statistical inconsistency -tuple-site single-site data character states taxa. dashed curve describes separation combinations statistically inconsistent consistent single-site data solid curve describes separation -tuple-site data. vertical line shows curves intersect. relationship changes. example -tuple-site data statistically inconsistent whereas single-site data statistically consistent. leads following observation. note observation reﬂects counterexample equivalence between statistical inconsistency single-site data k-tuple-site data four sequences established minimal following sense theorem holds arbitrary arbitrary seen example longer holds equivalence already fails number taxa increased even states considered. note however even though exists equivalence between statistical inconsistency single-site -tuple-site data sequences still close relationship types data since region diﬀer small. additionally also compare size areas statistically consistent -tuple-site data inconsistent single-site data vice versa. size area statistically consistent -tuplesite data statistically inconsistent single-site data size area reversed case ﬁrst area slightly larger second area areas small consistency zones almost coincide. previous section analyzed statistical inconsistency -tuple-site data character states. extend analysis four character states i.e. consider alphabets four elements like alphabet. furthermore analyze statistical inconsistency -tuple-site data four character states. following summarize results similar ones previous section. -tuple-site data four character states i.i.d. n-model. -tuple-site data character states i.i.d. n-model. -tuple-site data four character states i.i.d. n-model. proof proof theorem assume generating tree characters evolve. note still considering nr-model. order show inconsistent k-tuple site data show generating tree expected tree i.e. phylogenetic trees taxa. expected parsimony scores trees calculated according equation refrain explicitly listing here. however cases possible choices inequality holds results summarized table note combinations trees turned expected trees; expected parsimony scores well parsimony score generating tree also summarized table thus cases choices statistically inconsistent k-tuple-site data. therefore single-site data well k-tuple-site data separate space respectively possible combinations parts part contains combinations consistent part contains combinations inconsistent. results summarized figure cases k-tuple-site data four character states statistically inconsistent greater i.e. seems case long branch attraction. small observe curve single-site data curve -tuple-site data. small exist cases already statistically inconsistent single-site data still statistically consistent -tuple-site data. however stage curves intersect switch roles fig. statistical inconsistency k-tuple-site data single-site data respectively character states evolved tree dashed curve describes separation respectively combinations statistically inconsistent consistent single-site data. solid curve shows separation k-tuple-site data. vertical line shows curves intersect. note relationship statistical inconsistency -tuple-site data single-site data resembles relationship statistical inconsistency -tuple-site data single-site data. therefore also analyze relationship -tuple-site data -tuple-site data. fig. statistical inconsistency -tuple-site data -tuple-site data four character states taxa. dashed curve describes separation combinations statistically inconsistent consistent -tuple-site data solid curve describes separation -tuple-site data. vertical line shows curves intersect. small curve -tuple-site data curve -tuple-site data. curves intersect change roles. sizes areas statistically consistent case inconsistent case shown table again area consistent -tuple-site data inconsistent -tuple-site data always larger area reversed case. recall already observed trend preceding analyses. again equivalence statistical inconsistency -tuple-site data -tuple site data. ﬁnish section summary results. tables contain combinations consistency inconsistency single characters -tuple-site data -tuple-site data four character states respectively. representative example choice given unless exists combination note neither states four states exists choice inconsistent single-site data -tuple-site data consistent -tuple-site data. table cases combinations consistency inconsistency single-site data -tuple-site data -tuple-site data character states. additionally representative example choice given unless exists combination lastly table summarizes information size area statistically inconsistent proportion size notice four character states size area decreasing increasing i.e. longer tuples considered. consider detail section table cases combinations consistency inconsistency single-site data -tuple-site data -tuple-site data four character states. additionally representative example choice given unless exists combination previous sections used tree generating tree characters evolved show statistical inconsistency k-tuple site data sequences diﬀerent numbers character states. note chosen resembles tree four sequences well studied phenomenon long branch attraction problem statistical inconsistency long known following analyze impact branch lengths tree particular position long short branches statistical inconsistency possible combinations parts part contains possible combinations consistent part contains combinations inconsistent. -tuple site data four character states compare spaces single-site data. curves plotted figure curve describes separation respectively combinations statistically inconsistent consistent single-site data. solid curve shows separation k-tuple-site data. cally inconsistent single-site data also statistically inconsistent -tuple-site data. regard might inconsistency single-site data implies inconsistency -tuple-site data. furthermore compare statistical consistency -tuple-site data four character states. resulting curves depicted figure describes separation respectively combinations statistically inconsistent consistent -tuple-site data. solid curve shows separation -tuple-site data. here curve -tuple-site data always curve -tuple-site data. mathematica veriﬁed exists combination consistent -tuple-site data inconsistent -tuple-site data. finally calculate sizes areas statistically inconsistent single -tuple -tuple-site data four character states similar previous analyses based tree relative size areas statistically inconsistent decreases increasing i.e. increasing tuple length. note however comparing results trees percentage area statistically inconsistent tree cases higher corresponding percentage tree hand statistical inconsistency single-site data implies statistical inconsistency -tuple site data hand size area statistically inconsistent proportion size higher tree tree regardless tuple length number character states possibly fact total distance leaves pending long branches namely whereas case distances leaves long branches impact character probabilities therefore might cause inhibition parsimony group leaves together. paper analyzed statistical consistency -tuplesite data -tuple-site data sequences alphabets four elements respectively. giving representative examples could show statistically inconsistent cases. assume statistical inconsistency persist consider larger alphabets longer tuples. particular conjecture choice exists number sequences statistically inconsistent k-tuple-site data sequences. idea behind conjecture assume results sequences extend larger trees. reason construct larger trees using tree basis adding taxa e.g. replacing leaf rooted binary subtree leaves edges length construction preserve main structure tree assume also statistically inconsistent k-tuple-site data case. assumption holds general trees long edges wrongly grouped together long branch attraction. however always expected trees cases statistically inconsistent. instance -tuple-site data character states i.i.d. n-model) setting yields trees expected trees. note long branches closer tree directly grouped together still regarded weak case long branch attraction might also interesting investigate case future research. case tree however tree always expected tree seen classical case long branch attraction long branches grouped together apart statistical inconsisteny itself could show equivalence statistical inconsistency single-site data k-tuple-site data established four sequences longer holds sequences. contrary using tree generating tree cases statistically inconsistent single-site data statistically consistent -tuple-site data -tuple-site data vice versa. also cases statistically inconsistent -tuple-site data statistically consistent -tuple-site data vice versa. long edges closer other could also case inconsistency single-site data leads statistical inconsistency -tuple-site data also leads statistical inconsistency -tuple-site data. case exist examples statistically inconsistent single-site data statistically consistent -tuple-site data. general diﬀerence single-site- -tuple-site -tuple-site data relatively small. could however observe examples size area statistically consistent ˜k-tuple-site data statistically inconsistent ˆk-tuple-site data always greater size area statistically inconsistent ˜k-tuplesite data statistically consistent ˆk-tuple-site data. -tuple-site data character states even found tree branch lengths tuple-site data always better single-site data. also observed size area statistically inconsistent proportion size decreases increasing i.e. longer tuples considered conjecture size area converges wrong tree converge zero growing grows leads loss information k-tuples become non-informative. comparing characters taxa -tuples already observe trend characters -tuples -tuples non-informative extreme case characters non-informative could considered statistically consistent sense thus conclude applying k-tuple-site data instead singlesite data extent help reduce impact statistical inconsistency cannot avoid unless weak deﬁnition statistical consistency. however considerations mainly theoretical nature general analyze whether results could generalized larger trees could show case equivalance singlesite data k-tuple-site data true k-tuple inconsistency. practical implications results e.g. biological data analyses remain open problem investigated future research. ﬁrst second author thank university greifswald bogislaw studentship landesgraduiertenf¨orderung studentship respectively work conducted. moreover wish thank anonymous reviewers helpful suggestions earlier version manuscript.", "year": "2017"}