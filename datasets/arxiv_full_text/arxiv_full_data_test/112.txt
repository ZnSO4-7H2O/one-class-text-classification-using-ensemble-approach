{"title": "SimInf: An R package for Data-driven Stochastic Disease Spread  Simulations", "tag": "q-bio", "abstract": " We present the R package SimInf which provides an efficient and very flexible framework to conduct data-driven epidemiological modeling in realistic large scale disease spread simulations. The framework integrates infection dynamics in subpopulations as continuous-time Markov chains using the Gillespie stochastic simulation algorithm and incorporates available data such as births, deaths and movements as scheduled events at predefined time-points. Using C code for the numerical solvers and OpenMP to divide work over multiple processors ensures high performance when simulating a sample outcome. One of our design goal was to make SimInf extendable and enable usage of the numerical solvers from other R extension packages in order to facilitate complex epidemiological research. In this paper, we provide a technical description of the framework and demonstrate its use on some basic examples. We also discuss how to specify and extend the framework with user-defined models. ", "text": "present package siminf provides eﬃcient ﬂexible framework conduct data-driven epidemiological modeling realistic large scale disease spread simulations. framework integrates infection dynamics subpopulations continuous-time markov chains using gillespie stochastic simulation algorithm incorporates available data births deaths movements scheduled events predeﬁned time-points. using code numerical solvers openmp divide work multiple processors ensures high performance simulating sample outcome. design goal make siminf extendable enable usage numerical solvers extension packages order facilitate complex epidemiological research. paper provide technical description framework demonstrate basic examples. also discuss specify extend framework user-deﬁned models. cattle reservoir salmonella verotoxin-producing escherichia coli important examples zoonotic food-borne pathogens. order develop eﬀective control strategies necessary understand spread zoonotic diseases cattle population since cattle aggregated spatially segregated farms natural metapopulation framework partition cattle population interacting subpopulations furthermore livestock data commonly available information births deaths movements consequently detailed spatiotemporal demographic data transportation network available used epidemiologically relevant factors simulating infection process within subpopulation coupled spread among subpopulations governed spatial proximity livestock movements. however incorporating large amounts data simulations computationally challenging requires eﬃcient algorithms. work present package siminf ﬂexible framework data-driven spatio-temporal disease spread modeling designed eﬃciently handle population demographics network data. framework integrates infection dynamics subpopulation continuous-time markov chains using gillespie stochastic simulation algorithm incorporates available data births deaths movements scheduled events. scheduled event used modify state subpopulation predeﬁned time-point. using compiled code rather interpreted code numerical solvers ensures high performance simulating model. improve performance openmp used divide work multiple processors perform computations parallel. furthermore framework well-deﬁned interface incorporate data shared among subpopulations data speciﬁc subpopulation allowing sophisticated models straightforwardly formulated. proposed approach used study spread control vtec complete swedish cattle population incorporating almost years scheduled events data network subpopulations even development siminf inspired livestock diseases models driven available data design completely general character applies arbitrary metapopulation models. design goal make siminf extendable enable usage numerical solvers extension packages order facilitate complex epidemiological research. support this siminf functionality generate required code model speciﬁcation. various packages cran repository implement simulate continuous-time stochastic process. gillespiessa package cran since apparently actively maintained implements direct method three approximate methods. hybridmodels package uses gillespiessa internally simulate infections using metapopulation model coupled spread among subpopulations. since outcome stochastic process diﬀerent necessary study many realisations process distribution outcomes consistent model structure parameterization. therefore performance simulator becomes critical using methods applied context. algorithms gillespiessa implemented computational eﬃciency limited comparison implementations compiled language example c++. adaptivetau package uses hybrid r/c++ strategy implement direct method adaptive leaping exists several related packages epidemiological analysis comprehensive archive network example package amei designed ﬁnding optimal intervention strategies minimize total expected cost control disease outbreak. another package surveillance framework monitoring modeling regression analysis infectious diseases epimodel package that includes framework figure illustration movements temporal network. time step depicts movements time unit example day. network nodes node infected nodes non-infected. arrows indicate movements individuals source node destination node labels denote size shipment. here infection spread node node node node remainder paper organized follows. summarize mathematical foundation framework. section gives technical description simulation framework. illustrate package worked examples. demonstrate extend siminf user-deﬁned models. finally provide small mathematical modeling dynamics infectious disease population population study commonly divided compartments representing discrete health states together assumptions transition rates individuals move compartment another order capture spatial characteristics disease process compartment model partioned metapopulations i.e. subpopulations infection dynamics since population size subpopulation small often necessary stochastic models e.g. account random event infection become extinct stochastic compartment model naturally formulated ctmc using simulate number individuals within compartment time consequently often used modeling various infectious diseases example ebola virus disease outbreak seasonality inﬂuenza epidemics avian inﬂuenza virus bird populations paratuberculosis infection cattle order model disease spread larger scale infection process within subpopulation must coupled spread among subpopulations. example livestock movements important transmission route many infectious diseases transfer infectious individuals farms large distances livestock movements create complex dynamic interactions among farms represented directed temporal network moreover movement forms edge nodes following edges time infection network spread node node. three distinct nodes. illustrated figure exists edge mean exists edge moreover existence edge imply exists path furthermore note order edges matter consider swapping ﬁrst second time step figure another path spread possible namely node node node siminf. overall approach consists ctmcs general model dynamics epidemiological state. importantly also allow variables obeying ordinary diﬀerential equations example readily supports modeling infections indirect transmission route e.g. shedding pathogen environment additionally framework handles externally §.–. distinguish deﬁned demographic movement events. local dynamics describes evolution epidemiological state single node global dynamics describes system network level. overall numerical approach underlying siminf described draw much material describe state single node state vector zncomp compartments stochastic described transition matrix zncomp×ntrans transition intensities zncomp form random counting measure associated poisson process intensity turn depends state prior transition time randomness discreteness state variable present latter formulation. features thought important accurate stochastic alternative relying markovian memoryless assumption. however situations would like discrete stochastic model concentration-type model. multi-scale description typically variables continuous description natural typical example concentration bacteria infectious environment individual counting would clearly feasible. nnodes} node index. consider nnodes nodes vertices undirected graph interactions deﬁned terms counting measures represents state changes inﬂow individuals node node represents inﬂow individuals node node assuming node connected component node vice versa. denote connected components graph similarly concentration variable nodes network. example could natural modeling target concentration variables transported surface water air. combining obtain overall dynamics note equivalently employed externally scheduled events given data using equivalent construction terms dirac measures. case example intra-nodal transport data individuals available. figure schematic overview functionality siminf. central object class simlnf_model contains speciﬁcation data model. model object created using mparse predeﬁned template example seir. stochastic trajectory simulated model using run. computational eﬃciency numerical solvers implemented code. several functions siminf facilitate analysis post-processing simulated data example trajectory prevalence plot. siminf supports usage numerical solvers packages linkingto feature overall design siminf inspired partly adapted unstructured mesh reaction-diﬀusion master equation framework siminf uses object oriented programming class siminf_model central provides basis framework. siminf_model object supplies state-change matrix dependency graph scheduled events initial state system. brieﬂy state-change matrix deﬁnes eﬀect disease transitions state system dependency graph indicates transition rates need updated given disease transition. additionally model speciﬁc code written speciﬁes transition rate functions disease transitions system. predeﬁned models siminf generating function name model initialize data structures vides several utility functions inspect simulated data example show summary plot. facilitate custom analysis siminf provides trajectory prevalence methods return data.frame simulated data. figure shows schematic overview functionality siminf. overall modular design makes extensions easy handle. recent stable version siminf distributed cran depending platform available source form compiled binary form. development version available github binary form siminf macos windows installed directly cran. however install siminf source installation process requires compiler scientiﬁc library installed system path. windows machine ﬁrst need download install rtools https//cran.r-project.org/bin/windows/rtools. note add-on package needs installed separately example terminal using ’sudo apt-get install libgsl-dev’ debian ubuntu ’sudo install gsl-devel’ fedora centos rhel ’brew install gsl’ macos homebrew package manager. windows ﬁles downloaded needed https//github.com/rwinlib/gsl installation siminf. furthermore install siminf source depending features compiler package compiled support openmp. installing add-on packages general installation administration’ manual describes process detail. after installing package within-node disease spread model siminf speciﬁed compartment model individuals divided compartments deﬁned discrete disease statuses. model deﬁned slots class siminf_model compartments contains number individuals ncomp disease states every nnodes nodes. slots slot state-change matrix determines change number individuals compartments node state transition occurs ntrans. corresponds compartment column state transition. number individuals compartment node time move simulation time forward node ti+τi vector updated according transition adding state-change vector dependency graph indicates transition rates need updated given state transition occurred. non-zero entry element indicates transition rate needs recalculated state transition occurs. sparse vector increasing time points state node returned. result matrix number individuals compartment every node. contains number individuals compartment tspan. contains number individuals compartment node tspan. contains number individuals possible simulator write number individuals compartment u_sparse sparse matrix save memory model contains many nodes time-points data points interest. u_sparse non-empty called non-zero entries u_sparse indicates number individuals written u_sparse. layout data u_sparse identical please note data u_sparse numeric data integer. initial number individuals compartment every node. integer matrix possible simulator write real-valued continuous state v_sparse sparse matrix save memory model contains many nodes time-points data points interest. v_sparse non-empty called non-zero entries v_sparse indicates real-valued continuous state written v_sparse. layout data v_sparse identical numeric matrix local data speciﬁc node. column ldata contains local data vector node local data vector passed argument transition rate functions post time step function. numeric vector global data common nodes. global data vector passed argument transition rate functions post time step function. scheduled events modify discrete state individuals node pre-deﬁned table description slots class siminf_model deﬁnes epidemiological model. ntrans number state transitions model. ncomp number compartments model. nnodes number nodes model. number local data speciﬁc node equals dim. dependency graph matrix determines transition rates needs recalculated state transition occurs ntrans. furthermore ﬁnal step incorporated using model speciﬁc post time step callback allow update concentration variable model-speciﬁc data passed transition-rate functions post time-step function stored slots ldata gdata siminf_model object. ldata matrix holds local data node ldata data vector node data global i.e. shared nodes stored gdata vector. simulation trajectory state system written matrices happens occasion simulation time passes time point tspan vector increasing time points. ﬁrst last element tspan determines startend-point simulation. column contains number individuals ncomp rows contains compartments ﬁrst node. next ncomp rows contains compartments second node etc. matrix contains output continuous state variables. column contains values tspan. rows grouped node number rows node determined number continuous state variables speciﬁc model. also possible conﬁgure simulator write state system sparse matrices u_sparse v_sparse save memory model contains many nodes time-points data points interest. order feature call methods data.frame specify nodes time-points compartments simulator write state system. initial state node speciﬁed matrices initial number individuals compartment node initial continuous state node scheduled events used modify discrete state individuals node pre-deﬁned time four diﬀerent types events; enter internal transfer external transfer exit. enter event adds individuals node example births. internal transfer event moves individuals compartments within node. example simulate vaccination move individuals vaccinated compartment ageing according birth records age-structured model external transfer event moves individuals compartments node compartments destination node. finally exit event removes individuals node example death. event types classiﬁed operate corresponds compartment model. non-zero entries column indicate compartments sample individuals processing event. column event speciﬁed select vector sparse matrix class dgcmatrix. determines individuals internal transfer external transfer events shifted enter another compartment. corresponds compartment model. values column added current compartment sampled individuals specify destination compartment example value entry means sampled individuals compartment moved next compartment. column event speciﬁed shift vector integer matrix. four event types supported current solvers exit enter internal transfer external transfer. assigning events data.frame either coded numerical value character string exit; ’exit’ enter; ’enter’ internal transfer; ’inttrans’ external transfer; ’exttrans’. internally siminf event type coded numerical value. time event occurs i.e. event processed time reached simulation. time integer vector. node event operates also source node external transfer event. node integer vector node nnodes. destination node external transfer event i.e. individuals moved node dest dest nnodes. event event types. process event compartments aﬀected event speciﬁed select together matrix select determines column use. speciﬁc individuals aﬀected event proportionally sampled compartments corresponding non-zero entries speciﬁed column select integer vector. determines individuals internal transfer external transfer events shifted enter another compartment. sampled individuals shifted according column shift matrix i.e. shift integer vector. description table description slots class siminf_events holds data process scheduled events modify discrete state individuals node pre-deﬁned time index vectors represent event. nnodes number nodes model. continuous state vector used model continuous state vector node post time step. exists ptsfun. compartment state vector node. current continuous state vector node. local data vector node. global data vector common nodes. node index. note node index zero-based i.e. ﬁrst node current time simulation. model. <select non-zero entry column includes compartment event operation. deﬁnitions operations involved quickly overview schematic diagrams illustrating prepared refer figures appendix enter event adds individuals compartment node compartment speciﬁed non-zero entry compartment column please note that column contains several non-zero entries individuals added compartment represented ﬁrst non-zero column values dest proportion shift described below used processing enter event. figure appendix illustration scheduled enter event. internal transfer event moves individuals compartments within node. however equals zero number individuals move calculated multiplying proportion total number individuals compartments represented non-zero entries column individuals proportionally sampled removed compartments speciﬁed next step move sampled individuals compartment using matrix shift compartment model values determine move sampled individuals adding node again. <shift non-zero entry deﬁnes number rows move sampled individuals compartment i.e. sampled external transfer event moves individuals node dest. sampling individuals node performed internal transfer event. compartments node updated subtracting sampled individuals adding compartments dest. sampled individuals added compartments dest node unless shift case sampled individuals change compartments according described processing internal transfer event adding dest. figures appendix illustrations scheduled external transfer events. exit event removes individuals node. sampling individuals node performed internal transfer event. compartments node updated subtracting sampled individuals. values dest shift used processing exit event. figure appendix illustration scheduled exit event. siminf package uses ability interface compiled code chambers solvers implemented compiled language called using .call interface using code rather interpreted code ensures high performance running model. improve performance further numerical solvers openmp divide work multiple processors perform computations parallel. numerical solvers currently supported. default solver split-step method named ’ssm’ uses direct every unit time also processes scheduled events calls post time step function. solver implements events method named ’aem’. similarly also processes scheduled events calls post time step function every unit time. core feature ’aem’ solver transition events carried channels access private streams random numbers contrast ’ssm’ solver uses stream events. ﬂexibility solver partly achieved using function pointers function pointer variable stores address function used invoke function. provides simple incorporate model speciﬁc functionality solver. model must deﬁne transition rate function state transition model. functions called solver calculate transition rate state transition node. output transition rate function depends state system current time. however output unique model data reason passed function calculation. furthermore model must deﬁne post time step function. function called node time simulation continuous-time markov chain reaches next events processed. main purpose post time step function allow model update continuous state variables node. transition rate function deﬁned data type trfun post time step function data type ptsfun. data types deﬁned header ’src/siminf.h’ shown below. arguments v_new ldata gdata node functions described table follows overview steps solver performs trajectory appendix pseudo-code ’ssm’ solver ’src/solvers/ssm/siminf_solver.c’ source code. simulation starts call method model ﬁrst argument optionally number threads use. method ﬁrst call validity method model perform error-checking call model speciﬁc function initialize function pointers transition rate functions post time step function model. subsequently simulation solver called trajectory using model speciﬁc data transition rate functions post time step function. c_code slot non-empty code written temporary method called. temporary compiled using shlib’ resulting dynamically loaded. unloaded temporary ﬁles removed running model. solver simulates trajectory parallel openmp available. default available threads. however user specify number threads use. solver divides data nnodes nodes events number threads. events aﬀect node processed thread node simulated events processed main thread. occurred time next event computed recalculating aﬀected transition rate functions simulated time reaches next node events processed node events processed nodes reaches next thereafter post time step function called allow model incorporate section illustrates speciﬁcation predeﬁned model contains three compartments susceptible infected recovered transmission route infection susceptible individuals direct contact susceptible infected individuals. model state transitions node transmission rate recovery rate. create model object need deﬁne data.frame initial number individuals compartment simulation starts. consider node susceptible infected recoverd individuals. since between-node interactions example stochastic process node aﬀect nodes model. consequently straightforward many realizations model simply replicating node example times. next deﬁne time period want simulate disease spread. vector integers units time vector dates. specify time points wish model return results for. model discrete time steps continuous time aﬀect internal calculations disease transitions time. example assume unit time simulate days returning results every day. ready create model routine simulate data reproducibility ﬁrst call set.seed function also specify number threads simulation. available threads remove threads argument. return value siminf_model object single stochastic solution trajectory attached show method siminf_model class prints basic information model global data parameters extremes mean quartiles count compartment across nodes. plot method siminf_model class used visualize simulated trajectory. default plot display median count compartment across nodes colored line together inter-quartile range using color transparency. display outcome individual nodes specify subset nodes plot using node parameter range false. example outbreak likely occur infected node sometimes infectious disease become extinct causes epidemic shown figure modeling simulation studies require custom data analysis simulation data generated. support this siminf provides trajectory method obtain data.frame number individuals compartment time points speciﬁed tspan. excerpt simulated data ﬁrst node clearly shows outbreak there. extract data every node remove node argument. consult help page trajectory parameter options. figure output stochastic model nodes starting susceptible infected recovered individuals node between-node interactions. left default plot shows median inter-quartile range count compartment time across nodes. right realizations subset nodes. example continue work predeﬁned model illustrate demographic data incorporated simulation. order numerical solver process scheduled event compartments involved event must speciﬁed. done event speciﬁes column select matrix using select attribute event. non-zero entries selected column specify involved compartments. predeﬁned model deﬁned means specify scheduled event operate single compartment well event involves three compartments. several compartments involved event individuals aﬀected event sampled without replacement speciﬁed compartments. numerical solver performs extensive error checking event processed. error raised event invalid example event tries move individuals exists speciﬁed compartments. illustrate small example consisting nodes scheduled events alter composition within nodes simulation. start empty nodes create enter events susceptible individuals node ﬁrst time-steps. figure shows realization model incorporating events. observe transmission processes diﬀerent scales. first stochastic transmission process within node. secondly between-node transmission movements. also stochastic sampling process select susceptible infected recovered individuals move nodes. figure model nodes scheduled events. left realization susceptible individuals added ﬁrst time-steps. then infected individual introduced further movements occurred finally twenty percent individuals removed. right comparison deterministic dynamics introducing infected individual. code model deﬁned source ’src/models/sir.c’. contains sir_run function initialize core solver transition rate functions post time step function illustrate local data continuous state variables formulate complex model variables obeying odes. moreover introduce prevalence method another important function post-processing trajectories. consider vtec cattle example. brieﬂy vtec infection cattle formulated susceptible-infected-susceptible compartment model. however previous modeling shown important consider within between-farm transmission environment ambient temperature herd size between-farm spread livestock movements therefore predeﬁned sise_sp model. compartment model shedding pathogen environment. moreover also includes spatial coupling environmental contamination among proximal nodes capture between-node spread unrelated moving infected individuals. consequently model state transitions transition rate unit time susceptible infected proportional concentration environmental contamination node moreover transition rate infected susceptible recovery rate measured individual unit time. finally environmental infectious pressure evolved average shedding rate pathogen environment infected individual size node next comes spatial coupling among proximal nodes rate local spread distance holdings seasonal decay removal pathogen captured environmental infectious pressure node evolved post-time-step function euler forward method value saved matrix time-points speciﬁed tspan. location farm nodes deﬁnes initial cattle population events contains four years scheduled events data moreover deﬁne proximal neighbors neighbors within utility function distance_matrix estimate distance farms within cutoﬀ. sise_sp model contains parameters global local scale. here parameter values chosen proportion infected nodes trajectory displays seasonal pattern. global parameters spatial coupling shedding rate alpha recovery rate gamma indirect transmission rate upsilon moreover global parameter captures decay pathogen four seasons beta_t beta_t beta_t beta_t however duration season local node speciﬁed year season ends. here simplicity end_t end_t end_t end_t nodes. furthermore distances nodes local data extracted distance d_ik. finally beginning simulation prevalence method explore proportion infected nodes time. takes model object formula speciﬁcation left hand side formula speciﬁes compartments representing cases i.e. attribute disease. right hand side formula speciﬁes compartments risk. here interested proportion nodes least infected individual therefore formula specify type \"nop\". consult help page prevalence parameter options. results figure indicate reducing spatial coupling suﬃcient eradicate infection synthetic cattle population. nevertheless short example serves template using siminf computational framework implementing large scale data-driven disease spread models exploring options control. figure exploring options reducing disease spread. reference trajectories showing proportion infected nodes proportion infected nodes reducing spatial coupling design goals siminf make extendable. current design supports ways extend siminf models section describes relevant steps implement model. since extending siminf requires code compiled ﬁrst need install compiler. read interfacing compiled code creating add-on packages ’writing extensions’ manual oﬃcial guide describes process detail. another useful resource packages’ book wickham simplest deﬁne model siminf model parser method mparse. takes character vector transitions form propensity generates code model. left hand side ﬁrst ’->’-sign initial state right hand side last ’->’-sign ﬁnal state propensity written transitions compartments variables together constants build object class ’siminf_model’ call mparse. also needs initialized initial condition tspan. earlier examples model object used simulate data plot results. internally code generated mparse written temporary method called. temporary compiled successfully resulting dynamically loaded used trajectory model. simulator completes unloaded temporary ﬁles removed. ﬂexibility mparse approach allows quick prototyping models features. elaborate previous example explore incidence cases day. easily done adding compartment ’icum’ whose sole purpose keep track many individuals become infected time. right hand side icum’ transition b*s*i/ icum’ means ’icum’ incremented time transition happens. since between-node movements example stochastic process node aﬀect nodes model. therefore straightforward many realizations model simply replicating node initial condition example times. post-process simulated trajectory compare incidence cases ﬁrst node average incidence cases among realizations extracting trajectory data calculate successive diﬀerences ’icum’ time-point. illustrate models generated using mparse incorporate scheduled events consider epidemic population consisting nodes example cattle herds connected livestock movements. assume outbreak detected twenty-one introduction infection node wish explore vaccination could limit outbreak resources vaccination handle herds animals herd. compartment model figure realization epidemic curve displaying number incident cases node simulating days mparse model starting susceptible infected recovered individuals. average number incident cases realizations model. generate vaccination events i.e. internal transfer events. select shift move animals susceptible infectious recovered compartments vaccinated compartment deﬁnitions below. start vaccinations nodes twenty-one continue herds vaccinated ﬁfty-two. moreover proportion vaccinate animals herd. assume sake simplicity vaccinated individuals become immune non-infectious immediately. simulate model deﬁne select matrix handle compartments sample processing scheduled event. ﬁrst column handle enter events newborn animals susceptible compartment second column exit events external transfer events sample animals compartments. finally third column internal transfer events sample individuals compartments. must also deﬁne shift matrix process internal transfer events move sampled animals compartment four steps forward compartment. similarly move sampled animals compartment three steps forward compartment ﬁnally move sampled individuals compartment step forward. create epicurve function estimate average number cases realizations for-loop simulate trajectory time. clear infection introduced previous trajectory animals ﬁrst moved susceptible compartment. then infected individual introduced randomly sampled node population. note suﬃx create integer value rather numeric value. model accumulate icum. eﬃciency as.is true internal matrix format extract icum every node time-point tspan. figure comparison beween number cases outbreak unvaccinated population cattle herds vaccination animals vertical line indicates vaccination initiated. another possibility extend siminf creating add-on package uses siminf linking core solver native routine. facilitate this siminf package includes package_skeleton method automate setup source package. creates directories saves code ﬁles appropriate places creates skeleton help ﬁles. even siminf designed study dynamics infectious diseases limited case used study dynamics systems. consider wish create add-on package predatorprey based rosenzweig-macarthur predator-prey model demonstrated gillespiessa package model density-dependent growth prey nonlinear type- functional response predator denote number prey predators respectively. model consists transitions prey birth prey death non-predatory events iii) prey death predation predator birth predator death capita birth death rate prey predator respectively. moreover carrying capacity prey predation eﬃciency degree predator saturation using parameter values pineda-krch deﬁne model assume initial population consists prey predators interested simulating replicates days. since between-node movements example generate replicates simply starting identical nodes. figure left phase plane trajectories realizations rosenzweig-macarthur predator-prey model. right realization rosenzweig-macarthur predator-prey model predators extinct prey population ﬂuctuates around plateu individuals. path package. note temporary directory used illustration functionality. refer siminf documentation arguments supplied package_skeleton method. created deﬁnes class predatorprey contains siminf_model generating function create object predatorprey model. generating function template might need extended meet speciﬁc requirements model. deﬁnes function state transition post time step function model speciﬁc function. automatically compiled installing package. header \"siminf.h\" contains declarations functions must included. siminf_model_run function interface core solver list function pointers transition rate functions vector order state transitions appear dependency graph listings appendix example predeﬁned model siminf address operator obtain address function. siminf_model_run function must return result call core solver siminf_run. arguments siminf_run arguments passed siminf_model_run function plus vector function pointers transition rate functions function pointer post time step function. add-on predatorprey source package built installed following commands. repos null install local ﬁles type \"source\" compile ﬁles. installation successful newly installed package predatorprey loaded following command. comprehensive analysis performance numerical solver siminf presented bauer here provide small benchmark run-time model using three packages cran. measurements obtained thinkpad intel core i-hq quad-core .ghz running fedora using version replicates performed average run-time estimated generate realizations model parameters initial conditions shown table implementation siminf appears times faster adaptivtau. diﬀerence probably depends adaptivetau using hybrid r/c++ implementation code transition rate functions siminf uses code. reduce run-time further siminf built-in support perform computations parallel. expected gillespiessa longest run-time since implementation pure paper introduced package siminf supports data-driven simulations disease transmission spatio-temporal networks. package oﬀers eﬃcient highly ﬂexible tool incorporate real data simulations realistic scales. hope package facilitate incorporating available data example livestock data network epidemic models better understand disease transmission temporal network improve design intervention strategies endemic emerging threats. future eﬀorts concentrated software development driven predominantly actual cases. work ﬁnancially supported swedish research council within upmarc linnaeus centre excellence swedish research council formas swedish board agriculture swedish strategic research program essence authors also thank anonymous reviewers helpful suggestions comments greatly improved quality software package manuscript.", "year": "2016"}