{"title": "Modular dynamical systems on networks", "tag": "q-bio", "abstract": " We propose a new framework for the study of continuous time dynamical systems on networks. We view such dynamical systems as collections of interacting control systems. We show that a class of maps between graphs called graph fibrations give rise to maps between dynamical systems on networks. This allows us to produce conjugacy between dynamical systems out of combinatorial data. In particular we show that surjective graph fibrations lead to synchrony subspaces in networks. The injective graph fibrations, on the other hand, give rise to surjective maps from large dynamical systems to smaller ones. One can view these surjections as a kind of \"fast/slow\" variable decompositions or as \"abstractions\" in the computer science sense of the word. ", "text": "propose framework study continuous time dynamical systems networks. view dynamical systems collections interacting control systems. show class maps graphs called graph ﬁbrations give rise maps dynamical systems networks. allows produce conjugacy dynamical systems combinatorial data. particular show surjective graph ﬁbrations lead synchrony subspaces networks. injective graph ﬁbrations hand give rise surjective maps large dynamical systems smaller ones. view surjections kind fast/slow variable decompositions abstractions computer science sense word. fundamental question study dynamical systems determine existence properties intertwines dynamics diﬀerent systems. stated concretely given manifolds ﬂows exist common restriction requires invertible. case said exhibited conjugacy dynamical systems means dynamical features same. notion conjugacy dynamical systems goes back least poincar´e developed smale collaborators basic notion modern dynamical systems theory. general notion conjugacy arises relaxation assumption invertibility; here existence still produces signiﬁcant information. example ﬁxed point exhibit one-point satisﬁes given eπit/t existence satisfying amounts periodic orbit period also common chosen surjective. case typically termed semiconjugacy certain nice properties follow. expand here exploit existence semi-conjugacies networked systems section question determining whether relating dynamical systems exists properties might exceedingly diﬃcult general. cases even known exist determining form challenging. diﬀerent direction dynamical systems deﬁned networks become fundamental object study across variety ﬁelds. examples include design communications networks cognitive science computational neuroscience robotics multiple deﬁnitions literature means deﬁne dynamical system network compare here. common thread running deﬁnitions imposing network structure dynamical system mean component system depends upon component system underlying graph edge paper show imposition network structure dynamical system allows produce maps dynamical systems precise computable combinatorial manner ﬁnite data. thus purpose manuscript twofold ﬁrst present notion dynamical system consistent graph; second show certain maps graphs induce maps dynamical systems live them. particular show graph maps respect particular combinatorial structure induce maps dynamical systems living graphs. focus case dynamics modeled vector ﬁelds manifolds. interactions subsystems coded directed graphs labels. labels particular assign node graph phase space relevant subsystem.the ideas paper extended discrete-time hybrid stochastic systems plan future work. stated above main result paper construction maps dynamical systems maps labeled graphs. particular show surjective maps graphs arising quotienting graph appropriate equivalence relation give rise embeddings dynamical systems; second injective maps graphs give rise submersions corresponding phase spaces surjective maps dynamical systems. former useful characterizing modularity networked dynamical system; latter gives precise mathematical formulation intuitive notions whether think large dynamical system driven subsystem. ﬁrst body work mainly applied chemical reaction systems speciﬁc cases petri nets; work used deterministic stochastic settings. earliest results direction zero deﬁciency theorem feinberg ﬁrst used show existence stable equilibria biochemical systems expanded statements existence structure equilibria stochastic biochemical systems type methodology also expanded petri nets models describing gene regulatory networks second body work golubitsky stewart various collaborators authors considered notion odes consistent graph structure. resulting networks called coupled cell systems approach groupoid formalism.the main idea consider balanced equivalence relations vertices graph. showed relations lead existence certain invariant subspaces termed polydiagonals. quotient maps resulting balanced equivalence relations instances graph ﬁbration sense boldi vigna however greatly indebted body work intellectual inspiration also point alternative approach coupled cell systems developed field collaborators also considered odes types dynamical systems consistent directed graphs. approach considered broadly equivalent golubitsky paper propose framework study continuous time dynamical systems networks. view dynamical systems collections interacting control systems. show class maps graphs called graph ﬁbrations give rise maps dynamical systems networks. allows produce conjugacy dynamical systems combinatorial data. current work certainly inspired methods results feinberg golubitsky lesser extent field groups approach results diﬀer several important respects. meta-mathematical principle ﬁrst studies objects studies maps objects preserve objects’ properties maps become objects study tries nice structure collection maps set-up coordinate-free works vector ﬁelds manifolds case enlarging scope feinberg work golubitsky aspect approach similar work field several motivations working manifolds opposed odes living euclidean spaces. include dealing eﬀectively constraints extending results setting geometrical mechanics. evident construction quotient maps graphs balanced equivalence relations special cases graph ﬁbrations surjective graph ﬁbrations. however even case surjective graph ﬁbrations maps dynamical systems opposite direction maps groupoid formalism. rather restricting polydiagonals extend polydiagonals. allows deal surjective general graph ﬁbration footing. subsystems maps come from? obvious symmetry preserves vector ﬁeld ﬁxes diagonal thus could account existence invariant submanifold. -preserving symmetry ﬁxes fact vector ﬁeld seem symmetry. graph recording interdependence variables three vertices three arrows graph non-trivial symmetries. nonetheless existence subsystems whole diagram dynamical systems deduced certain properties graph surjective maps graphs pattern holds replace vector space arbitrary manifold given pair manifolds think control system points controlling dynamics consider vector ﬁeld accounts patterns seen? notice dynamical systems constructed control system time graphs every vertex exactly incoming arc. coincidence. rough idea technology generalizes example this dynamical system made repeated control system modules whose couplings encoded graphs appropriate maps graphs lift maps dynamical systems. making precise requires number constructions theorems; make bulk paper. dependency mean following. node network corresponds single dynamical variable living particular manifold. require variable corresponding node depend variable corresponding node edge graph node node give precise description requirement denote space vector ﬁelds property section deﬁnition. rough idea modularity ever multiple nodes graph same same inputs require nodes interchangeable dynamical system. speaking precisely assume network node type ever nodes type inputs graph inputs type vector ﬁeld deﬁned nodes must depend inputs exactly manner. denote vector ﬁelds respect principle modularity give precise deﬁnition vector ﬁelds section goal section deﬁne networks dynamics networks context continuous time dynamical systems. uncommon read network graph. could complete story since network usually means collection interconnected subsystems. make precise. construct network graph need attach phase spaces vertices. since interested continuous time dynamical systems choose phase spaces manifolds. choices course also reasonable coordinate vector spaces manifolds corners. however convenient choose ordering vertices slightly diﬀerent notion product. version product used example chemical reaction network literature consistent assigning phase spaces graphs take construction continuous time dynamical systems compatible structure network. build vector ﬁelds total phase spaces networks interconnecting appropriate open systems. notion interconnection borrowed extent control theory literature. example willems therefore start recalling deﬁnition open systems essentially brockett control systems want somehow interconnect obtain closed system closed system vector ﬁeld product section tangent bundle additional data need deﬁne interconnection next explain networks manifolds give rise interconnection maps. precisely useful notion input trees directed graph. given graph input tree vertex roughly vertex arrows leading want think graph right follows. vertices main reason thinking collection inﬁnite dimensional vector spaces {ctrl pa)}a∈g vector bundle ﬁnite set. convenient notation space sections bundle control deﬁnition. network above. refer bundle control control bundle network call sections control bundle virtual vector ﬁelds network denote space sections thus subsection choose phase space function manifold typical tuple open subsystems deﬁnes dynamics network triple form make sense require input trees corresponding networks isomorphic canonical maps q.v. remark ..). given network groupoid symmetry able talk invariant elements vector space vector space constituent open subsystems. indeed case. several ways making sense invariants. concrete cuts subspace invariant appropriate equations. need number short technical lemmas. formulate generality needed immediately useful later. point lemmas prove given network natural action symmetry groupoid vector bundle control notion action groupoid vector bundle fairly old. example case vector bundle question collection vector spaces parameterized ﬁnite objects groupoid case control reduces deﬁnition above. proof. need check three conditions listed remark hold ctrl. ﬁrst holds lemma second lemma note ﬁnally construction identity isomorphism ctrl identity linear map. conclude functor where control systems. note case space invariant virtual vector ﬁelds naturally isomorphic space ctrl ctrl. note also ctrl space invariant virtual vector ﬁeld network remark. reader wonder sense sections invariant. several ways answer question. start concrete. note space h-invariant vectors representation group satisﬁes abstractly note space limit functor vect. denotes category object morphisms similarly hard deﬁned equation together evident projections ctrl limit functor ctrl vect. remark. would like think image space invariant virtual vector ﬁelds interconnection space groupoidinvariant vector ﬁelds note literally correct since natural action groupoid either tangent bundle space sections. remark. observed remark graph underlying input tree network network directed tree height isomorphism trees height necessarily sends root ﬁrst tree root second tree. hence isomorphism networks trees height makes sense deﬁne proof proposition easy modify show ctrl well-deﬁned functor groupoid height tree networks isomorphism category vect real vector spaces linear maps. golubitsky stewart collaborators work coupled cell networks additionally attach colors edges graphs. require maps networks preserve colors. particular edges input trees acquire colors canonical maps deﬁning graphs symmetry groupoids consist color preserving isomorphisms. thus point view golubitsky work monochromatic graphs. results paper colored analogues. proofs mutatis mutandis same. proved proposition networks deﬁnes smooth total phase spaces general induce spaces vector ﬁelds phase spaces pg′. induce spaces virtual vector ﬁelds alone spaces groupoid-invariant virtual vector ﬁelds vg′. however natural class maps networks does. following boldi vigna call ﬁbrations. notion graph ﬁbrations old. arouse independently diﬀerent times diﬀerent areas mathematics diﬀerent names. discussion. goal section prove ﬁbration networks naturally deﬁnes linear following sections show maps interconnection maps networks compatible best possible way. consequently ﬁbrations networks give rise maps dynamical systems. example. maps graphs graph ﬁbrations. deﬁne phase spaces functions three graphs assigning every node manifold corresponding maps networks ﬁbrations. restricts isomorphism ﬁber. hence control pullback control pull back sections control moreover vector bundle intertwines actions groupoids pullback ϕ∗w′ groupoid-invariant virtual vector ﬁeld network i.e. ϕ∗w′ diﬀerential here before canonical inclusion graphs. universal property products maps equal components equal. therefore order prove commutes enough show remark. lemma show surjective ﬁbrations networks give rise embeddings dynamical systems. since balanced equivalence relations groupoid formalism golubitsky deﬁne quotient networks balanced equivalence relation give rise surjective maps graphs hence surjective ﬁbration networks sense. thus special case theorem generalizes direction groupoid formalism correspondence invariant subspaces balanced equivalence relations ordinary diﬀerential equations vector ﬁelds manifolds. speciﬁcally theorem generalization manifolds theorem theorem attempt establish converse. speciﬁcally attempt characterize submanifolds total phase spaces networks preserved groupoid invariant vector ﬁelds—we speaking forward direction. section discuss implications theorem consider ﬁbration networks. deﬁnes vertices graph vertices graph general neither injective surjective. however graph ﬁbration surjective vertices automatically surjective edges. similarly graph ﬁbration injective vertices injective edges well. simply talk injective surjective graph ﬁbrations. groupoid trivial input networks corresponding numbered vertices uniquely isomorphic. given vertices exactly analogous isomorphism well statement holds input networks corresponding even numbered vertices. consider injective ﬁbration networks. lemma shows total phase spaces surjective submersion. combining theorem groupoid-invariant virtual vector ﬁeld note also since graphs injective isomorphism. since also graph ﬁbration edges source target image thus image subsystem drives dynamical system words notion injective ﬁbration makes precise intuitive idea subsystem driving larger network. choose phase space functions networks. discussion above choice groupoid invariant virtual vector ﬁeld dynamics subsystem drives entire system intuitively clear graph since feedbacks vertices back purpose section characterize precisely space groupoidinvariant virtual vector ﬁelds network understand better pullback maps induced ﬁbrations networks remark. follows easily deﬁnition groupoid isomorphic equivalence relation objects. denote collection isomorphism classes objects groupoid denote isomorphism class object goal subsection understand pullback groupoid-invariant virtual vector ﬁelds induced ﬁbration networks. always surjective. describe kernel need following concept. remark. pointed remark groupoid formalism golubitsky quotient maps deﬁned balanced equivalence relations surjective. hence spaces groupoid invariant vector ﬁelds network quotient balanced equivalence relation always isomorphic.", "year": "2013"}